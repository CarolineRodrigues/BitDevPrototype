{"version":3,"sources":["import.cmd.ts"],"names":["ImportCmd","constructor","importer","docsDomain","description","report","ids","path","objects","displayDependencies","override","verbose","json","conf","skipNpmInstall","skipDependencyInstallation","merge","skipLane","dependencies","dependents","allHistory","GeneralError","console","log","chalk","yellow","mergeStrategy","R","is","String","options","Object","keys","MergeOptions","includes","join","importOptions","Boolean","writeToPath","objectsOnly","writeConfig","installNpmPackages","importDependenciesDirectly","importDependents","importResults","import","_packageManagerArgs","importDetails","JSON","stringify","dependenciesOutput","isEmpty","components","map","d","component","peerDependencies","flatten","prop","titlePrefix","length","upToDateCount","componentDependencies","details","find","c","id","toStringWithoutVersion","Error","toString","status","formatPlainComponentItemWithVersions","upToDateStr","title","componentDependenciesOutput","green","peerDependenciesOutput","uniq","formatPlainComponentItem","getImportOutput","getVersionsOutput","versions","latestVersion","usedVersion","version","getConflictMessage","filesStatus","conflictedFiles","filter","file","FileStatus","manual","bold","conflictMessage","deprecated","missingDeps","red","undefined","cyan"],"mappings":"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","sourcesContent":["import { Command, CommandOptions } from '@teambit/cli';\nimport chalk from 'chalk';\nimport { compact } from 'lodash';\nimport R from 'ramda';\nimport { WILDCARD_HELP } from '@teambit/legacy/dist/constants';\nimport {\n  ImportOptions,\n  ImportDetails,\n  ImportStatus,\n} from '@teambit/legacy/dist/consumer/component-ops/import-components';\nimport { MergeOptions, MergeStrategy } from '@teambit/legacy/dist/consumer/versions-ops/merge-version/merge-version';\nimport ConsumerComponent from '@teambit/legacy/dist/consumer/component/consumer-component';\nimport GeneralError from '@teambit/legacy/dist/error/general-error';\nimport { immutableUnshift } from '@teambit/legacy/dist/utils';\nimport { formatPlainComponentItem } from '@teambit/legacy/dist/cli/chalk-box';\nimport { Importer } from './importer';\n\nexport default class ImportCmd implements Command {\n  name = 'import [ids...]';\n  shortDescription = 'import components into your current working area';\n  group = 'collaborate';\n  description: string;\n  alias = '';\n  options = [\n    ['p', 'path <path>', 'import components into a specific directory'],\n    [\n      'o',\n      'objects',\n      \"import components objects only, don't write the components to the file system. This is a default behavior for import with no id\",\n    ],\n    ['d', 'display-dependencies', 'display the imported dependencies'],\n    ['O', 'override', 'override local changes'],\n    ['v', 'verbose', 'showing verbose output for inspection'],\n    ['j', 'json', 'return the output as JSON'],\n    ['', 'conf', 'write the configuration file (component.json) of the component (harmony components only)'],\n    ['', 'skip-npm-install', 'DEPRECATED. use \"--skip-dependency-installation\" instead'],\n    ['', 'skip-dependency-installation', 'do not install packages of the imported components'],\n    [\n      'm',\n      'merge [strategy]',\n      'merge local changes with the imported version. strategy should be \"theirs\", \"ours\" or \"manual\"',\n    ],\n    ['', 'dependencies', 'EXPERIMENTAL. import all dependencies and write them to the workspace'],\n    ['', 'dependents', 'EXPERIMENTAL. import component dependents to allow auto-tag updating them upon tag'],\n    [\n      '',\n      'skip-lane',\n      'EXPERIMENTAL. when checked out to a lane, do not import the component into the lane, save it on main',\n    ],\n    [\n      '',\n      'all-history',\n      'relevant for fetching all components objects. avoid optimizations, fetch all history versions, always',\n    ],\n  ] as CommandOptions;\n  loader = true;\n  migration = true;\n  remoteOp = true;\n  _packageManagerArgs: string[]; // gets populated by yargs-adapter.handler().\n\n  constructor(private importer: Importer, private docsDomain: string) {\n    this.description = `import components into your current workspace.\nhttps://${docsDomain}/components/importing-components\n${WILDCARD_HELP('import')}`;\n  }\n\n  async report(\n    [ids = []]: [string[]],\n    {\n      path,\n      objects = false,\n      displayDependencies = false,\n      override = false,\n      verbose = false,\n      json = false,\n      conf,\n      skipNpmInstall = false,\n      skipDependencyInstallation = false,\n      merge,\n      skipLane = false,\n      dependencies = false,\n      dependents = false,\n      allHistory = false,\n    }: {\n      path?: string;\n      objects?: boolean;\n      displayDependencies?: boolean;\n      override?: boolean;\n      verbose?: boolean;\n      json?: boolean;\n      conf?: string;\n      skipNpmInstall?: boolean;\n      skipDependencyInstallation?: boolean;\n      merge?: MergeStrategy;\n      skipLane?: boolean;\n      dependencies?: boolean;\n      dependents?: boolean;\n      allHistory?: boolean;\n    }\n  ): Promise<any> {\n    if (objects && merge) {\n      throw new GeneralError('you cant use --objects and --merge flags combined');\n    }\n    if (override && merge) {\n      throw new GeneralError('you cant use --override and --merge flags combined');\n    }\n    if (skipNpmInstall) {\n      // eslint-disable-next-line no-console\n      console.log(\n        chalk.yellow(`\"--skip-npm-install\" has been deprecated, please use \"--skip-dependency-installation\" instead`)\n      );\n      skipDependencyInstallation = true;\n    }\n    let mergeStrategy;\n    if (merge && R.is(String, merge)) {\n      const options = Object.keys(MergeOptions);\n      if (!options.includes(merge)) {\n        throw new GeneralError(`merge must be one of the following: ${options.join(', ')}`);\n      }\n      mergeStrategy = merge;\n    }\n\n    const importOptions: ImportOptions = {\n      ids,\n      verbose,\n      merge: Boolean(merge),\n      mergeStrategy,\n      writeToPath: path,\n      objectsOnly: objects,\n      override,\n      writeConfig: Boolean(conf),\n      installNpmPackages: !skipDependencyInstallation,\n      skipLane,\n      importDependenciesDirectly: dependencies,\n      importDependents: dependents,\n      allHistory,\n    };\n    const importResults = await this.importer.import(importOptions, this._packageManagerArgs);\n    const { importDetails } = importResults;\n\n    if (json) {\n      return JSON.stringify({ importDetails }, null, 4);\n    }\n    let dependenciesOutput;\n\n    if (importResults.dependencies && !R.isEmpty(importResults.dependencies)) {\n      const components = importResults.dependencies.map((d) => d.component);\n      const peerDependencies = R.flatten(\n        importResults.dependencies.map(R.prop('dependencies')),\n        importResults.dependencies.map(R.prop('devDependencies'))\n      );\n\n      const titlePrefix =\n        components.length === 1\n          ? 'successfully imported one component'\n          : `successfully imported ${components.length} components`;\n\n      let upToDateCount = 0;\n      const componentDependencies = components.map((component) => {\n        const details = importDetails.find((c) => c.id === component.id.toStringWithoutVersion());\n        if (!details) throw new Error(`missing details of component ${component.id.toString()}`);\n        if (details.status === 'up to date') {\n          upToDateCount += 1;\n        }\n        return formatPlainComponentItemWithVersions(component, details);\n      });\n      const upToDateStr = upToDateCount === 0 ? '' : `, ${upToDateCount} components are up to date`;\n      const title = `${titlePrefix}${upToDateStr}`;\n      const componentDependenciesOutput = [chalk.green(title), ...compact(componentDependencies)].join('\\n');\n      const peerDependenciesOutput =\n        peerDependencies && !R.isEmpty(peerDependencies) && displayDependencies\n          ? immutableUnshift(\n              R.uniq(peerDependencies.map(formatPlainComponentItem)),\n              chalk.green(`\\n\\nsuccessfully imported ${components.length} component dependencies`)\n            ).join('\\n')\n          : '';\n\n      dependenciesOutput = componentDependenciesOutput + peerDependenciesOutput;\n    }\n\n    const getImportOutput = () => {\n      if (dependenciesOutput) return dependenciesOutput;\n      return chalk.yellow('nothing to import');\n    };\n\n    return getImportOutput();\n  }\n}\n\nfunction formatPlainComponentItemWithVersions(component: ConsumerComponent, importDetails: ImportDetails) {\n  const status: ImportStatus = importDetails.status;\n  const id = component.id.toStringWithoutVersion();\n  const getVersionsOutput = () => {\n    if (!importDetails.versions.length) return '';\n    if (importDetails.latestVersion) {\n      return `${importDetails.versions.length} new version(s) available, latest ${importDetails.latestVersion}`;\n    }\n    return `new versions: ${importDetails.versions.join(', ')}`;\n  };\n  const versions = getVersionsOutput();\n  const usedVersion = status === 'added' ? `, currently used version ${component.version}` : '';\n  const getConflictMessage = () => {\n    if (!importDetails.filesStatus) return '';\n    const conflictedFiles = Object.keys(importDetails.filesStatus) // $FlowFixMe file is set\n      // @ts-ignore AUTO-ADDED-AFTER-MIGRATION-PLEASE-FIX!\n      .filter((file) => importDetails.filesStatus[file] === FileStatus.manual);\n    if (!conflictedFiles.length) return '';\n    return `(the following files were saved with conflicts ${conflictedFiles\n      .map((file) => chalk.bold(file))\n      .join(', ')}) `;\n  };\n  const conflictMessage = getConflictMessage();\n  const deprecated = importDetails.deprecated ? chalk.yellow('deprecated') : '';\n  const missingDeps = importDetails.missingDeps.length\n    ? chalk.red(`missing dependencies: ${importDetails.missingDeps.map((d) => d.toString()).join(', ')}`)\n    : '';\n  if (status === 'up to date' && !missingDeps && !deprecated && !conflictMessage) {\n    return undefined;\n  }\n  return `- ${chalk.green(status)} ${chalk.cyan(\n    id\n  )} ${versions}${usedVersion} ${conflictMessage}${deprecated} ${missingDeps}`;\n}\n"]}