{"version":3,"sources":["prettier.main.runtime.ts"],"names":["PrettierMain","constructor","logger","createFormatter","context","options","transformers","PrettierModule","configMutator","PrettierConfigMutator","config","transformerContext","check","afterMutation","runTransformersWithContext","clone","PrettierFormatter","raw","provider","loggerExt","createLogger","PrettierAspect","id","MainRuntime","LoggerAspect","addRuntime","Array","isArray","newConfig","reduce","acc","transformer"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAGA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAkBO,MAAMA,YAAN,CAAmB;AACxBC,EAAAA,WAAW,CAASC,MAAT,EAAyB;AAAA,SAAhBA,MAAgB,GAAhBA,MAAgB;AAAE;AACtC;AACF;AACA;AACA;AACA;;;AACEC,EAAAA,eAAe,CACbC,OADa,EAEbC,OAFa,EAGbC,YAAyC,GAAG,EAH/B,EAIbC,cAJa,EAKF;AACX,UAAMC,aAAa,GAAG,KAAIC,yCAAJ,EAA0BJ,OAAO,CAACK,MAAlC,CAAtB;AACA,UAAMC,kBAAkD,GAAG;AAAEC,MAAAA,KAAK,EAAE,CAAC,CAACR,OAAO,CAACQ;AAAnB,KAA3D;AACA,UAAMC,aAAa,GAAGC,0BAA0B,CAACN,aAAa,CAACO,KAAd,EAAD,EAAwBT,YAAxB,EAAsCK,kBAAtC,CAAhD;AACA,WAAO,KAAIK,8BAAJ,EAAsB,KAAKd,MAA3B,EAAmCW,aAAa,CAACI,GAAjD,EAAsDV,cAAtD,CAAP;AACD;;AAMoB,eAARW,QAAQ,CAAC,CAACC,SAAD,CAAD,EAAmD;AACtE,UAAMjB,MAAM,GAAGiB,SAAS,CAACC,YAAV,CAAuBC,2BAAeC,EAAtC,CAAf;AACA,WAAO,IAAItB,YAAJ,CAAiBE,MAAjB,CAAP;AACD;;AA1BuB;;;gCAAbF,Y,aAmBMuB,kB;gCAnBNvB,Y,kBAqBW,CAACwB,sBAAD,C;;AAQxBH,2BAAeI,UAAf,CAA0BzB,YAA1B;;AAEO,SAASc,0BAAT,CACLJ,MADK,EAELJ,YAAyC,GAAG,EAFvC,EAGLF,OAHK,EAIkB;AACvB,MAAI,CAACsB,KAAK,CAACC,OAAN,CAAcrB,YAAd,CAAL,EAAkC,OAAOI,MAAP;AAClC,QAAMkB,SAAS,GAAGtB,YAAY,CAACuB,MAAb,CAAoB,CAACC,GAAD,EAAMC,WAAN,KAAsB;AAC1D,WAAOA,WAAW,CAACD,GAAD,EAAM1B,OAAN,CAAlB;AACD,GAFiB,EAEfM,MAFe,CAAlB;AAGA,SAAOkB,SAAP;AACD","sourcesContent":["import { MainRuntime } from '@teambit/cli';\nimport { Options as PrettierModuleOptions } from 'prettier';\nimport { Formatter, FormatterContext } from '@teambit/formatter';\nimport { Logger, LoggerAspect, LoggerMain } from '@teambit/logger';\nimport { PrettierConfigMutator } from '@teambit/defender.prettier.config-mutator';\nimport { PrettierAspect } from './prettier.aspect';\nimport { PrettierFormatter } from './prettier.formatter';\n\nexport type PrettierOptions = {\n  /**\n   * formatter config for prettier.\n   */\n  config: PrettierModuleOptions;\n};\n\nexport type PrettierConfigTransformContext = {\n  check: boolean;\n};\n\nexport type PrettierConfigTransformer = (\n  config: PrettierConfigMutator,\n  context: PrettierConfigTransformContext\n) => PrettierConfigMutator;\n\nexport class PrettierMain {\n  constructor(private logger: Logger) {}\n  /**\n   * create a prettier formatter instance.\n   * @param options prettier options.\n   * @param PrettierModule reference to an `prettier` module.\n   */\n  createFormatter(\n    context: FormatterContext,\n    options: PrettierOptions,\n    transformers: PrettierConfigTransformer[] = [],\n    PrettierModule?: any\n  ): Formatter {\n    const configMutator = new PrettierConfigMutator(options.config);\n    const transformerContext: PrettierConfigTransformContext = { check: !!context.check };\n    const afterMutation = runTransformersWithContext(configMutator.clone(), transformers, transformerContext);\n    return new PrettierFormatter(this.logger, afterMutation.raw, PrettierModule);\n  }\n\n  static runtime = MainRuntime;\n\n  static dependencies = [LoggerAspect];\n\n  static async provider([loggerExt]: [LoggerMain]): Promise<PrettierMain> {\n    const logger = loggerExt.createLogger(PrettierAspect.id);\n    return new PrettierMain(logger);\n  }\n}\n\nPrettierAspect.addRuntime(PrettierMain);\n\nexport function runTransformersWithContext(\n  config: PrettierConfigMutator,\n  transformers: PrettierConfigTransformer[] = [],\n  context: PrettierConfigTransformContext\n): PrettierConfigMutator {\n  if (!Array.isArray(transformers)) return config;\n  const newConfig = transformers.reduce((acc, transformer) => {\n    return transformer(acc, context);\n  }, config);\n  return newConfig;\n}\n"]}