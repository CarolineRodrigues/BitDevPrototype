{"version":3,"sources":["deprecation.graphql.ts"],"names":["deprecationSchema","deprecation","typeDefs","resolvers","Component","component","getDeprecationInfo"],"mappings":";;;;;;;;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAIO,SAASA,iBAAT,CAA2BC,WAA3B,EAAiE;AACtE,SAAO;AACLC,IAAAA,QAAQ,EAAE,0BAAI;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAtBS;AAuBLC,IAAAA,SAAS,EAAE;AACT;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACAC,MAAAA,SAAS,EAAE;AACTH,QAAAA,WAAW,EAAGI,SAAD,IAA0B;AACrC,iBAAOJ,WAAW,CAACK,kBAAZ,CAA+BD,SAA/B,CAAP;AACD;AAHQ;AAZF;AAvBN,GAAP;AA0CD","sourcesContent":["import { Component } from '@teambit/component';\nimport { Schema } from '@teambit/graphql';\nimport gql from 'graphql-tag';\n\nimport { DeprecationMain } from './deprecation.main.runtime';\n\nexport function deprecationSchema(deprecation: DeprecationMain): Schema {\n  return {\n    typeDefs: gql`\n      extend type Component {\n        deprecation: DeprecationInfo\n      }\n\n      type DeprecationInfo {\n        isDeprecate: Boolean\n      }\n\n      type DeprecationResult {\n        bitIds: [String]\n        missingComponents: [String]\n      }\n\n      type Mutation {\n        # deprecate components\n        deprecate(bitIds: [String!]!): DeprecationResult\n\n        # undo deprecate to components\n        undeprecate(bitIds: [String!]!): DeprecationResult\n      }\n    `,\n    resolvers: {\n      // Mutation: {\n      //   deprecate: (req: any, { bitIds }: { bitIds: string[] }, context: { verb: string }) => {\n      //     if (context.verb !== 'write') throw new Error('You are not authorized');\n      //     return deprecation.deprecate(bitIds);\n      //   },\n\n      //   undeprecate: (req: any, { bitIds }: { bitIds: string[] }, context: { verb: string }) => {\n      //     if (context.verb !== 'write') throw new Error('You are not authorized');\n      //     return deprecation.unDeprecate(bitIds);\n      //   },\n      // },\n      Component: {\n        deprecation: (component: Component) => {\n          return deprecation.getDeprecationInfo(component);\n        },\n      },\n    },\n  };\n}\n"]}