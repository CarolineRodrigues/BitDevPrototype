{"version":3,"sources":["undeprecate-cmd.ts"],"names":["UndeprecateCmd","constructor","deprecation","workspace","report","id","result","undeprecate","chalk","green","bold","isLegacy","bitId","consumer","getParsedId","scope","BitIds","componentId","resolveComponentId","unDeprecate"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAKO,MAAMA,cAAN,CAAwC;AAW7CC,EAAAA,WAAW,CAASC,WAAT,EAA+CC,SAA/C,EAAqE;AAAA,SAA5DD,WAA4D,GAA5DA,WAA4D;AAAA,SAAtBC,SAAsB,GAAtBA,SAAsB;AAAA,kDAVzE,kBAUyE;AAAA,mDATxE,aASwE;AAAA,yDARlE,mDAQkE;AAAA,mDAPxE,EAOwE;AAAA,qDANtE,EAMsE;AAAA,oDALvE,IAKuE;AAAA,uDAJpE,IAIoE;AAAA,2DAHhE,IAGgE;AAAA,sDAFrE,IAEqE;AAAE;;AAEtE,QAANC,MAAM,CAAC,CAACC,EAAD,CAAD,EAAkC;AAC5C,UAAMC,MAAM,GAAG,MAAM,KAAKC,WAAL,CAAiBF,EAAjB,CAArB;;AACA,QAAIC,MAAJ,EAAY;AACV,aAAOE,iBAAMC,KAAN,CAAa,kBAAiBJ,EAAG,sCAAjC,CAAP;AACD;;AACD,WAAOG,iBAAME,IAAN,CAAY,kBAAiBL,EAAG,sDAAhC,CAAP;AACD;;AAEwB,QAAXE,WAAW,CAACF,EAAD,EAAa;AACpC,QAAI,KAAKF,SAAL,CAAeQ,QAAnB,EAA6B;AAC3B,YAAMC,KAAK,GAAG,KAAKT,SAAL,CAAeU,QAAf,CAAwBC,WAAxB,CAAoCT,EAApC,CAAd;AACA,YAAM,8CAAgB,KAAKF,SAAL,CAAeU,QAAf,CAAwBE,KAAxC,EAA+C,KAAIC,eAAJ,EAAWJ,KAAX,CAA/C,CAAN;AACA,aAAO,IAAP;AACD;;AACD,UAAMK,WAAW,GAAG,MAAM,KAAKd,SAAL,CAAee,kBAAf,CAAkCb,EAAlC,CAA1B;AACA,WAAO,KAAKH,WAAL,CAAiBiB,WAAjB,CAA6BF,WAA7B,CAAP;AACD;;AA7B4C","sourcesContent":["import chalk from 'chalk';\nimport { undeprecateMany } from '@teambit/legacy/dist/scope/component-ops/components-deprecation';\nimport { BitIds } from '@teambit/legacy/dist/bit-id';\nimport { Workspace } from '@teambit/workspace';\nimport { Command, CommandOptions } from '@teambit/cli';\nimport { DeprecationMain } from './deprecation.main.runtime';\n\nexport class UndeprecateCmd implements Command {\n  name = 'undeprecate <id>';\n  group = 'collaborate';\n  description = 'undeprecate a deprecated component (local/remote)';\n  alias = '';\n  options = [] as CommandOptions;\n  loader = true;\n  migration = true;\n  skipWorkspace = true;\n  remoteOp = true;\n\n  constructor(private deprecation: DeprecationMain, private workspace: Workspace) {}\n\n  async report([id]: [string]): Promise<string> {\n    const result = await this.undeprecate(id);\n    if (result) {\n      return chalk.green(`the component \"${id}\" has been undeprecated successfully`);\n    }\n    return chalk.bold(`the component \"${id}\" is already undeprecated. no changes have been made`);\n  }\n\n  private async undeprecate(id: string) {\n    if (this.workspace.isLegacy) {\n      const bitId = this.workspace.consumer.getParsedId(id);\n      await undeprecateMany(this.workspace.consumer.scope, new BitIds(bitId));\n      return true;\n    }\n    const componentId = await this.workspace.resolveComponentId(id);\n    return this.deprecation.unDeprecate(componentId);\n  }\n}\n"]}