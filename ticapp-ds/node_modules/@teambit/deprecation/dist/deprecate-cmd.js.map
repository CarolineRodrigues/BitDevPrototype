{"version":3,"sources":["deprecate-cmd.ts"],"names":["DeprecateCmd","constructor","deprecation","workspace","report","id","newId","result","deprecate","chalk","green","bold","isLegacy","bitId","consumer","getParsedId","scope","BitIds","componentId","resolveComponentId","newComponentId","undefined"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAGA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAGO,MAAMA,YAAN,CAAsC;AAW3CC,EAAAA,WAAW,CAASC,WAAT,EAA+CC,SAA/C,EAAqE;AAAA,SAA5DD,WAA4D,GAA5DA,WAA4D;AAAA,SAAtBC,SAAsB,GAAtBA,SAAsB;AAAA,kDAVzE,gBAUyE;AAAA,yDATlE,uBASkE;AAAA,mDARxE,aAQwE;AAAA,2DAPhE,IAOgE;AAAA,mDANxE,GAMwE;AAAA,qDALtE,CAAC,CAAC,EAAD,EAAK,iBAAL,EAAwB,8DAAxB,CAAD,CAKsE;AAAA,oDAJvE,IAIuE;AAAA,uDAHpE,IAGoE;AAAA,sDAFrE,IAEqE;AAAE;;AAEtE,QAANC,MAAM,CAAC,CAACC,EAAD,CAAD,EAAiB;AAAEC,IAAAA;AAAF,GAAjB,EAAiE;AAC3E,UAAMC,MAAM,GAAG,MAAM,KAAKC,SAAL,CAAeH,EAAf,EAAmBC,KAAnB,CAArB;;AACA,QAAIC,MAAJ,EAAY;AACV,aAAOE,iBAAMC,KAAN,CAAa,kBAAiBL,EAAG,oCAAjC,CAAP;AACD;;AACD,WAAOI,iBAAME,IAAN,CAAY,kBAAiBN,EAAG,oDAAhC,CAAP;AACD;;AAEsB,QAATG,SAAS,CAACH,EAAD,EAAaC,KAAb,EAA+C;AACpE,QAAI,KAAKH,SAAL,CAAeS,QAAnB,EAA6B;AAC3B,YAAMC,KAAK,GAAG,KAAKV,SAAL,CAAeW,QAAf,CAAwBC,WAAxB,CAAoCV,EAApC,CAAd;AACA,YAAM,4CAAc,KAAKF,SAAL,CAAeW,QAAf,CAAwBE,KAAtC,EAA6C,KAAIC,eAAJ,EAAWJ,KAAX,CAA7C,CAAN;AACA,aAAO,IAAP;AACD;;AACD,UAAMK,WAAW,GAAG,MAAM,KAAKf,SAAL,CAAegB,kBAAf,CAAkCd,EAAlC,CAA1B;AACA,UAAMe,cAAc,GAAGd,KAAK,GAAG,MAAM,KAAKH,SAAL,CAAegB,kBAAf,CAAkCb,KAAlC,CAAT,GAAoDe,SAAhF;AACA,WAAO,KAAKnB,WAAL,CAAiBM,SAAjB,CAA2BU,WAA3B,EAAwCE,cAAxC,CAAP;AACD;;AA9B0C","sourcesContent":["import chalk from 'chalk';\nimport { Workspace } from '@teambit/workspace';\nimport { Command, CommandOptions } from '@teambit/cli';\nimport { deprecateMany } from '@teambit/legacy/dist/scope/component-ops/components-deprecation';\nimport { BitIds } from '@teambit/legacy/dist/bit-id';\nimport { DeprecationMain } from './deprecation.main.runtime';\n\nexport class DeprecateCmd implements Command {\n  name = 'deprecate <id>';\n  description = 'deprecate a component';\n  group = 'collaborate';\n  skipWorkspace = true;\n  alias = 'd';\n  options = [['', 'new-id <string>', 'if replaced by another component, enter the new component id']] as CommandOptions;\n  loader = true;\n  migration = true;\n  remoteOp = true;\n\n  constructor(private deprecation: DeprecationMain, private workspace: Workspace) {}\n\n  async report([id]: [string], { newId }: { newId?: string }): Promise<string> {\n    const result = await this.deprecate(id, newId);\n    if (result) {\n      return chalk.green(`the component \"${id}\" has been deprecated successfully`);\n    }\n    return chalk.bold(`the component \"${id}\" is already deprecated. no changes have been made`);\n  }\n\n  private async deprecate(id: string, newId?: string): Promise<boolean> {\n    if (this.workspace.isLegacy) {\n      const bitId = this.workspace.consumer.getParsedId(id);\n      await deprecateMany(this.workspace.consumer.scope, new BitIds(bitId));\n      return true;\n    }\n    const componentId = await this.workspace.resolveComponentId(id);\n    const newComponentId = newId ? await this.workspace.resolveComponentId(newId) : undefined;\n    return this.deprecation.deprecate(componentId, newComponentId);\n  }\n}\n"]}