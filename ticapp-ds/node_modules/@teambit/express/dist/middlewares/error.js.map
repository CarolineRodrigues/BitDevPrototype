{"version":3,"sources":["error.ts"],"names":["catchErrors","action","req","res","next","catch","error","errorHandle","err","logger","url","status","jsonp","message"],"mappings":";;;;;;;;;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAOO,MAAMA,WAAW,GAAIC,MAAD,IAAiB,CAACC,GAAD,EAAuBC,GAAvB,EAA8CC,IAA9C,KAC1C;AACA;AACAH,MAAM,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,CAAN,CAAuBC,KAAvB,CAA8BC,KAAD,IAA0BC,WAAW,CAACD,KAAD,EAAQJ,GAAR,EAAaC,GAAb,EAAkBC,IAAlB,CAAlE,CAHK;;;;AAKA,SAASG,WAAT,CACLC,GADK,EAELN,GAFK,EAGLC,GAHK,EAIL;AACA;AACAC,IANK,EAOL;AACAK,oBAAOH,KAAP,CAAc,4BAA2BJ,GAAG,CAACQ,GAAI,UAAjD,EAA4DF,GAA5D;;AACAA,EAAAA,GAAG,CAACG,MAAJ,GAAaH,GAAG,CAACG,MAAJ,IAAc,GAA3B;AACAR,EAAAA,GAAG,CAACQ,MAAJ,CAAWH,GAAG,CAACG,MAAf;AACA,SAAOR,GAAG,CAACS,KAAJ,CAAU;AACfC,IAAAA,OAAO,EAAEL,GAAG,CAACK,OADE;AAEfP,IAAAA,KAAK,EAAEE;AAFQ,GAAV,CAAP;AAID","sourcesContent":["import * as express from 'express';\nimport logger from '@teambit/legacy/dist/logger/logger';\n\ninterface ResponseError {\n  status?: number;\n  message?: string;\n}\n\nexport const catchErrors = (action: any) => (req: express.Request, res: express.Response, next: express.NextFunction) =>\n  // TODO: @guy please take care of it\n  // eslint-disable-next-line promise/no-callback-in-promise\n  action(req, res, next).catch((error: ResponseError) => errorHandle(error, req, res, next));\n\nexport function errorHandle(\n  err: ResponseError,\n  req: express.Request,\n  res: express.Response,\n  // TODO: Do not remove unused next, it's needed for express to catch errors!\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  next: express.NextFunction\n) {\n  logger.error(`express.errorHandle, url ${req.url}, error:`, err);\n  err.status = err.status || 500;\n  res.status(err.status);\n  return res.jsonp({\n    message: err.message,\n    error: err,\n  });\n}\n"]}