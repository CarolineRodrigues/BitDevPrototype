{"version":3,"sources":["app.ts"],"names":["process","on","err","console","error","exit","nativeCompileCache","install","initApp","originalError","argv"],"mappings":";;;;AAQA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAKA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAhBA;;AACA;AACAA,OAAO,CAACC,EAAR,CAAW,mBAAX,EAAiCC,GAAD,IAAS;AACvC;AACAC,EAAAA,OAAO,CAACC,KAAR,CAAc,mBAAd,EAAmCF,GAAnC;AACAF,EAAAA,OAAO,CAACK,IAAR,CAAa,CAAb;AACD,CAJD;AAQA;AACAC,6JAAoBC,OAApB;AAOA;AACAC,OAAO;;AAEP,eAAeA,OAAf,GAAyB;AACvB,MAAI;AACF,UAAM,6BAAN,CADE,CAEF;AACA;;AACA,UAAM,wBAAN;AACD,GALD,CAKE,OAAON,GAAP,EAAiB;AACjB,UAAMO,aAAa,GAAGP,GAAG,CAACO,aAAJ,IAAqBP,GAA3C;AACA,UAAM,wCAAmBO,aAAnB,EAAkCT,OAAO,CAACU,IAAR,CAAa,CAAb,CAAlC,CAAN;AACD;AACF","sourcesContent":["/* eslint-disable import/no-dynamic-require */\n/* eslint-disable import/first */\nprocess.on('uncaughtException', (err) => {\n  // eslint-disable-next-line no-console\n  console.error('uncaughtException', err);\n  process.exit(1);\n});\n\nimport { nativeCompileCache } from '@teambit/toolbox.performance.v8-cache';\n\n// Enable v8 compile cache, keep this before other imports\nnativeCompileCache?.install();\n\nimport './hook-require';\nimport { bootstrap } from '@teambit/legacy/dist/bootstrap';\nimport { handleErrorAndExit } from '@teambit/legacy/dist/cli/handle-errors';\nimport { runCLI } from './load-bit';\n\n// eslint-disable-next-line @typescript-eslint/no-floating-promises\ninitApp();\n\nasync function initApp() {\n  try {\n    await bootstrap();\n    // registerCoreExtensions();\n    // const harmony = await Harmony.load([ConfigExt], {});\n    await runCLI();\n  } catch (err: any) {\n    const originalError = err.originalError || err;\n    await handleErrorAndExit(originalError, process.argv[2]);\n  }\n}\n"]}