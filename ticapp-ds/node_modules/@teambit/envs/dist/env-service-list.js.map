{"version":3,"sources":["env-service-list.ts"],"names":["EnvServiceList","constructor","env","services","toObject","map","id","service","name","description","data","getDescriptor"],"mappings":";;;;;;;;;;;AAGO,MAAMA,cAAN,CAAqB;AAC1BC,EAAAA,WAAW;AACT;AACJ;AACA;AACaC,EAAAA,GAJA;AAMT;AACJ;AACA;AACaC,EAAAA,QATA,EAUT;AAAA,SANSD,GAMT,GANSA,GAMT;AAAA,SADSC,QACT,GADSA,QACT;AAAE;;AAEJC,EAAAA,QAAQ,GAAG;AACT,WAAO;AACLF,MAAAA,GAAG,EAAE,KAAKA,GAAL,CAASE,QAAT,EADA;AAELD,MAAAA,QAAQ,EAAE,KAAKA,QAAL,CAAcE,GAAd,CAAkB,CAAC,CAACC,EAAD,EAAKC,OAAL,CAAD,KAAmB;AAC7C,eAAO;AACLD,UAAAA,EADK;AAELE,UAAAA,IAAI,EAAED,OAAO,CAACC,IAFT;AAGLC,UAAAA,WAAW,EAAEF,OAAO,CAACE,WAHhB;AAIL;AACAC,UAAAA,IAAI,EAAEH,OAAO,CAACI,aAAR,CAAsB,KAAKT,GAA3B;AALD,SAAP;AAOD,OARS;AAFL,KAAP;AAYD;;AA1ByB","sourcesContent":["import { EnvDefinition } from './env-definition';\nimport { EnvService } from './services';\n\nexport class EnvServiceList {\n  constructor(\n    /**\n     * environment\n     */\n    readonly env: EnvDefinition,\n\n    /**\n     * services available on the env.\n     */\n    readonly services: [string, EnvService<any>][]\n  ) {}\n\n  toObject() {\n    return {\n      env: this.env.toObject(),\n      services: this.services.map(([id, service]) => {\n        return {\n          id,\n          name: service.name,\n          description: service.description,\n          // @ts-ignore\n          data: service.getDescriptor(this.env),\n        };\n      }),\n    };\n  }\n}\n"]}