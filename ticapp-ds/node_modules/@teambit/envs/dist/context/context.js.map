{"version":3,"sources":["context.ts"],"names":["ExecutionContext","constructor","upper","envRuntime","components","id","env","envDefinition","EnvDefinition","apply","name","args","Error"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAQO,MAAMA,gBAAN,CAAuB;AAC5BC,EAAAA,WAAW;AACT;AACJ;AACA;AACaC,EAAAA,KAJA;AAMT;AACJ;AACA;AACaC,EAAAA,UATA;AAWT;AACJ;AACA;AACWC,EAAAA,UAAU,GAAGD,UAAU,CAACC,UAdtB,EAeT;AAAA,SAXSF,KAWT,GAXSA,KAWT;AAAA,SANSC,UAMT,GANSA,UAMT;AAAA,SADOC,UACP,GADOA,UACP;AAAA,6DAE0B,EAF1B;AAAE;;AAIJ;AACF;AACA;AACQ,MAAFC,EAAE,GAAG;AACP,WAAO,KAAKF,UAAL,CAAgBE,EAAvB;AACD;AAED;AACF;AACA;;;AACS,MAAHC,GAAG,GAAQ;AACb,WAAO,KAAKH,UAAL,CAAgBG,GAAvB;AACD;;AAEgB,MAAbC,aAAa,GAAkB;AACjC,WAAO,KAAIC,8BAAJ,EAAkB,KAAKH,EAAvB,EAA2B,KAAKC,GAAhC,CAAP;AACD;;AAEDG,EAAAA,KAAK,CAAIC,IAAJ,EAAkBC,IAAlB,EAAkC;AACrC,QAAI,CAAC,KAAKL,GAAL,CAASI,IAAT,CAAL,EAAqB;AACnB,YAAM,IAAIE,KAAJ,CAAW,UAASF,IAAK,kBAAzB,CAAN;AACD;;AAED,WAAO,KAAKJ,GAAL,CAASI,IAAT,EAAeD,KAAf,CAAqB,KAAKH,GAA1B,EAA+B,GAAGK,IAAlC,CAAP;AACD;;AA5C2B","sourcesContent":["import { EnvDefinition } from '../env-definition';\n\nimport { EnvRuntime, Runtime } from '../runtime';\n\nexport type ServiceMap<T> = {\n  [env: string]: T;\n};\n\nexport class ExecutionContext {\n  constructor(\n    /**\n     * upper scope of all environment contexts.\n     */\n    readonly upper: Runtime,\n\n    /**\n     * runtime instance of the environment.\n     */\n    readonly envRuntime: EnvRuntime,\n\n    /**\n     * components applied in the execution context.\n     */\n    public components = envRuntime.components\n  ) {}\n\n  relatedContexts: string[] = [];\n\n  /**\n   * extension ID of the environment\n   */\n  get id() {\n    return this.envRuntime.id;\n  }\n\n  /**\n   * environment instance.\n   */\n  get env(): any {\n    return this.envRuntime.env;\n  }\n\n  get envDefinition(): EnvDefinition {\n    return new EnvDefinition(this.id, this.env);\n  }\n\n  apply<T>(name: string, args: any[]): T {\n    if (!this.env[name]) {\n      throw new Error(`method ${name} not implemented`);\n    }\n\n    return this.env[name].apply(this.env, ...args);\n  }\n}\n"]}