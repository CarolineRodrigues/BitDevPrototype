"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

require("core-js/modules/es.array.iterator.js");

require("core-js/modules/es.promise.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.provide = provide;

function _coreInsightsGetter() {
  const data = _interopRequireDefault(require("./core-insights-getter"));

  _coreInsightsGetter = function () {
    return data;
  };

  return data;
}

function _insightManager() {
  const data = require("./insight-manager");

  _insightManager = function () {
    return data;
  };

  return data;
}

function _insights() {
  const data = _interopRequireDefault(require("./insights.cmd"));

  _insights = function () {
    return data;
  };

  return data;
}

async function provide([graphBuilder, cli]) {
  // get all insights from registry
  const initialInsights = (0, _coreInsightsGetter().default)(graphBuilder); // register all insights in cli
  // TODO - get user-defined insights as well, and use them when instantiating InsightManager and InsightsCmd

  const insightManager = new (_insightManager().InsightManager)(initialInsights);
  const insightsCmd = new (_insights().default)(insightManager);
  cli.register(insightsCmd);
}

//# sourceMappingURL=insight.provider.js.map