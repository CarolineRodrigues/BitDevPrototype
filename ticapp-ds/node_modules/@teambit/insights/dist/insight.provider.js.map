{"version":3,"sources":["insight.provider.ts"],"names":["provide","graphBuilder","cli","initialInsights","insightManager","InsightManager","insightsCmd","InsightsCmd","register"],"mappings":";;;;;;;;;;;;;AAGA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAIO,eAAeA,OAAf,CAAuB,CAACC,YAAD,EAAeC,GAAf,CAAvB,EAAyD;AAC9D;AACA,QAAMC,eAA0B,GAAG,mCAAgBF,YAAhB,CAAnC,CAF8D,CAG9D;AACA;;AACA,QAAMG,cAAc,GAAG,KAAIC,gCAAJ,EAAmBF,eAAnB,CAAvB;AACA,QAAMG,WAAW,GAAG,KAAIC,mBAAJ,EAAgBH,cAAhB,CAApB;AACAF,EAAAA,GAAG,CAACM,QAAJ,CAAaF,WAAb;AACD","sourcesContent":["import { CLIMain } from '@teambit/cli';\nimport { GraphBuilder } from '@teambit/graph';\n\nimport getCoreInsights from './core-insights-getter';\nimport { Insight } from './insight';\nimport { InsightManager } from './insight-manager';\nimport InsightsCmd from './insights.cmd';\n\nexport type InsightDeps = [GraphBuilder, CLIMain];\n\nexport async function provide([graphBuilder, cli]: InsightDeps) {\n  // get all insights from registry\n  const initialInsights: Insight[] = getCoreInsights(graphBuilder);\n  // register all insights in cli\n  // TODO - get user-defined insights as well, and use them when instantiating InsightManager and InsightsCmd\n  const insightManager = new InsightManager(initialInsights);\n  const insightsCmd = new InsightsCmd(insightManager);\n  cli.register(insightsCmd);\n}\n"]}