{"version":3,"sources":["pnpm.package-manager.ts"],"names":["defaultStoreDir","userHome","defaultCacheDir","PnpmPackageManager","constructor","depResolver","pkg","logger","readConfig","_componentsToPnpmWorkspaceProjects","rootDir","rootPolicy","componentDirectoryMap","installOptions","components","toArray","map","component","options","filterComponentsFromManifests","createManifestForComponentsWithoutDependencies","dedupe","dependencyFilterFn","workspaceManifest","getWorkspaceManifest","undefined","rootManifest","toJsonWithDir","copyPeerToRuntime","copyPeerToRuntimeOnRoot","installPeersFromEnvs","componentsManifests","computeComponentsManifests","componentsManifestsMap","copyPeerToRuntimeOnComponents","_getGlobalPnpmDirs","opts","config","packageManagerConfigRootDir","storeDir","cacheRootDir","cacheDir","install","require","debug","setStatusLine","off","registries","getRegistries","proxyConfig","getProxyConfig","networkConfig","getNetworkConfig","nodeLinker","overrides","hoistPattern","publicHoistPattern","packageImportMethod","on","console","consoleSuccess","getPeerDependencyIssues","lynx","componentsManifestsFromWorkspace","reduce","acc","dir","packageName","getPackageName","has","get","toJson","resolveRemoteVersion","maxSockets","networkConcurrency","fetchRetries","fetchTimeout","fetchRetryMaxtimeout","fetchRetryMintimeout","pnpmRegistry","defaultRegistry","Registry","default","uri","alwaysAuth","authHeaderValue","originalAuthType","originalAuthValue","pnpmScoped","scopesRegistries","Object","keys","scopedRegName","scopedReg","name","replace","bit","BIT_DEV_REGISTRY","Registries"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAiBA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAIA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA,MAAMA,eAAe,GAAG,kBAAKC,mBAAL,EAAe,aAAf,CAAxB;AACA,MAAMC,eAAe,GAAG,kBAAKD,mBAAL,EAAe,aAAf,CAAxB;;AAUO,MAAME,kBAAN,CAAmD;AAExDC,EAAAA,WAAW,CAASC,WAAT,EAAsDC,GAAtD,EAA4EC,MAA5E,EAA4F;AAAA,SAAnFF,WAAmF,GAAnFA,WAAmF;AAAA,SAAtCC,GAAsC,GAAtCA,GAAsC;AAAA,SAAhBC,MAAgB,GAAhBA,MAAgB;AAAA,wDADlF,uBAAQC,wBAAR,CACkF;AAAE;;AAEzD,QAAlCC,kCAAkC,CAC9CC,OAD8C,EAE9CC,UAF8C,EAG9CC,qBAH8C,EAI9CC,cAA4C,GAAG,EAJD,EAK1B;AACpB,UAAMC,UAAU,GAAGF,qBAAqB,CAACG,OAAtB,GAAgCC,GAAhC,CAAoC,CAAC,CAACC,SAAD,CAAD,KAAiBA,SAArD,CAAnB;AACA,UAAMC,OAAoC,GAAG;AAC3CC,MAAAA,6BAA6B,EAAE,IADY;AAE3CC,MAAAA,8CAA8C,EAAE,IAFL;AAG3CC,MAAAA,MAAM,EAAER,cAAc,CAACQ,MAHoB;AAI3CC,MAAAA,kBAAkB,EAAET,cAAc,CAACS;AAJQ,KAA7C;AAMA,UAAMC,iBAAiB,GAAG,MAAM,KAAKlB,WAAL,CAAiBmB,oBAAjB,CAC9BC,SAD8B,EAE9BA,SAF8B,EAG9Bd,UAH8B,EAI9BD,OAJ8B,EAK9BI,UAL8B,EAM9BI,OAN8B,CAAhC;AAQA,UAAMQ,YAAY,GAAGH,iBAAiB,CAACI,aAAlB,CAAgC;AACnDC,MAAAA,iBAAiB,EAAEf,cAAc,CAACgB,uBADiB;AAEnDC,MAAAA,oBAAoB,EAAEjB,cAAc,CAACiB;AAFc,KAAhC,CAArB;AAKA,UAAMC,mBAAmB,GAAG,KAAKC,0BAAL,CAC1BpB,qBAD0B,EAE1BW,iBAAiB,CAACU,sBAFQ,EAG1B;AACA;AACApB,IAAAA,cAAc,CAACqB,6BALW,CAA5B;AAOA,WAAO;AACLH,MAAAA,mBADK;AAELL,MAAAA;AAFK,KAAP;AAID;;AAEuB,QAAlBS,kBAAkB,CACtBC,IAGC,GAAG,EAJkB,EAKtB;AAAA;;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAa,MAAM,KAAK7B,UAAL,CAAgB4B,IAAI,CAACE,2BAArB,CAAzB;AACA,UAAMC,QAAQ,GAAGH,IAAI,CAACI,YAAL,GAAoB,kBAAKJ,IAAI,CAACI,YAAV,EAAwB,aAAxB,CAApB,uBAA6DH,MAAM,CAACE,QAApE,+DAAgFvC,eAAjG;AACA,UAAMyC,QAAQ,GAAGL,IAAI,CAACI,YAAL,GAAoB,kBAAKJ,IAAI,CAACI,YAAV,EAAwB,aAAxB,CAApB,uBAA6DH,MAAM,CAACI,QAApE,+DAAgFvC,eAAjG;AACA,WAAO;AAAEqC,MAAAA,QAAF;AAAYE,MAAAA;AAAZ,KAAP;AACD;;AAEY,QAAPC,OAAO,CACXhC,OADW,EAEXC,UAFW,EAGXC,qBAHW,EAIXC,cAA4C,GAAG,EAJpC,EAKI;AAAA;;AACf;AACA;AACA,UAAM;AAAE6B,MAAAA;AAAF,QAAcC,OAAO,CAAC,QAAD,CAA3B;;AAEA,UAAM;AAAEZ,MAAAA,mBAAF;AAAuBL,MAAAA;AAAvB,QAAwC,MAAM,KAAKjB,kCAAL,CAClDC,OADkD,EAElDC,UAFkD,EAGlDC,qBAHkD,EAIlDC,cAJkD,CAApD;AAMA,SAAKN,MAAL,CAAYqC,KAAZ,CAAkB,gCAAlB,EAAoDlB,YAApD;AACA,SAAKnB,MAAL,CAAYqC,KAAZ,CAAkB,uCAAlB,EAA2Db,mBAA3D;AACA,SAAKxB,MAAL,CAAYsC,aAAZ,CAA0B,oCAA1B,EAbe,CAcf;;AACA,SAAKtC,MAAL,CAAYuC,GAAZ;AACA,UAAMC,UAAU,GAAG,MAAM,KAAK1C,WAAL,CAAiB2C,aAAjB,EAAzB;AACA,UAAMC,WAAW,GAAG,MAAM,KAAK5C,WAAL,CAAiB6C,cAAjB,EAA1B;AACA,UAAMC,aAAa,GAAG,MAAM,KAAK9C,WAAL,CAAiB+C,gBAAjB,EAA5B;AACA,UAAM;AAAEb,MAAAA,QAAF;AAAYE,MAAAA;AAAZ,QAAyB,MAAM,KAAKN,kBAAL,CAAwBtB,cAAxB,CAArC;AACA,UAAM;AAAEwB,MAAAA;AAAF,QAAa,MAAM,KAAK7B,UAAL,CAAgBK,cAAc,CAACyB,2BAA/B,CAAzB;AACA,UAAM,uDAA4BZ,YAAY,CAAChB,OAAzC,EAAkDqB,mBAAlD,CAAN;AACA,UAAMW,OAAO,CACXhB,YADW,EAEXK,mBAFW,EAGXQ,QAHW,EAIXE,QAJW,EAKXM,UALW,EAMXE,WANW,EAOXE,aAPW,EAQX;AACEE,MAAAA,UAAU,EAAExC,cAAc,CAACwC,UAD7B;AAEEC,MAAAA,SAAS,EAAEzC,cAAc,CAACyC,SAF5B;AAGEC,MAAAA,YAAY,EAAElB,MAAM,CAACkB,YAHvB;AAIEC,MAAAA,kBAAkB,EAAE,CAAC,UAAD,EAAa,oBAAb,EAAmC,oBAAnC,CAJtB;AAKEC,MAAAA,mBAAmB,2BAAE5C,cAAc,CAAC4C,mBAAjB,yEAAwCpB,MAAM,CAACoB;AALpE,KARW,EAeX,KAAKlD,MAfM,CAAb;AAiBA,SAAKA,MAAL,CAAYmD,EAAZ,GAvCe,CAwCf;;AACA,SAAKnD,MAAL,CAAYoD,OAAZ,CAAoB,2BAApB;AACA,SAAKpD,MAAL,CAAYqD,cAAZ,CAA2B,oCAA3B;AACD;;AAE4B,QAAvBC,uBAAuB,CAC3BnD,OAD2B,EAE3BC,UAF2B,EAG3BC,qBAH2B,EAI3BC,cAA4C,GAAG,EAJpB,EAKc;AAAA;;AACzC,UAAM;AAAE0B,MAAAA,QAAF;AAAYE,MAAAA;AAAZ,QAAyB,MAAM,KAAKN,kBAAL,CAAwBtB,cAAxB,CAArC;AACA,UAAMoC,WAAW,GAAG,MAAM,KAAK5C,WAAL,CAAiB6C,cAAjB,EAA1B;AACA,UAAMC,aAAa,GAAG,MAAM,KAAK9C,WAAL,CAAiB+C,gBAAjB,EAA5B;AACA,UAAML,UAAU,GAAG,MAAM,KAAK1C,WAAL,CAAiB2C,aAAjB,EAAzB,CAJyC,CAKzC;AACA;;AACA,UAAMc,IAAI,GAAGnB,OAAO,CAAC,QAAD,CAApB;;AACA,UAAM;AAAEZ,MAAAA,mBAAF;AAAuBL,MAAAA;AAAvB,QAAwC,MAAM,KAAKjB,kCAAL,CAClDC,OADkD,EAElDC,UAFkD,EAGlDC,qBAHkD,EAIlDC,cAJkD,CAApD;AAMA,UAAM;AAAEwB,MAAAA;AAAF,QAAa,MAAM,KAAK7B,UAAL,EAAzB;AACA,WAAOsD,IAAI,CAACD,uBAAL,CAA6BnC,YAA7B,EAA2CK,mBAA3C,EAAgE;AACrEQ,MAAAA,QADqE;AAErEE,MAAAA,QAFqE;AAGrEQ,MAAAA,WAHqE;AAIrEF,MAAAA,UAJqE;AAKrEI,MAAAA,aALqE;AAMrEG,MAAAA,SAAS,EAAEzC,cAAc,CAACyC,SAN2C;AAOrEG,MAAAA,mBAAmB,4BAAE5C,cAAc,CAAC4C,mBAAjB,2EAAwCpB,MAAM,CAACoB;AAPG,KAAhE,CAAP;AASD;;AAEOzB,EAAAA,0BAA0B,CAChCpB,qBADgC,EAEhCmD,gCAFgC,EAGhCnC,iBAAiB,GAAG,KAHY,EAIC;AACjC,WAAOhB,qBAAqB,CAACG,OAAtB,GAAgCiD,MAAhC,CAAuC,CAACC,GAAD,EAAM,CAAChD,SAAD,EAAYiD,GAAZ,CAAN,KAA2B;AACvE,YAAMC,WAAW,GAAG,KAAK7D,GAAL,CAAS8D,cAAT,CAAwBnD,SAAxB,CAApB;;AACA,UAAI8C,gCAAgC,CAACM,GAAjC,CAAqCF,WAArC,CAAJ,EAAuD;AAAA;;AACrDF,QAAAA,GAAG,CAACC,GAAD,CAAH,4BAAWH,gCAAgC,CAACO,GAAjC,CAAqCH,WAArC,CAAX,0DAAW,sBAAmDI,MAAnD,CAA0D;AAAE3C,UAAAA;AAAF,SAA1D,CAAX;AACD;;AACD,aAAOqC,GAAP;AACD,KANM,EAMJ,EANI,CAAP;AAOD;;AAEyB,QAApBO,oBAAoB,CACxBL,WADwB,EAExBjD,OAFwB,EAGS;AACjC;AACA;AACA,UAAM;AAAEsD,MAAAA;AAAF,QAA2B7B,OAAO,CAAC,QAAD,CAAxC;;AACA,UAAM;AAAEF,MAAAA;AAAF,QAAe,MAAM,KAAKN,kBAAL,CAAwBjB,OAAxB,CAA3B;AACA,UAAM6B,UAAU,GAAG,MAAM,KAAK1C,WAAL,CAAiB2C,aAAjB,EAAzB;AACA,UAAMC,WAAW,GAAG,MAAM,KAAK5C,WAAL,CAAiB6C,cAAjB,EAA1B;AACA,UAAMC,aAAa,GAAG,MAAM,KAAK9C,WAAL,CAAiB+C,gBAAjB,EAA5B;AACA,WAAOoB,oBAAoB,CAACL,WAAD,EAAcjD,OAAO,CAACR,OAAtB,EAA+B+B,QAA/B,EAAyCM,UAAzC,EAAqDE,WAArD,EAAkEE,aAAlE,CAA3B;AACD;;AAEmB,QAAdD,cAAc,GAAwC;AAC1D;AACA,UAAM;AAAEA,MAAAA;AAAF,QAAqBP,OAAO,CAAC,oBAAD,CAAlC;;AACA,UAAM;AAAEN,MAAAA;AAAF,QAAa,MAAM,KAAK7B,UAAL,EAAzB;AACA,WAAO0C,cAAc,CAACb,MAAD,CAArB;AACD;;AAEqB,QAAhBe,gBAAgB,GAA0C;AAC9D,UAAM;AAAEf,MAAAA;AAAF,QAAa,MAAM,KAAK7B,UAAL,EAAzB;AACA,WAAO;AACLiE,MAAAA,UAAU,EAAEpC,MAAM,CAACoC,UADd;AAELC,MAAAA,kBAAkB,EAAErC,MAAM,CAACqC,kBAFtB;AAGLC,MAAAA,YAAY,EAAEtC,MAAM,CAACsC,YAHhB;AAILC,MAAAA,YAAY,EAAEvC,MAAM,CAACuC,YAJhB;AAKLC,MAAAA,oBAAoB,EAAExC,MAAM,CAACwC,oBALxB;AAMLC,MAAAA,oBAAoB,EAAEzC,MAAM,CAACyC;AANxB,KAAP;AAQD;;AAEkB,QAAb9B,aAAa,GAAwB;AACzC;AACA,UAAM;AAAEA,MAAAA;AAAF,QAAoBL,OAAO,CAAC,kBAAD,CAAjC;;AACA,UAAM;AAAEN,MAAAA;AAAF,QAAa,MAAM,KAAK7B,UAAL,EAAzB;AACA,UAAMuE,YAAY,GAAG,MAAM/B,aAAa,CAACX,MAAD,CAAxC;AACA,UAAM2C,eAAe,GAAG,KAAIC,8BAAJ,EACtBF,YAAY,CAACG,OAAb,CAAqBC,GADC,EAEtBJ,YAAY,CAACG,OAAb,CAAqBE,UAFC,EAGtBL,YAAY,CAACG,OAAb,CAAqBG,eAHC,EAItBN,YAAY,CAACG,OAAb,CAAqBI,gBAJC,EAKtBP,YAAY,CAACG,OAAb,CAAqBK,iBALC,CAAxB;AAQA,UAAMC,UAAU,GAAG,oBAAKT,YAAL,EAAmB,CAAC,SAAD,CAAnB,CAAnB;AACA,UAAMU,gBAA0C,GAAGC,MAAM,CAACC,IAAP,CAAYH,UAAZ,EAAwBxB,MAAxB,CAA+B,CAACC,GAAD,EAAM2B,aAAN,KAAwB;AACxG,YAAMC,SAAS,GAAGL,UAAU,CAACI,aAAD,CAA5B;AACA,YAAME,IAAI,GAAGF,aAAa,CAACG,OAAd,CAAsB,GAAtB,EAA2B,EAA3B,CAAb;AACA9B,MAAAA,GAAG,CAAC6B,IAAD,CAAH,GAAY,KAAIb,8BAAJ,EACVY,SAAS,CAACV,GADA,EAEVU,SAAS,CAACT,UAFA,EAGVS,SAAS,CAACR,eAHA,EAIVQ,SAAS,CAACP,gBAJA,EAKVO,SAAS,CAACN,iBALA,CAAZ;AAOA,aAAOtB,GAAP;AACD,KAXkD,EAWhD,EAXgD,CAAnD,CAdyC,CA2BzC;;AACA,QAAI,CAACwB,gBAAgB,CAACO,GAAtB,EAA2B;AACzBP,MAAAA,gBAAgB,CAACO,GAAjB,GAAuB,KAAIf,8BAAJ,EAAagB,sCAAb,EAA+B,IAA/B,CAAvB;AACD;;AAED,WAAO,KAAIC,gCAAJ,EAAelB,eAAf,EAAgCS,gBAAhC,CAAP;AACD;;AAxNuD","sourcesContent":["import { ComponentMap } from '@teambit/component';\nimport {\n  ComponentsManifestsMap,\n  CreateFromComponentsOptions,\n  WorkspacePolicy,\n  DependencyResolverMain,\n  extendWithComponentsFromDir,\n  PackageManager,\n  PackageManagerInstallOptions,\n  PackageManagerResolveRemoteVersionOptions,\n  ResolvedPackageVersion,\n  Registries,\n  Registry,\n  BIT_DEV_REGISTRY,\n  PackageManagerProxyConfig,\n  PackageManagerNetworkConfig,\n} from '@teambit/dependency-resolver';\nimport { Logger } from '@teambit/logger';\nimport { memoize, omit } from 'lodash';\nimport { PkgMain } from '@teambit/pkg';\nimport { PeerDependencyIssuesByProjects } from '@pnpm/core';\nimport { ProjectManifest } from '@pnpm/types';\nimport { join } from 'path';\nimport userHome from 'user-home';\nimport { readConfig } from './read-config';\n\nconst defaultStoreDir = join(userHome, '.pnpm-store');\nconst defaultCacheDir = join(userHome, '.pnpm-cache');\n\ninterface Manifests {\n  componentsManifests: Record<string, ProjectManifest>;\n  rootManifest: {\n    rootDir: string;\n    manifest: ProjectManifest;\n  };\n}\n\nexport class PnpmPackageManager implements PackageManager {\n  private readConfig = memoize(readConfig);\n  constructor(private depResolver: DependencyResolverMain, private pkg: PkgMain, private logger: Logger) {}\n\n  private async _componentsToPnpmWorkspaceProjects(\n    rootDir: string,\n    rootPolicy: WorkspacePolicy,\n    componentDirectoryMap: ComponentMap<string>,\n    installOptions: PackageManagerInstallOptions = {}\n  ): Promise<Manifests> {\n    const components = componentDirectoryMap.toArray().map(([component]) => component);\n    const options: CreateFromComponentsOptions = {\n      filterComponentsFromManifests: true,\n      createManifestForComponentsWithoutDependencies: true,\n      dedupe: installOptions.dedupe,\n      dependencyFilterFn: installOptions.dependencyFilterFn,\n    };\n    const workspaceManifest = await this.depResolver.getWorkspaceManifest(\n      undefined,\n      undefined,\n      rootPolicy,\n      rootDir,\n      components,\n      options\n    );\n    const rootManifest = workspaceManifest.toJsonWithDir({\n      copyPeerToRuntime: installOptions.copyPeerToRuntimeOnRoot,\n      installPeersFromEnvs: installOptions.installPeersFromEnvs,\n    });\n\n    const componentsManifests = this.computeComponentsManifests(\n      componentDirectoryMap,\n      workspaceManifest.componentsManifestsMap,\n      // In case of not deduping we want to install peers inside the components\n      // !options.dedupe\n      installOptions.copyPeerToRuntimeOnComponents\n    );\n    return {\n      componentsManifests,\n      rootManifest,\n    };\n  }\n\n  async _getGlobalPnpmDirs(\n    opts: {\n      cacheRootDir?: string;\n      packageManagerConfigRootDir?: string;\n    } = {}\n  ) {\n    const { config } = await this.readConfig(opts.packageManagerConfigRootDir);\n    const storeDir = opts.cacheRootDir ? join(opts.cacheRootDir, '.pnpm-store') : config.storeDir ?? defaultStoreDir;\n    const cacheDir = opts.cacheRootDir ? join(opts.cacheRootDir, '.pnpm-cache') : config.cacheDir ?? defaultCacheDir;\n    return { storeDir, cacheDir };\n  }\n\n  async install(\n    rootDir: string,\n    rootPolicy: WorkspacePolicy,\n    componentDirectoryMap: ComponentMap<string>,\n    installOptions: PackageManagerInstallOptions = {}\n  ): Promise<void> {\n    // require it dynamically for performance purpose. the pnpm package require many files - do not move to static import\n    // eslint-disable-next-line global-require, import/no-dynamic-require\n    const { install } = require('./lynx');\n\n    const { componentsManifests, rootManifest } = await this._componentsToPnpmWorkspaceProjects(\n      rootDir,\n      rootPolicy,\n      componentDirectoryMap,\n      installOptions\n    );\n    this.logger.debug('root manifest for installation', rootManifest);\n    this.logger.debug('components manifests for installation', componentsManifests);\n    this.logger.setStatusLine('installing dependencies using pnpm');\n    // turn off the logger because it interrupts the pnpm output\n    this.logger.off();\n    const registries = await this.depResolver.getRegistries();\n    const proxyConfig = await this.depResolver.getProxyConfig();\n    const networkConfig = await this.depResolver.getNetworkConfig();\n    const { storeDir, cacheDir } = await this._getGlobalPnpmDirs(installOptions);\n    const { config } = await this.readConfig(installOptions.packageManagerConfigRootDir);\n    await extendWithComponentsFromDir(rootManifest.rootDir, componentsManifests);\n    await install(\n      rootManifest,\n      componentsManifests,\n      storeDir,\n      cacheDir,\n      registries,\n      proxyConfig,\n      networkConfig,\n      {\n        nodeLinker: installOptions.nodeLinker,\n        overrides: installOptions.overrides,\n        hoistPattern: config.hoistPattern,\n        publicHoistPattern: ['*eslint*', '@prettier/plugin-*', '*prettier-plugin-*'],\n        packageImportMethod: installOptions.packageImportMethod ?? config.packageImportMethod,\n      },\n      this.logger\n    );\n    this.logger.on();\n    // Make a divider row to improve output\n    this.logger.console('-------------------------');\n    this.logger.consoleSuccess('installing dependencies using pnpm');\n  }\n\n  async getPeerDependencyIssues(\n    rootDir: string,\n    rootPolicy: WorkspacePolicy,\n    componentDirectoryMap: ComponentMap<string>,\n    installOptions: PackageManagerInstallOptions = {}\n  ): Promise<PeerDependencyIssuesByProjects> {\n    const { storeDir, cacheDir } = await this._getGlobalPnpmDirs(installOptions);\n    const proxyConfig = await this.depResolver.getProxyConfig();\n    const networkConfig = await this.depResolver.getNetworkConfig();\n    const registries = await this.depResolver.getRegistries();\n    // require it dynamically for performance purpose. the pnpm package require many files - do not move to static import\n    // eslint-disable-next-line global-require, import/no-dynamic-require\n    const lynx = require('./lynx');\n    const { componentsManifests, rootManifest } = await this._componentsToPnpmWorkspaceProjects(\n      rootDir,\n      rootPolicy,\n      componentDirectoryMap,\n      installOptions\n    );\n    const { config } = await this.readConfig();\n    return lynx.getPeerDependencyIssues(rootManifest, componentsManifests, {\n      storeDir,\n      cacheDir,\n      proxyConfig,\n      registries,\n      networkConfig,\n      overrides: installOptions.overrides,\n      packageImportMethod: installOptions.packageImportMethod ?? config.packageImportMethod,\n    });\n  }\n\n  private computeComponentsManifests(\n    componentDirectoryMap: ComponentMap<string>,\n    componentsManifestsFromWorkspace: ComponentsManifestsMap,\n    copyPeerToRuntime = false\n  ): Record<string, ProjectManifest> {\n    return componentDirectoryMap.toArray().reduce((acc, [component, dir]) => {\n      const packageName = this.pkg.getPackageName(component);\n      if (componentsManifestsFromWorkspace.has(packageName)) {\n        acc[dir] = componentsManifestsFromWorkspace.get(packageName)?.toJson({ copyPeerToRuntime });\n      }\n      return acc;\n    }, {});\n  }\n\n  async resolveRemoteVersion(\n    packageName: string,\n    options: PackageManagerResolveRemoteVersionOptions\n  ): Promise<ResolvedPackageVersion> {\n    // require it dynamically for performance purpose. the pnpm package require many files - do not move to static import\n    // eslint-disable-next-line global-require, import/no-dynamic-require\n    const { resolveRemoteVersion } = require('./lynx');\n    const { cacheDir } = await this._getGlobalPnpmDirs(options);\n    const registries = await this.depResolver.getRegistries();\n    const proxyConfig = await this.depResolver.getProxyConfig();\n    const networkConfig = await this.depResolver.getNetworkConfig();\n    return resolveRemoteVersion(packageName, options.rootDir, cacheDir, registries, proxyConfig, networkConfig);\n  }\n\n  async getProxyConfig?(): Promise<PackageManagerProxyConfig> {\n    // eslint-disable-next-line global-require, import/no-dynamic-require\n    const { getProxyConfig } = require('./get-proxy-config');\n    const { config } = await this.readConfig();\n    return getProxyConfig(config);\n  }\n\n  async getNetworkConfig?(): Promise<PackageManagerNetworkConfig> {\n    const { config } = await this.readConfig();\n    return {\n      maxSockets: config.maxSockets,\n      networkConcurrency: config.networkConcurrency,\n      fetchRetries: config.fetchRetries,\n      fetchTimeout: config.fetchTimeout,\n      fetchRetryMaxtimeout: config.fetchRetryMaxtimeout,\n      fetchRetryMintimeout: config.fetchRetryMintimeout,\n    };\n  }\n\n  async getRegistries(): Promise<Registries> {\n    // eslint-disable-next-line global-require, import/no-dynamic-require\n    const { getRegistries } = require('./get-registries');\n    const { config } = await this.readConfig();\n    const pnpmRegistry = await getRegistries(config);\n    const defaultRegistry = new Registry(\n      pnpmRegistry.default.uri,\n      pnpmRegistry.default.alwaysAuth,\n      pnpmRegistry.default.authHeaderValue,\n      pnpmRegistry.default.originalAuthType,\n      pnpmRegistry.default.originalAuthValue\n    );\n\n    const pnpmScoped = omit(pnpmRegistry, ['default']);\n    const scopesRegistries: Record<string, Registry> = Object.keys(pnpmScoped).reduce((acc, scopedRegName) => {\n      const scopedReg = pnpmScoped[scopedRegName];\n      const name = scopedRegName.replace('@', '');\n      acc[name] = new Registry(\n        scopedReg.uri,\n        scopedReg.alwaysAuth,\n        scopedReg.authHeaderValue,\n        scopedReg.originalAuthType,\n        scopedReg.originalAuthValue\n      );\n      return acc;\n    }, {});\n\n    // Add bit registry server if not exist\n    if (!scopesRegistries.bit) {\n      scopesRegistries.bit = new Registry(BIT_DEV_REGISTRY, true);\n    }\n\n    return new Registries(defaultRegistry, scopesRegistries);\n  }\n}\n"]}