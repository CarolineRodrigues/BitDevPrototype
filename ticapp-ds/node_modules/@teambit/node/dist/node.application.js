"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

require("core-js/modules/es.promise.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NodeApp = void 0;

function _defineProperty2() {
  const data = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

  _defineProperty2 = function () {
    return data;
  };

  return data;
}

function _child_process() {
  const data = require("child_process");

  _child_process = function () {
    return data;
  };

  return data;
}

function _path() {
  const data = require("path");

  _path = function () {
    return data;
  };

  return data;
}

class NodeApp {
  constructor(name, entry, portRange, nodeEnv, logger, deploy) {
    this.name = name;
    this.entry = entry;
    this.portRange = portRange;
    this.nodeEnv = nodeEnv;
    this.logger = logger;
    this.deploy = deploy;
    (0, _defineProperty2().default)(this, "applicationType", 'node');
  }

  async run() {
    var _child$stdout;

    const logger = this.logger;
    const child = (0, _child_process().execFile)('node', [this.entry], error => {
      if (error) {
        throw error;
      }
    });
    (_child$stdout = child.stdout) === null || _child$stdout === void 0 ? void 0 : _child$stdout.on('data', function (data) {
      logger.console(data.toString());
    });
  }

  async build() {
    const {
      base
    } = (0, _path().parse)(this.entry);
    const {
      distDir
    } = this.nodeEnv.getCompiler();
    const entry = (0, _path().join)(distDir, base);
    return {
      entry
    };
  }

}

exports.NodeApp = NodeApp;

//# sourceMappingURL=node.application.js.map