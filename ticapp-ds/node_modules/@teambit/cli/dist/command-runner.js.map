{"version":3,"sources":["command-runner.ts"],"names":["CommandRunner","constructor","command","args","flags","commandName","name","runCommand","bootstrapCommand","runMigrateIfNeeded","determineConsoleWritingDuringCommand","json","runJsonHandler","shouldRunRender","runRenderHandler","report","runReportHandler","err","internal","Error","Analytics","init","logger","info","token","TOKEN_FLAG_NAME","globalFlags","toString","isTerminal","process","stdout","isTTY","Boolean","render","result","code","data","writeAndExit","JSON","stringify","loader","off","toRenderResult","waitUntilExit","exitAfterFlush","exitCode","on","start","shouldWriteToConsole","log","logValue","undefined","switchToConsoleLogger","write","migration","debug","obj","isRenderResult","hasOwnProperty"],"mappings":"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","sourcesContent":["import { render } from 'ink';\nimport { migrate } from '@teambit/legacy/dist/api/consumer';\nimport logger, { LoggerLevel } from '@teambit/legacy/dist/logger/logger';\nimport { CLIArgs, Command, Flags, RenderResult } from '@teambit/legacy/dist/cli/command';\nimport { parseCommandName } from '@teambit/legacy/dist/cli/command-registry';\nimport loader from '@teambit/legacy/dist/cli/loader';\nimport { handleErrorAndExit } from '@teambit/legacy/dist/cli/handle-errors';\nimport { TOKEN_FLAG_NAME } from '@teambit/legacy/dist/constants';\nimport globalFlags from '@teambit/legacy/dist/cli/global-flags';\nimport { Analytics } from '@teambit/legacy/dist/analytics/analytics';\n\nexport class CommandRunner {\n  private commandName: string;\n  constructor(private command: Command, private args: CLIArgs, private flags: Flags) {\n    this.commandName = parseCommandName(this.command.name);\n  }\n\n  /**\n   * run command using one of the handler, \"json\"/\"report\"/\"render\". once done, exit the process.\n   */\n  async runCommand() {\n    try {\n      this.bootstrapCommand();\n      await this.runMigrateIfNeeded();\n      this.determineConsoleWritingDuringCommand();\n      if (this.flags.json) {\n        return await this.runJsonHandler();\n      }\n      if (this.shouldRunRender()) {\n        return await this.runRenderHandler();\n      }\n      if (this.command.report) {\n        return await this.runReportHandler();\n      }\n    } catch (err: any) {\n      return handleErrorAndExit(err, this.commandName, this.command.internal);\n    }\n\n    throw new Error(`command \"${this.commandName}\" doesn't implement \"render\" nor \"report\" methods`);\n  }\n\n  private bootstrapCommand() {\n    Analytics.init(this.commandName, this.flags, this.args);\n    logger.info(`[*] started a new command: \"${this.commandName}\" with the following data:`, {\n      args: this.args,\n      flags: this.flags,\n    });\n    const token = this.flags[TOKEN_FLAG_NAME];\n    if (token) {\n      globalFlags.token = token.toString();\n    }\n  }\n\n  /**\n   * when both \"render\" and \"report\" were implemented, check whether it's a terminal.\n   * if it's a terminal, use \"render\", if not, use \"report\" because \"report\" is just a string\n   */\n  private shouldRunRender() {\n    const isTerminal = process.stdout.isTTY;\n    if (this.command.report && !isTerminal) {\n      return false;\n    }\n    return Boolean(this.command.render);\n  }\n\n  /**\n   * this works for both, Harmony commands and Legacy commands (the legacy-command-adapter\n   * implements json() method)\n   */\n  private async runJsonHandler() {\n    if (!this.flags.json) return null;\n    if (!this.command.json) throw new Error(`command \"${this.commandName}\" doesn't implement \"json\" method`);\n    const result = await this.command.json(this.args, this.flags);\n    const code = result.code || 0;\n    const data = result.data || result;\n    return this.writeAndExit(JSON.stringify(data, null, 2), code);\n  }\n\n  private async runRenderHandler() {\n    if (!this.command.render) throw new Error('runRenderHandler expects command.render to be implemented');\n    const result = await this.command.render(this.args, this.flags);\n    loader.off();\n\n    const { data, code } = toRenderResult(result);\n\n    const { waitUntilExit } = render(data);\n    await waitUntilExit();\n    return logger.exitAfterFlush(code, this.commandName);\n  }\n\n  private async runReportHandler() {\n    if (!this.command.report) throw new Error('runReportHandler expects command.report to be implemented');\n    const result = await this.command.report(this.args, this.flags);\n    loader.off();\n    const data = typeof result === 'string' ? result : result.data;\n    const exitCode = typeof result === 'string' ? 0 : result.code;\n    return this.writeAndExit(`${data}\\n`, exitCode);\n  }\n\n  /**\n   * the loader and logger.console write output to the console during the command execution.\n   * for internals commands, such as, _put, _fetch, the command.loader = false.\n   */\n  private determineConsoleWritingDuringCommand() {\n    if (this.command.loader && !this.flags.json && !this.flags['get-yargs-completions']) {\n      loader.on();\n      loader.start(`running command \"${this.commandName}\"...`);\n      logger.shouldWriteToConsole = true;\n    } else {\n      loader.off();\n      logger.shouldWriteToConsole = false;\n    }\n    if (this.flags.log) {\n      const logValue = typeof this.flags.log === 'string' ? this.flags.log : undefined;\n      logger.switchToConsoleLogger(logValue as LoggerLevel);\n    }\n  }\n\n  private async writeAndExit(data: string, exitCode: number) {\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises\n    return process.stdout.write(data, async () => logger.exitAfterFlush(exitCode, this.commandName, data));\n  }\n\n  private async runMigrateIfNeeded(): Promise<any> {\n    // @ts-ignore LegacyCommandAdapter has .migration\n    if (this.command.migration) {\n      logger.debug('Checking if a migration is needed');\n      // @ts-ignore AUTO-ADDED-AFTER-MIGRATION-PLEASE-FIX!\n      return migrate(null, false);\n    }\n    return null;\n  }\n}\n\nfunction toRenderResult(obj: RenderResult | React.ReactElement) {\n  return isRenderResult(obj) ? obj : { data: obj, code: 0 };\n}\n\nfunction isRenderResult(obj: RenderResult | any): obj is RenderResult {\n  // eslint-disable-next-line no-prototype-builtins\n  return typeof obj === 'object' && typeof obj.code === 'number' && obj.hasOwnProperty('data');\n}\n"]}