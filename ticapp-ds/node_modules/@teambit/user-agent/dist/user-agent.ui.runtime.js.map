{"version":3,"sources":["user-agent.ui.runtime.tsx"],"names":["UserAgentUI","provider","uiUi","userAgentUi","registerRenderHooks","serverInit","browser","userAgent","UAParser","connection","headers","browserInit","window","navigator","reactContext","UserAgentReactContext","UIAspect","UIRuntime","children","renderCtx","UserAgentAspect","addRuntime"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAMA;AACA;AACA;AACO,MAAMA,WAAN,CAAkB;AAOF,eAARC,QAAQ,CAAC,CAACC,IAAD,CAAD,EAAiB;AACpC,UAAMC,WAAW,GAAG,IAAIH,WAAJ,EAApB;AAEAE,IAAAA,IAAI,CAACE,mBAAL,CAAwD;AACtDC,MAAAA,UAAU,EAAE,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAiB;AAAA;;AAC3B,cAAMC,SAAS,GAAG,KAAIC,qBAAJ,EAAaF,OAAb,aAAaA,OAAb,gDAAaA,OAAO,CAAEG,UAAT,CAAoBC,OAAjC,0DAAa,sBAA8B,YAA9B,CAAb,CAAlB;AACA,eAAO;AACLH,UAAAA;AADK,SAAP;AAGD,OANqD;AAOtDI,MAAAA,WAAW,EAAE,MAAM;AACjB,eAAO;AACLJ,UAAAA,SAAS,EAAE,KAAIC,qBAAJ,EAAaI,MAAM,CAACC,SAAP,CAAiBN,SAA9B;AADN,SAAP;AAGD,OAXqD;AAYtDO,MAAAA,YAAY,EAAEC;AAZwC,KAAxD;AAeA,WAAOZ,WAAP;AACD;;AA1BsB;;;gCAAZH,W,WACI,E;gCADJA,W,kBAGW,CAACgB,cAAD,C;gCAHXhB,W,aAKMiB,e;;AAwBnB,SAASF,qBAAT,CAA+B;AAAEG,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAA/B,EAAiH;AAC/G,sBAAO,+BAAC,wCAAD;AAAmB,IAAA,KAAK,EAAEA,SAAF,aAAEA,SAAF,uBAAEA,SAAS,CAAEZ;AAArC,KAAiDW,QAAjD,CAAP;AACD;;AAEDE,6BAAgBC,UAAhB,CAA2BrB,WAA3B","sourcesContent":["import { UIAspect, UIRuntime, UiUI } from '@teambit/ui';\nimport React, { ReactNode } from 'react';\nimport UAParser from 'ua-parser-js';\nimport { UserAgentProvider } from '@teambit/ui-foundation.ui.hooks.use-user-agent';\nimport { UserAgentAspect } from './user-agent.aspect';\n\ntype UserAgentRenderCtx = {\n  userAgent?: UAParser;\n};\n\n/**\n * user agent aspect\n */\nexport class UserAgentUI {\n  static slots = [];\n\n  static dependencies = [UIAspect];\n\n  static runtime = UIRuntime;\n\n  static async provider([uiUi]: [UiUI]) {\n    const userAgentUi = new UserAgentUI();\n\n    uiUi.registerRenderHooks<UserAgentRenderCtx, undefined>({\n      serverInit: ({ browser }) => {\n        const userAgent = new UAParser(browser?.connection.headers?.['user-agent']);\n        return {\n          userAgent,\n        };\n      },\n      browserInit: () => {\n        return {\n          userAgent: new UAParser(window.navigator.userAgent),\n        };\n      },\n      reactContext: UserAgentReactContext,\n    });\n\n    return userAgentUi;\n  }\n}\n\nfunction UserAgentReactContext({ children, renderCtx }: { children: ReactNode; renderCtx?: UserAgentRenderCtx }) {\n  return <UserAgentProvider value={renderCtx?.userAgent}>{children}</UserAgentProvider>;\n}\n\nUserAgentAspect.addRuntime(UserAgentUI);\n"]}