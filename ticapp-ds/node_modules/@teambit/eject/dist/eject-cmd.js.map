{"version":3,"sources":["eject-cmd.ts"],"names":["EjectCmd","constructor","workspace","logger","report","pattern","force","json","keepFiles","componentIds","idsByPattern","componentEjector","ComponentsEjector","ejectResults","eject","JSON","stringify"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEO,MAAMA,QAAN,CAAkC;AAcvCC,EAAAA,WAAW,CAASC,SAAT,EAAuCC,MAAvC,EAAuD;AAAA,SAA9CD,SAA8C,GAA9CA,SAA8C;AAAA,SAAhBC,MAAgB,GAAhBA,MAAgB;AAAA,kDAb3D,iBAa2D;AAAA,yDAZpD,8EAYoD;AAAA,iEAX3C,GAAE,+BAAa,OAAb,CAAsB,EAWmB;AAAA,mDAV1D,GAU0D;AAAA,qDATxD,CACR,CAAC,GAAD,EAAM,OAAN,EAAe,mFAAf,CADQ,EAER,CAAC,GAAD,EAAM,MAAN,EAAc,kCAAd,CAFQ,EAGR,CAAC,EAAD,EAAK,YAAL,EAAmB,kDAAnB,CAHQ,CASwD;AAAA,oDAJzD,IAIyD;AAAA,uDAHtD,IAGsD;AAAA,mDAF1D,aAE0D;AAAE;;AAExD,QAANC,MAAM,CACV,CAACC,OAAD,CADU,EAEV;AAAEC,IAAAA,KAAK,GAAG,KAAV;AAAiBC,IAAAA,IAAI,GAAG,KAAxB;AAA+BC,IAAAA,SAAS,GAAG;AAA3C,GAFU,EAGO;AACjB,UAAMC,YAAY,GAAG,MAAM,KAAKP,SAAL,CAAeQ,YAAf,CAA4BL,OAA5B,CAA3B;AACA,UAAMM,gBAAgB,GAAG,KAAIC,sCAAJ,EAAsB,KAAKV,SAA3B,EAAsC,KAAKC,MAA3C,EAAmDM,YAAnD,EAAiE;AAAEH,MAAAA,KAAF;AAASE,MAAAA;AAAT,KAAjE,CAAzB;AACA,UAAMK,YAAY,GAAG,MAAMF,gBAAgB,CAACG,KAAjB,EAA3B;AACA,QAAIP,IAAJ,EAAU,OAAOQ,IAAI,CAACC,SAAL,CAAeH,YAAf,EAA6B,IAA7B,EAAmC,CAAnC,CAAP;AACV,WAAO,8BAAcA,YAAd,CAAP;AACD;;AAzBsC","sourcesContent":["import { Command, CommandOptions } from '@teambit/cli';\nimport { Workspace } from '@teambit/workspace';\nimport ejectTemplate from '@teambit/legacy/dist/cli/templates/eject-template';\nimport { PATTERN_HELP } from '@teambit/legacy/dist/constants';\nimport { Logger } from '@teambit/logger';\nimport { ComponentsEjector } from './components-ejector';\n\nexport class EjectCmd implements Command {\n  name = 'eject <pattern>';\n  description = 'replaces the components from the local scope with the corresponding packages';\n  extendedDescription = `${PATTERN_HELP('eject')}`;\n  alias = 'E';\n  options = [\n    ['f', 'force', 'ignore local version. remove the components even when they are staged or modified'],\n    ['j', 'json', 'print the results in JSON format'],\n    ['', 'keep-files', 'keep the component files in the workspace intact'],\n  ] as CommandOptions;\n  loader = true;\n  migration = true;\n  group = 'development';\n\n  constructor(private workspace: Workspace, private logger: Logger) {}\n\n  async report(\n    [pattern]: [string],\n    { force = false, json = false, keepFiles = false }: { force: boolean; json: boolean; keepFiles: boolean }\n  ): Promise<string> {\n    const componentIds = await this.workspace.idsByPattern(pattern);\n    const componentEjector = new ComponentsEjector(this.workspace, this.logger, componentIds, { force, keepFiles });\n    const ejectResults = await componentEjector.eject();\n    if (json) return JSON.stringify(ejectResults, null, 2);\n    return ejectTemplate(ejectResults);\n  }\n}\n"]}