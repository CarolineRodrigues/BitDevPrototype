"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

require("core-js/modules/es.array.iterator.js");

require("core-js/modules/es.promise.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.LanesUI = void 0;

function _defineProperty2() {
  const data = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

  _defineProperty2 = function () {
    return data;
  };

  return data;
}

function _react() {
  const data = _interopRequireDefault(require("react"));

  _react = function () {
    return data;
  };

  return data;
}

function _harmony() {
  const data = require("@teambit/harmony");

  _harmony = function () {
    return data;
  };

  return data;
}

function _ui() {
  const data = require("@teambit/ui");

  _ui = function () {
    return data;
  };

  return data;
}

function _lanes() {
  const data = require("@teambit/lanes");

  _lanes = function () {
    return data;
  };

  return data;
}

function _lanesUi() {
  const data = require("@teambit/lanes.ui.lanes");

  _lanesUi = function () {
    return data;
  };

  return data;
}

function _scope() {
  const data = _interopRequireDefault(require("@teambit/scope"));

  _scope = function () {
    return data;
  };

  return data;
}

function _workspace() {
  const data = _interopRequireDefault(require("@teambit/workspace"));

  _workspace = function () {
    return data;
  };

  return data;
}

function _component() {
  const data = _interopRequireDefault(require("@teambit/component"));

  _component = function () {
    return data;
  };

  return data;
}

function _sidebar() {
  const data = _interopRequireDefault(require("@teambit/sidebar"));

  _sidebar = function () {
    return data;
  };

  return data;
}

class LanesUI {
  constructor(componentUi, routeSlot, navSlot,
  /**
   * overview line slot to add new lines beneath the overview section
   */
  overviewSlot, workspace, scope) {
    this.componentUi = componentUi;
    this.routeSlot = routeSlot;
    this.navSlot = navSlot;
    this.overviewSlot = overviewSlot;
    this.workspace = workspace;
    this.scope = scope;
    (0, _defineProperty2().default)(this, "lanesHost", void 0);
    (0, _defineProperty2().default)(this, "hostAspect", void 0);
    (0, _defineProperty2().default)(this, "host", void 0);
    (0, _defineProperty2().default)(this, "renderContext", ({
      children
    }) => {
      return /*#__PURE__*/_react().default.createElement(_lanesUi().CurrentLaneFromUrl, null, children);
    });
    this.hostAspect = workspace || scope;
    this.lanesHost = workspace ? 'workspace' : 'scope';
    this.host = workspace ? _workspace().default.id : _scope().default.id;
  }

  registerHostAspectRoutes() {
    if (!this.hostAspect) return;
    this.hostAspect.registerRoutes([{
      path: _lanesUi().LanesModel.laneComponentUrlRegex,
      children: this.componentUi.getComponentUI(this.host)
    }, {
      path: _lanesUi().LanesModel.laneRouteUrlRegex,
      children: /*#__PURE__*/_react().default.createElement(_lanesUi().LanesOverview, {
        routeSlot: this.routeSlot,
        overviewSlot: this.overviewSlot
      })
    }]);
    this.hostAspect.registerMenuRoutes([{
      path: _lanesUi().LanesModel.laneComponentUrlRegex,
      children: this.componentUi.getMenu(this.host)
    }, {
      path: _lanesUi().LanesModel.laneRouteUrlRegex,
      children: /*#__PURE__*/_react().default.createElement(_lanesUi().LanesOverviewMenu, {
        navigationSlot: this.navSlot,
        host: this.host
      })
    }]);
  }

  registerLanesRoutes() {
    this.registerNavigation({
      href: '',
      children: 'Gallery'
    });
  }

  registerRoutes() {
    this.registerHostAspectRoutes();
    this.registerLanesRoutes();
  }

  registerRoute(route) {
    this.routeSlot.register(route);
    return this;
  }
  /**
   * register a new line beneath the lane overview section.
   */


  registerOverviewLine(...lines) {
    this.overviewSlot.register(lines);
    return this;
  }

  registerNavigation(nav, order) {
    this.navSlot.register({
      props: nav,
      order
    });
  }

  static async provider([uiUi, componentUi, workspaceUi, scopeUi, sidebarUi], _, [routeSlot, overviewSlot, navSlot], harmony) {
    const {
      config
    } = harmony;
    const host = String(config.get('teambit.harmony/bit'));
    let workspace;
    let scope;

    if (host === _workspace().default.id) {
      workspace = workspaceUi;
    }

    if (host === _scope().default.id) {
      scope = scopeUi;
    }

    const lanesUi = new LanesUI(componentUi, routeSlot, navSlot, overviewSlot, workspace, scope);
    uiUi.registerRenderHooks({
      reactContext: lanesUi.renderContext
    });
    const drawer = new (_lanesUi().LanesDrawer)({
      showScope: lanesUi.lanesHost === 'workspace'
    });
    sidebarUi.registerDrawer(drawer);
    lanesUi.registerRoutes();
    return lanesUi;
  }

}

exports.LanesUI = LanesUI;
(0, _defineProperty2().default)(LanesUI, "dependencies", [_ui().UIAspect, _component().default, _workspace().default, _scope().default, _sidebar().default]);
(0, _defineProperty2().default)(LanesUI, "runtime", _ui().UIRuntime);
(0, _defineProperty2().default)(LanesUI, "slots", [_harmony().Slot.withType(), _harmony().Slot.withType(), _harmony().Slot.withType()]);
var _default = LanesUI;
exports.default = _default;

_lanes().LanesAspect.addRuntime(LanesUI);

//# sourceMappingURL=lanes.ui.runtime.js.map