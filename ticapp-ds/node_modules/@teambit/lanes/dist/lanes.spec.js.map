{"version":3,"sources":["lanes.spec.ts"],"names":["describe","lanes","workspaceData","beforeAll","workspacePath","LanesAspect","createLane","afterAll","it","currentLanes","getLanes","expect","toBeDefined","name","toEqual"],"mappings":";;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAGAA,QAAQ,CAAC,aAAD,EAAgB,YAAY;AAClC,MAAIC,KAAJ;AACA,MAAIC,aAAJ;AACAC,EAAAA,SAAS,CAAC,YAAY;AACpBD,IAAAA,aAAa,GAAG,wCAAhB;AACA,UAAM;AAAEE,MAAAA;AAAF,QAAoBF,aAA1B;AACA,UAAM,wCAAeE,aAAf,CAAN;AACAH,IAAAA,KAAK,GAAG,MAAM,kCAAWI,oBAAX,EAAwBD,aAAxB,CAAd;AACA,UAAMH,KAAK,CAACK,UAAN,CAAiB,OAAjB,CAAN;AACD,GANQ,CAAT;AAOAC,EAAAA,QAAQ,CAAC,YAAY;AACnB,UAAM,0CAAiBL,aAAjB,CAAN;AACD,GAFO,CAAR;AAGAF,EAAAA,QAAQ,CAAC,YAAD,EAAe,MAAM;AAC3BQ,IAAAA,EAAE,CAAC,uBAAD,EAA0B,YAAY;AACtC,YAAMC,YAAY,GAAG,MAAMR,KAAK,CAACS,QAAN,CAAe,EAAf,CAA3B;AACAC,MAAAA,MAAM,CAACF,YAAD,CAAN,CAAqBG,WAArB;AACAD,MAAAA,MAAM,CAACF,YAAY,CAAC,CAAD,CAAZ,CAAgBI,IAAjB,CAAN,CAA6BC,OAA7B,CAAqC,OAArC;AACD,KAJC,CAAF;AAKD,GANO,CAAR;AAOD,CApBO,CAAR","sourcesContent":["import { loadAspect } from '@teambit/harmony.testing.load-aspect';\nimport { mockWorkspace, destroyWorkspace, WorkspaceData } from '@teambit/workspace.testing.mock-workspace';\nimport { mockComponents } from '@teambit/component.testing.mock-components';\nimport { LanesAspect } from './lanes.aspect';\nimport { LanesMain } from './lanes.main.runtime';\n\ndescribe('LanesAspect', function () {\n  let lanes: LanesMain;\n  let workspaceData: WorkspaceData;\n  beforeAll(async () => {\n    workspaceData = mockWorkspace();\n    const { workspacePath } = workspaceData;\n    await mockComponents(workspacePath);\n    lanes = await loadAspect(LanesAspect, workspacePath);\n    await lanes.createLane('stage');\n  });\n  afterAll(async () => {\n    await destroyWorkspace(workspaceData);\n  });\n  describe('getLanes()', () => {\n    it('should list all lanes', async () => {\n      const currentLanes = await lanes.getLanes({});\n      expect(currentLanes).toBeDefined();\n      expect(currentLanes[0].name).toEqual('stage');\n    });\n  });\n});\n"]}