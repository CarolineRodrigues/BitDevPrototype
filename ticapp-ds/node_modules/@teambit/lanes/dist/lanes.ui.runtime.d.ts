import { RouteProps } from 'react-router-dom';
import { Harmony } from '@teambit/harmony';
import { UiUI } from '@teambit/ui';
import { NavigationSlot, RouteSlot } from '@teambit/ui-foundation.ui.react-router.slot-router';
import { LanesOrderedNavigationSlot, LaneOverviewLineSlot, LaneOverviewLine } from '@teambit/lanes.ui.lanes';
import { ScopeUI } from '@teambit/scope';
import { WorkspaceUI } from '@teambit/workspace';
import { NavLinkProps } from '@teambit/react-router';
import { ComponentUI } from '@teambit/component';
import { SidebarUI } from '@teambit/sidebar';
export declare class LanesUI {
    private componentUi;
    private routeSlot;
    private navSlot;
    /**
     * overview line slot to add new lines beneath the overview section
     */
    private overviewSlot;
    private workspace?;
    private scope?;
    static dependencies: import("@teambit/harmony").Aspect[];
    static runtime: import("@teambit/harmony").RuntimeDefinition;
    static slots: (((registerFn: () => string) => import("@teambit/harmony").SlotRegistry<RouteProps<string, {
        [x: string]: string | undefined;
    }>>) | ((registerFn: () => string) => import("@teambit/harmony").SlotRegistry<NavigationSlot>) | ((registerFn: () => string) => import("@teambit/harmony").SlotRegistry<LaneOverviewLineSlot>))[];
    constructor(componentUi: ComponentUI, routeSlot: RouteSlot, navSlot: LanesOrderedNavigationSlot, 
    /**
     * overview line slot to add new lines beneath the overview section
     */
    overviewSlot: LaneOverviewLineSlot, workspace?: WorkspaceUI | undefined, scope?: ScopeUI | undefined);
    private readonly lanesHost;
    private readonly hostAspect?;
    private readonly host;
    private registerHostAspectRoutes;
    private registerLanesRoutes;
    private registerRoutes;
    private renderContext;
    registerRoute(route: RouteProps): this;
    /**
     * register a new line beneath the lane overview section.
     */
    registerOverviewLine(...lines: LaneOverviewLine[]): this;
    registerNavigation(nav: NavLinkProps, order?: number): void;
    static provider([uiUi, componentUi, workspaceUi, scopeUi, sidebarUi]: [UiUI, ComponentUI, WorkspaceUI, ScopeUI, SidebarUI], _: any, [routeSlot, overviewSlot, navSlot]: [RouteSlot, LaneOverviewLineSlot, LanesOrderedNavigationSlot], harmony: Harmony): Promise<LanesUI>;
}
export default LanesUI;
