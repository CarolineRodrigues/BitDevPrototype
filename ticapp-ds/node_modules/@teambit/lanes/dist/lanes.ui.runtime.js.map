{"version":3,"sources":["lanes.ui.runtime.tsx"],"names":["LanesUI","constructor","componentUi","routeSlot","navSlot","overviewSlot","workspace","scope","children","hostAspect","lanesHost","host","WorkspaceAspect","id","ScopeAspect","registerHostAspectRoutes","registerRoutes","path","LanesModel","laneComponentUrlRegex","getComponentUI","laneRouteUrlRegex","registerMenuRoutes","getMenu","registerLanesRoutes","registerNavigation","href","registerRoute","route","register","registerOverviewLine","lines","nav","order","props","provider","uiUi","workspaceUi","scopeUi","sidebarUi","_","harmony","config","String","get","lanesUi","registerRenderHooks","reactContext","renderContext","drawer","LanesDrawer","showScope","registerDrawer","UIAspect","ComponentAspect","SidebarAspect","UIRuntime","Slot","withType","LanesAspect","addRuntime"],"mappings":"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","sourcesContent":["import React, { ReactNode } from 'react';\nimport { RouteProps } from 'react-router-dom';\nimport { Slot, Harmony } from '@teambit/harmony';\nimport { UIRuntime, UiUI, UIAspect } from '@teambit/ui';\nimport { LanesAspect } from '@teambit/lanes';\nimport { NavigationSlot, RouteSlot } from '@teambit/ui-foundation.ui.react-router.slot-router';\nimport {\n  LanesDrawer,\n  LanesHost,\n  LanesOverview,\n  LanesOrderedNavigationSlot,\n  LanesModel,\n  LanesOverviewMenu,\n  CurrentLaneFromUrl,\n  LaneOverviewLineSlot,\n  LaneOverviewLine,\n} from '@teambit/lanes.ui.lanes';\nimport ScopeAspect, { ScopeUI } from '@teambit/scope';\nimport WorkspaceAspect, { WorkspaceUI } from '@teambit/workspace';\nimport { NavLinkProps } from '@teambit/react-router';\nimport ComponentAspect, { ComponentUI } from '@teambit/component';\nimport SidebarAspect, { SidebarUI } from '@teambit/sidebar';\n\nexport class LanesUI {\n  static dependencies = [UIAspect, ComponentAspect, WorkspaceAspect, ScopeAspect, SidebarAspect];\n  static runtime = UIRuntime;\n  static slots = [Slot.withType<RouteProps>(), Slot.withType<LaneOverviewLineSlot>(), Slot.withType<NavigationSlot>()];\n\n  constructor(\n    private componentUi: ComponentUI,\n    private routeSlot: RouteSlot,\n    private navSlot: LanesOrderedNavigationSlot,\n    /**\n     * overview line slot to add new lines beneath the overview section\n     */\n    private overviewSlot: LaneOverviewLineSlot,\n    private workspace?: WorkspaceUI,\n    private scope?: ScopeUI\n  ) {\n    this.hostAspect = workspace || scope;\n    this.lanesHost = workspace ? 'workspace' : 'scope';\n    this.host = workspace ? WorkspaceAspect.id : ScopeAspect.id;\n  }\n\n  private readonly lanesHost: LanesHost;\n  private readonly hostAspect?: WorkspaceUI | ScopeUI;\n  private readonly host: string;\n\n  private registerHostAspectRoutes() {\n    if (!this.hostAspect) return;\n    this.hostAspect.registerRoutes([\n      {\n        path: LanesModel.laneComponentUrlRegex,\n        children: this.componentUi.getComponentUI(this.host),\n      },\n      {\n        path: LanesModel.laneRouteUrlRegex,\n        children: <LanesOverview routeSlot={this.routeSlot} overviewSlot={this.overviewSlot} />,\n      },\n    ]);\n    this.hostAspect.registerMenuRoutes([\n      {\n        path: LanesModel.laneComponentUrlRegex,\n        children: this.componentUi.getMenu(this.host),\n      },\n      {\n        path: LanesModel.laneRouteUrlRegex,\n        children: <LanesOverviewMenu navigationSlot={this.navSlot} host={this.host} />,\n      },\n    ]);\n  }\n\n  private registerLanesRoutes() {\n    this.registerNavigation({\n      href: '',\n      children: 'Gallery',\n    });\n  }\n\n  private registerRoutes() {\n    this.registerHostAspectRoutes();\n    this.registerLanesRoutes();\n  }\n\n  private renderContext = ({ children }: { children: ReactNode }) => {\n    return <CurrentLaneFromUrl>{children}</CurrentLaneFromUrl>;\n  };\n\n  registerRoute(route: RouteProps) {\n    this.routeSlot.register(route);\n    return this;\n  }\n\n  /**\n   * register a new line beneath the lane overview section.\n   */\n  registerOverviewLine(...lines: LaneOverviewLine[]) {\n    this.overviewSlot.register(lines);\n    return this;\n  }\n\n  registerNavigation(nav: NavLinkProps, order?: number) {\n    this.navSlot.register({\n      props: nav,\n      order,\n    });\n  }\n\n  static async provider(\n    [uiUi, componentUi, workspaceUi, scopeUi, sidebarUi]: [UiUI, ComponentUI, WorkspaceUI, ScopeUI, SidebarUI],\n    _,\n    [routeSlot, overviewSlot, navSlot]: [RouteSlot, LaneOverviewLineSlot, LanesOrderedNavigationSlot],\n    harmony: Harmony\n  ) {\n    const { config } = harmony;\n    const host = String(config.get('teambit.harmony/bit'));\n    let workspace: WorkspaceUI | undefined;\n    let scope: ScopeUI | undefined;\n    if (host === WorkspaceAspect.id) {\n      workspace = workspaceUi;\n    }\n    if (host === ScopeAspect.id) {\n      scope = scopeUi;\n    }\n    const lanesUi = new LanesUI(componentUi, routeSlot, navSlot, overviewSlot, workspace, scope);\n    uiUi.registerRenderHooks({ reactContext: lanesUi.renderContext });\n    const drawer = new LanesDrawer({ showScope: lanesUi.lanesHost === 'workspace' });\n    sidebarUi.registerDrawer(drawer);\n    lanesUi.registerRoutes();\n\n    return lanesUi;\n  }\n}\n\nexport default LanesUI;\n\nLanesAspect.addRuntime(LanesUI);\n"]}