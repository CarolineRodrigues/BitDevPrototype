{"version":3,"sources":["env.main.runtime.ts"],"names":["EnvMain","constructor","envEnv","envs","compose","transformers","targetEnv","merge","provider","aspectAspect","EnvEnv","registerEnv","AspectAspect","EnvsAspect","MainRuntime","EnvAspect","addRuntime"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEO,MAAMA,OAAN,CAAc;AACnBC,EAAAA,WAAW,CAAUC,MAAV,EAAkCC,IAAlC,EAAkD;AAAA,SAAxCD,MAAwC,GAAxCA,MAAwC;AAAA,SAAhBC,IAAgB,GAAhBA,IAAgB;AAAE;AAE/D;AACF;AACA;;;AACEC,EAAAA,OAAO,CAACC,YAA8B,GAAG,EAAlC,EAAsCC,SAAsB,GAAG,EAA/D,EAAmE;AACxE,WAAO,KAAKH,IAAL,CAAUC,OAAV,CAAkB,KAAKD,IAAL,CAAUI,KAAV,CAAgBD,SAAhB,EAA2B,KAAKJ,MAAhC,CAAlB,EAA2DG,YAA3D,CAAP;AACD;;AAKoB,eAARG,QAAQ,CAAC,CAACC,YAAD,EAAeN,IAAf,CAAD,EAA+C;AAClE,UAAMD,MAAM,GAAGO,YAAY,CAACL,OAAb,CAAqB,EAArB,EAAyB,KAAIM,cAAJ,GAAzB,CAAf;AAEAP,IAAAA,IAAI,CAACQ,WAAL,CAAiBT,MAAjB;AACA,WAAO,IAAIF,OAAJ,CAAYE,MAAZ,EAA8BC,IAA9B,CAAP;AACD;;AAlBkB;;;gCAARH,O,WAUI,E;gCAVJA,O,kBAWW,CAACY,iBAAD,EAAeC,eAAf,C;gCAXXb,O,aAYMc,kB;;AASnBC,iBAAUC,UAAV,CAAqBhB,OAArB","sourcesContent":["import AspectAspect, { AspectMain } from '@teambit/aspect';\nimport { MainRuntime } from '@teambit/cli';\nimport EnvsAspect, { Environment, EnvsMain, EnvTransformer } from '@teambit/envs';\nimport { EnvAspect } from './env.aspect';\nimport { EnvEnv } from './env.env';\n\nexport class EnvMain {\n  constructor(readonly envEnv: EnvEnv, private envs: EnvsMain) {}\n\n  /**\n   * compose your own aspect environment.\n   */\n  compose(transformers: EnvTransformer[] = [], targetEnv: Environment = {}) {\n    return this.envs.compose(this.envs.merge(targetEnv, this.envEnv), transformers);\n  }\n\n  static slots = [];\n  static dependencies = [AspectAspect, EnvsAspect];\n  static runtime = MainRuntime;\n  static async provider([aspectAspect, envs]: [AspectMain, EnvsMain]) {\n    const envEnv = aspectAspect.compose([], new EnvEnv());\n\n    envs.registerEnv(envEnv);\n    return new EnvMain(envEnv as EnvEnv, envs);\n  }\n}\n\nEnvAspect.addRuntime(EnvMain);\n"]}