{"version":3,"sources":["mdx.doc-reader.ts"],"names":["MDXDocReader","constructor","extensions","read","path","contents","output","toString","filepath","metadata","getMetadata","doc","Doc","from","isFormatSupported","format","includes"],"mappings":";;;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEO,MAAMA,YAAN,CAAwC;AAC7CC,EAAAA,WAAW,CAASC,UAAT,EAA+B;AAAA,SAAtBA,UAAsB,GAAtBA,UAAsB;AAAE;;AAElC,QAAJC,IAAI,CAACC,IAAD,EAAeC,QAAf,EAAiC;AACzC,UAAMC,MAAM,GAAG,MAAM,2BAAQD,QAAQ,CAACE,QAAT,CAAkB,OAAlB,CAAR,EAAoC;AAAEC,MAAAA,QAAQ,EAAEJ;AAAZ,KAApC,CAArB;AACA,UAAMK,QAAQ,GAAGH,MAAM,CAACI,WAAP,EAAjB;;AAEA,UAAMC,GAAG,GAAGC,YAAIC,IAAJ,CAAST,IAAT,EAAeK,QAAf,CAAZ;;AACA,WAAOE,GAAP;AACD;;AAEDG,EAAAA,iBAAiB,CAACC,MAAD,EAAiB;AAChC,WAAO,KAAKb,UAAL,CAAgBc,QAAhB,CAAyBD,MAAzB,CAAP;AACD;;AAb4C","sourcesContent":["import { DocReader, Doc } from '@teambit/docs';\nimport { compile } from '@teambit/mdx.modules.mdx-compiler';\n\nexport class MDXDocReader implements DocReader {\n  constructor(private extensions: string[]) {}\n\n  async read(path: string, contents: Buffer) {\n    const output = await compile(contents.toString('utf-8'), { filepath: path });\n    const metadata = output.getMetadata();\n\n    const doc = Doc.from(path, metadata);\n    return doc;\n  }\n\n  isFormatSupported(format: string) {\n    return this.extensions.includes(format);\n  }\n}\n"]}