{"version":3,"sources":["index.ts"],"names":["MDXComponent","name","description","generateFiles","context","namePascalCase","Name","indexFile","relativePath","content","deprecatedMDXComponent","hidden"],"mappings":";;;;;;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AACA;AAEO,MAAMA,YAA+B,GAAG;AAC7CC,EAAAA,IAAI,EAAE,KADuC;AAE7CC,EAAAA,WAAW,EAAE,mDAFgC;AAI7CC,EAAAA,aAAa,EAAGC,OAAD,IAA+B;AAC5C,UAAM;AAAEH,MAAAA,IAAF;AAAQI,MAAAA,cAAc,EAAEC;AAAxB,QAAiCF,OAAvC;AACA,UAAMG,SAAS,GAAG;AAChBC,MAAAA,YAAY,EAAE,UADE;AAEhBC,MAAAA,OAAO,EAAG,uBAAsBH,IAAK,uBAAsBL,IAAK;AACtE;AAHsB,KAAlB;AAMA,WAAO,CAACM,SAAD,EAAY,gCAAcH,OAAd,CAAZ,EAAoC,oCAAgBA,OAAhB,CAApC,EAA8D,sBAASA,OAAT,CAA9D,CAAP;AACD;AAb4C,CAAxC;;AAgBA,MAAMM,sBAAyC,GAAG;AACvDT,EAAAA,IAAI,EAAE,eADiD;AAEvDC,EAAAA,WAAW,EAAE,mDAF0C;AAGvDS,EAAAA,MAAM,EAAE,IAH+C;AAKvDR,EAAAA,aAAa,EAAGC,OAAD,IAA+B;AAC5C,UAAM;AAAEH,MAAAA,IAAF;AAAQI,MAAAA,cAAc,EAAEC;AAAxB,QAAiCF,OAAvC;AACA,UAAMG,SAAS,GAAG;AAChBC,MAAAA,YAAY,EAAE,UADE;AAEhBC,MAAAA,OAAO,EAAG,uBAAsBH,IAAK,cAAaL,IAAK;AAC7D;AAHsB,KAAlB;AAMA,WAAO,CAACM,SAAD,EAAY,gCAAcH,OAAd,CAAZ,EAAoC,oCAAgBA,OAAhB,CAApC,EAA8D,sBAASA,OAAT,CAA9D,CAAP;AACD;AAdsD,CAAlD","sourcesContent":["import { ComponentTemplate, ComponentContext } from '@teambit/generator';\nimport { componentFile } from './files/component';\nimport { compositionFile } from './files/composition';\nimport { docsFile } from './files/docs';\n// TODO @ranm8 Tests won't work in MDX until we add a Jest Transformer for the MDX env.\n// import { testFile } from './files/test';\n\nexport const MDXComponent: ComponentTemplate = {\n  name: 'mdx',\n  description: 'MDX-file compiled by Bit to a reuseable component',\n\n  generateFiles: (context: ComponentContext) => {\n    const { name, namePascalCase: Name } = context;\n    const indexFile = {\n      relativePath: 'index.ts',\n      content: `export { default as ${Name}, default } from './${name}.mdx';\n`,\n    };\n\n    return [indexFile, componentFile(context), compositionFile(context), docsFile(context)];\n  },\n};\n\nexport const deprecatedMDXComponent: ComponentTemplate = {\n  name: 'mdx-component',\n  description: 'MDX-file compiled by Bit to a reuseable component',\n  hidden: true,\n\n  generateFiles: (context: ComponentContext) => {\n    const { name, namePascalCase: Name } = context;\n    const indexFile = {\n      relativePath: 'index.ts',\n      content: `export { default as ${Name} } from './${name}.mdx';\n`,\n    };\n\n    return [indexFile, componentFile(context), compositionFile(context), docsFile(context)];\n  },\n};\n"]}