{"version":3,"sources":["builder.graphql.ts"],"names":["builderSchema","builder","typeDefs","resolvers","Component","getArtifacts","component","hash"],"mappings":";;;;;;;;;;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAIA;AACO,SAASA,aAAT,CAAuBC,OAAvB,EAA6C;AAClD,SAAO;AACLC,IAAAA,QAAQ,EAAE,0BAAI;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAnBS;AAoBLC,IAAAA,SAAS,EAAE;AACTC,MAAAA,SAAS,EAAE;AACT;AACAC,QAAAA,YAAY,EAAE,OAAOC,SAAP,EAA6B;AAAEC,UAAAA;AAAF,SAA7B,KAA4D,CACxE;AACA;AACD;AALQ;AADF;AApBN,GAAP;AA8BD","sourcesContent":["import { Component } from '@teambit/component';\nimport gql from 'graphql-tag';\n\nimport { BuilderMain } from './builder.main.runtime';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function builderSchema(builder: BuilderMain) {\n  return {\n    typeDefs: gql`\n      type ExtensionDescriptor {\n        # extension ID.\n        id: String\n\n        # icon of the extension.\n        icon: String\n      }\n\n      type ExtensionArtifact {\n        # descriptor of the artifact's extension\n        extensionDescriptor: ExtensionDescriptor\n      }\n\n      extend type Component {\n        # list of extension artifacts.\n        getArtifacts(hash: String!): [ExtensionArtifact]\n      }\n    `,\n    resolvers: {\n      Component: {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        getArtifacts: async (component: Component, { hash }: { hash: string }) => {\n          // const artifacts = await builder.getArtifacts(component.id, hash);\n          // return artifacts.map((artifact) => artifact.toObject());\n        },\n      },\n    },\n  };\n}\n"]}