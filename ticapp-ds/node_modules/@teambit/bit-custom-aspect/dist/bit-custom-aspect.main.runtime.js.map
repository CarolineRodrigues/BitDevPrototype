{"version":3,"sources":["bit-custom-aspect.main.runtime.ts"],"names":["BitCustomAspectMain","provider","envs","aspect","mocha","tester","createTester","babelConfig","testerOverride","override","getTester","depsOverride","overrideDependencies","devDependencies","chai","bitCustomAspect","compose","registerEnv","EnvsAspect","AspectAspect","MochaAspect","MainRuntime","BitCustomAspectAspect","addRuntime"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEO,MAAMA,mBAAN,CAA0B;AAIV,eAARC,QAAQ,CAAC,CAACC,IAAD,EAAOC,MAAP,EAAeC,KAAf,CAAD,EAA2D;AAC9E,UAAMC,MAAM,GAAGD,KAAK,CAACE,YAAN,CAAmB,EAAnB,EAAuBH,MAAM,CAACI,WAA9B,CAAf;AACA,UAAMC,cAAc,GAAGN,IAAI,CAACO,QAAL,CAAc;AACnCC,MAAAA,SAAS,EAAE,MAAML;AADkB,KAAd,CAAvB;AAGA,UAAMM,YAAY,GAAGR,MAAM,CAACS,oBAAP,CAA4B;AAAEC,MAAAA,eAAe,EAAE;AAAEC,QAAAA,IAAI,EAAE;AAAR;AAAnB,KAA5B,CAArB;AACA,UAAMC,eAAe,GAAGZ,MAAM,CAACa,OAAP,CAAe,CAACR,cAAD,EAAiBG,YAAjB,CAAf,CAAxB;AACAT,IAAAA,IAAI,CAACe,WAAL,CAAiBF,eAAjB;AACA,WAAO,IAAIf,mBAAJ,EAAP;AACD;;AAb8B;;;gCAApBA,mB,WACI,E;gCADJA,mB,kBAEW,CAACkB,eAAD,EAAaC,iBAAb,EAA2BC,gBAA3B,C;gCAFXpB,mB,aAGMqB,kB;;AAanBC,yCAAsBC,UAAtB,CAAiCvB,mBAAjC","sourcesContent":["import AspectAspect, { AspectMain } from '@teambit/aspect';\nimport { MainRuntime } from '@teambit/cli';\nimport EnvsAspect, { EnvsMain } from '@teambit/envs';\nimport MochaAspect, { MochaMain } from '@teambit/mocha';\nimport { BitCustomAspectAspect } from './bit-custom-aspect.aspect';\n\nexport class BitCustomAspectMain {\n  static slots = [];\n  static dependencies = [EnvsAspect, AspectAspect, MochaAspect];\n  static runtime = MainRuntime;\n  static async provider([envs, aspect, mocha]: [EnvsMain, AspectMain, MochaMain]) {\n    const tester = mocha.createTester({}, aspect.babelConfig);\n    const testerOverride = envs.override({\n      getTester: () => tester,\n    });\n    const depsOverride = aspect.overrideDependencies({ devDependencies: { chai: '4.3.0' } });\n    const bitCustomAspect = aspect.compose([testerOverride, depsOverride]);\n    envs.registerEnv(bitCustomAspect);\n    return new BitCustomAspectMain();\n  }\n}\n\nBitCustomAspectAspect.addRuntime(BitCustomAspectMain);\n"]}