{"version":3,"sources":["fetch-component-aspects.tsx"],"names":["GQL_SERVER","GET_COMPONENT_ASPECTS","fetchComponentAspects","componentId","response","id","toString","getHost","get","aspects","map","x","err","console","error","undefined"],"mappings":";;;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA,MAAMA,UAAU,GAAG,UAAnB;AACA,MAAMC,qBAAqB,GAAG,0BAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;;AAqBO,eAAeC,qBAAf,CAAqCC,WAArC,EAA0D;AAC/D,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAM,+BAAqBJ,UAArB,EAAiCC,qBAAjC,EAAwD;AAAEI,MAAAA,EAAE,EAAEF,WAAW,CAACG,QAAZ;AAAN,KAAxD,CAAvB;AACA,WAAOF,QAAQ,CAACG,OAAT,CAAiBC,GAAjB,CAAqBC,OAArB,CAA6BC,GAA7B,CAAkCC,CAAD,IAAOA,CAAC,CAACN,EAA1C,CAAP;AACD,GAHD,CAGE,OAAOO,GAAP,EAAiB;AACjB;AACAC,IAAAA,OAAO,CAACC,KAAR,CAAe,2CAA0CF,GAAG,CAACN,QAAJ,EAAe,GAAxE;AACA,WAAOS,SAAP;AACD;AACF","sourcesContent":["import { request, gql } from 'graphql-request';\n\nconst GQL_SERVER = '/graphql';\nconst GET_COMPONENT_ASPECTS = gql`\n  query getComponentAspects($id: String!) {\n    getHost {\n      id\n      get(id: $id) {\n        aspects {\n          id\n        }\n      }\n    }\n  }\n`;\ntype QueryResult = {\n  getHost: {\n    id: string;\n    get: {\n      aspects: { id: string }[];\n    };\n  };\n};\n\nexport async function fetchComponentAspects(componentId: string) {\n  try {\n    const response = await request<QueryResult>(GQL_SERVER, GET_COMPONENT_ASPECTS, { id: componentId.toString() });\n    return response.getHost.get.aspects.map((x) => x.id);\n  } catch (err: any) {\n    // eslint-disable-next-line no-console\n    console.error(`[gql] error on \"getComponentAspects\" - \"${err.toString()}\"`);\n    return undefined;\n  }\n}\n"]}