{"version":3,"sources":["preview.main.runtime.tsx"],"names":["noopResult","results","toString","DEFAULT_TEMP_DIR","CACHE_ROOT","PreviewAspect","id","PreviewMain","constructor","harmony","previewSlot","ui","envs","componentAspect","pkg","aspectLoader","config","bundlingStrategySlot","builder","workspace","logger","dependencyResolver","Map","Date","now","c","updater","env","getEnv","envId","executionRef","executionRefs","get","warn","updateLinkFiles","currentComponents","executionCtx","cId","component","forEach","components","found","Promise","resolve","handleComponentChange","remove","tempFolder","getTempDir","getComponentBundleSize","data","getDataByAspect","undefined","COMPONENT_STRATEGY_SIZE_KEY_NAME","getPreview","artifacts","getArtifactsVinylByExtensionAndTaskName","PREVIEW_TASK_NAME","PreviewArtifact","getPreviewFiles","isBundledWithEnv","files","getPaths","getArtifactsVinylByExtensionAndName","COMPONENT_STRATEGY_ARTIFACT_NAME","length","getEnvTemplate","GENERATE_ENV_TEMPLATE_TASK_NAME","getCoreEnvTemplate","coreEnvDir","artifactDef","artifactFactory","ArtifactFactory","rootDir","getRootDir","coreEnvDirFromBvm","paths","resolvePaths","artifactFiles","ArtifactFiles","populateVinylsFromPaths","vinyls","getEnvTemplateFromComponentEnv","getEnvId","getEnvTemplateByEnvId","isCoreEnv","host","getHost","resolvedEnvId","resolveComponentId","envComponent","BitError","getDefs","values","writeLink","prefix","moduleMap","defaultModule","dirName","isSplitComponentBundle","contents","writeLinkContents","targetDir","hash","targetPath","timestamp","writeHash","set","getPreviewTarget","context","relatedContexts","ctxId","ExecutionRef","previewRuntime","writePreviewRuntime","linkFiles","previews","map","previewDef","templatePath","renderTemplatePath","getModuleMap","environment","envRuntime","getEnvPreviewConfig","splitComponentBundle","compilerInstance","getCompiler","withPaths","modulePath","getPreviewComponentRootPath","getModulePath","file","path","distRelativePath","getDistPathBySrcPath","relative","dirPath","recursive","link","all","aspectsIdsToNotFilterOut","getUi","Error","name","uiRoot","resolvedAspects","resolveAspects","PreviewRuntime","filteredAspects","filterAspectsByExecutionContext","filePath","generateRoot","aspects","allComponentContextAspects","reduce","acc","curr","concat","state","ids","hostAspects","Object","keys","toObject","allAspectsToInclude","filtered","filter","aspect","getId","isCoreAspect","includes","getDefaultStrategies","EnvBundlingStrategy","ComponentBundlingStrategy","getPreviewConfig","getBundlingStrategy","defaultStrategies","envPreviewConfig","strategyFromEnv","strategyName","bundlingStrategy","strategies","selected","find","strategy","BundlingStrategyNotFound","registerBundlingStrategy","register","registerDefinition","provider","bundler","componentExtension","uiMain","pubsub","loggerMain","graphql","createLogger","preview","registerStartPlugin","PreviewStartPlugin","registerRoute","PreviewRoute","ComponentPreviewRoute","EnvTemplateRoute","PreviewAssetsRoute","registerTarget","entry","bind","disabled","registerBuildTasks","EnvPreviewTemplateTask","PreviewTask","registerOnComponentAdd","add","registerOnComponentChange","update","registerOnComponentRemove","handleComponentRemoval","Slot","withType","MainRuntime","BundlerAspect","BuilderAspect","ComponentAspect","UIAspect","EnvsAspect","WorkspaceAspect","PkgAspect","PubsubAspect","AspectLoaderAspect","LoggerAspect","DependencyResolverAspect","GraphqlAspect","addRuntime"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;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","sourcesContent":["import { ArtifactFactory, BuilderAspect } from '@teambit/builder';\nimport type { BuilderMain } from '@teambit/builder';\nimport { Asset, BundlerAspect, BundlerMain } from '@teambit/bundler';\nimport { PubsubAspect, PubsubMain } from '@teambit/pubsub';\nimport { MainRuntime } from '@teambit/cli';\nimport { Component, ComponentAspect, ComponentMain, ComponentMap, ComponentID } from '@teambit/component';\nimport { EnvsAspect } from '@teambit/envs';\nimport type { EnvsMain, ExecutionContext, PreviewEnv } from '@teambit/envs';\nimport { Slot, SlotRegistry, Harmony } from '@teambit/harmony';\nimport { UIAspect, UiMain } from '@teambit/ui';\nimport { CACHE_ROOT } from '@teambit/legacy/dist/constants';\nimport { BitError } from '@teambit/bit-error';\nimport objectHash from 'object-hash';\nimport { uniq } from 'lodash';\nimport { writeFileSync, existsSync, mkdirSync } from 'fs-extra';\nimport { join } from 'path';\nimport { PkgAspect, PkgMain } from '@teambit/pkg';\nimport { AspectLoaderAspect, getAspectDir, getAspectDirFromBvm } from '@teambit/aspect-loader';\nimport type { AspectDefinition, AspectLoaderMain } from '@teambit/aspect-loader';\nimport WorkspaceAspect, { Workspace } from '@teambit/workspace';\nimport { LoggerAspect, LoggerMain, Logger } from '@teambit/logger';\nimport { DependencyResolverAspect } from '@teambit/dependency-resolver';\nimport type { DependencyResolverMain } from '@teambit/dependency-resolver';\nimport { ArtifactFiles } from '@teambit/legacy/dist/consumer/component/sources/artifact-files';\nimport GraphqlAspect, { GraphqlMain } from '@teambit/graphql';\nimport { BundlingStrategyNotFound } from './exceptions';\nimport { generateLink } from './generate-link';\nimport { PreviewArtifact } from './preview-artifact';\nimport { PreviewDefinition } from './preview-definition';\nimport { PreviewAspect, PreviewRuntime } from './preview.aspect';\nimport { PreviewRoute } from './preview.route';\nimport { PreviewTask, PREVIEW_TASK_NAME } from './preview.task';\nimport { BundlingStrategy } from './bundling-strategy';\nimport { EnvBundlingStrategy, ComponentBundlingStrategy } from './strategies';\nimport { ExecutionRef } from './execution-ref';\nimport { PreviewStartPlugin } from './preview.start-plugin';\nimport {\n  EnvPreviewTemplateTask,\n  GENERATE_ENV_TEMPLATE_TASK_NAME,\n  getArtifactDef as getEnvTemplateArtifactDef,\n} from './env-preview-template.task';\nimport { EnvTemplateRoute } from './env-template.route';\nimport { ComponentPreviewRoute } from './component-preview.route';\nimport { COMPONENT_STRATEGY_ARTIFACT_NAME, COMPONENT_STRATEGY_SIZE_KEY_NAME } from './strategies/component-strategy';\nimport { previewSchema } from './preview.graphql';\nimport { PreviewAssetsRoute } from './preview-assets.route';\n\nconst noopResult = {\n  results: [],\n  toString: () => `updating link file`,\n};\n\nconst DEFAULT_TEMP_DIR = join(CACHE_ROOT, PreviewAspect.id);\n\nexport type PreviewDefinitionRegistry = SlotRegistry<PreviewDefinition>;\n\ntype PreviewFiles = {\n  files: string[];\n  isBundledWithEnv: boolean;\n};\n\nexport type ComponentPreviewSizedFile = Asset;\n\nexport type ComponentPreviewSize = {\n  files: ComponentPreviewSizedFile[];\n  assets: ComponentPreviewSizedFile[];\n  totalFiles: number;\n  compressedTotalFiles?: number;\n  totalAssets: number;\n  compressedTotalAssets?: number;\n  total: number;\n  compressedTotal?: number;\n};\n\nexport type ComponentPreviewMetaData = {\n  size?: ComponentPreviewSize;\n};\n\nexport type PreviewConfig = {\n  bundlingStrategy?: string;\n  disabled: boolean;\n  /**\n   * limit concurrent components when running the bundling step for your bundler during generate components preview task.\n   * this helps mitigate large memory consumption for the build pipeline. This may increase the overall time for the generate-preview task, but reduce memory footprint.\n   * default - no limit.\n   */\n  maxChunkSize?: number;\n};\n\nexport type EnvPreviewConfig = {\n  strategyName?: string;\n  splitComponentBundle?: boolean;\n};\n\nexport type BundlingStrategySlot = SlotRegistry<BundlingStrategy>;\n\nexport type GenerateLinkFn = (prefix: string, componentMap: ComponentMap<string[]>, defaultModule?: string) => string;\n\nexport class PreviewMain {\n  constructor(\n    /**\n     * harmony context.\n     */\n    private harmony: Harmony,\n\n    /**\n     * slot for preview definitions.\n     */\n    private previewSlot: PreviewDefinitionRegistry,\n\n    private ui: UiMain,\n\n    private envs: EnvsMain,\n\n    private componentAspect: ComponentMain,\n\n    private pkg: PkgMain,\n\n    private aspectLoader: AspectLoaderMain,\n\n    readonly config: PreviewConfig,\n\n    private bundlingStrategySlot: BundlingStrategySlot,\n\n    private builder: BuilderMain,\n\n    private workspace: Workspace | undefined,\n\n    private logger: Logger,\n\n    private dependencyResolver: DependencyResolverMain\n  ) {}\n\n  get tempFolder(): string {\n    return this.workspace?.getTempDir(PreviewAspect.id) || DEFAULT_TEMP_DIR;\n  }\n\n  getComponentBundleSize(component: Component): ComponentPreviewSize | undefined {\n    const data = this.builder.getDataByAspect(component, PreviewAspect.id);\n\n    if (!data) return undefined;\n    return data[COMPONENT_STRATEGY_SIZE_KEY_NAME];\n  }\n\n  async getPreview(component: Component): Promise<PreviewArtifact | undefined> {\n    const artifacts = await this.builder.getArtifactsVinylByExtensionAndTaskName(\n      component,\n      PreviewAspect.id,\n      PREVIEW_TASK_NAME\n    );\n    if (!artifacts) return undefined;\n    return new PreviewArtifact(artifacts);\n  }\n\n  /**\n   * Get a list of all the artifact files generated during the GeneratePreview task\n   * @param component\n   * @returns\n   */\n  async getPreviewFiles(component: Component): Promise<PreviewFiles | undefined> {\n    const artifacts = await this.getPreview(component);\n    const isBundledWithEnv = await this.isBundledWithEnv(component);\n    if (!artifacts) return undefined;\n    return {\n      files: artifacts.getPaths(),\n      isBundledWithEnv,\n    };\n  }\n\n  /**\n   * Check if the component preview bundle contain the env as part of the bundle or only the component code\n   * (we used in the past to bundle them together, there might also be specific envs which still uses the env strategy)\n   * @param component\n   * @returns\n   */\n  async isBundledWithEnv(component: Component): Promise<boolean> {\n    const artifacts = await this.builder.getArtifactsVinylByExtensionAndName(\n      component,\n      PreviewAspect.id,\n      COMPONENT_STRATEGY_ARTIFACT_NAME\n    );\n    if (!artifacts || !artifacts.length) return true;\n\n    return false;\n  }\n\n  /**\n   * Getting the env template artifact\n   * This should be called with the env itself or it will return undefined\n   * If you want to get the env template from the env of the component,\n   * use: getEnvTemplateFromComponentEnv below\n   *\n   * @param component\n   * @returns\n   */\n  async getEnvTemplate(component: Component): Promise<PreviewArtifact | undefined> {\n    const artifacts = await this.builder.getArtifactsVinylByExtensionAndTaskName(\n      component,\n      PreviewAspect.id,\n      GENERATE_ENV_TEMPLATE_TASK_NAME\n    );\n    if (!artifacts || !artifacts.length) return undefined;\n\n    return new PreviewArtifact(artifacts);\n  }\n\n  /**\n   * This is a special method to get a core env template\n   * As the core envs doesn't exist in the scope we need to bring it from other place\n   * We will bring it from the core env package files\n   */\n  private async getCoreEnvTemplate(envId: string): Promise<PreviewArtifact | undefined> {\n    const coreEnvDir = getAspectDir(envId);\n    // const finalDir = join(coreEnvDir, getEnvTemplateArtifactDirectory());\n    const artifactDef = getEnvTemplateArtifactDef()[0];\n    const artifactFactory = new ArtifactFactory();\n\n    let rootDir = artifactFactory.getRootDir(coreEnvDir, artifactDef);\n    if (!existsSync(rootDir)) {\n      // fallback to the bvm folder\n      const coreEnvDirFromBvm = getAspectDirFromBvm(envId);\n      rootDir = artifactFactory.getRootDir(coreEnvDirFromBvm, artifactDef);\n    }\n    if (!existsSync(rootDir)) {\n      return undefined;\n    }\n    const paths = artifactFactory.resolvePaths(rootDir, artifactDef);\n    if (!paths || !paths.length) {\n      return undefined;\n    }\n    const artifactFiles = new ArtifactFiles(paths);\n\n    artifactFiles.populateVinylsFromPaths(rootDir);\n    return new PreviewArtifact(artifactFiles.vinyls);\n  }\n\n  /**\n   * This will fetch the component env, then will take the env template from the component env\n   * @param component\n   */\n  async getEnvTemplateFromComponentEnv(component: Component): Promise<PreviewArtifact | undefined> {\n    const envId = this.envs.getEnvId(component);\n    return this.getEnvTemplateByEnvId(envId);\n  }\n\n  /**\n   * This will fetch the component env, then will take the env template from the component env\n   * @param component\n   */\n  async getEnvTemplateByEnvId(envId: string): Promise<PreviewArtifact | undefined> {\n    // Special treatment for core envs\n    if (this.aspectLoader.isCoreEnv(envId)) {\n      return this.getCoreEnvTemplate(envId);\n    }\n    const host = this.componentAspect.getHost();\n    const resolvedEnvId = await host.resolveComponentId(envId);\n    const envComponent = await host.get(resolvedEnvId);\n    if (!envComponent) {\n      throw new BitError(`can't load env. env id is ${envId}`);\n    }\n    return this.getEnvTemplate(envComponent);\n  }\n\n  getDefs(): PreviewDefinition[] {\n    return this.previewSlot.values();\n  }\n\n  private writeHash = new Map<string, string>();\n  private timestamp = Date.now();\n\n  /**\n   * write a link to load custom modules dynamically.\n   * @param prefix write\n   * @param moduleMap map of components to module paths to require.\n   * @param defaultModule\n   * @param dirName\n   */\n  writeLink(\n    prefix: string,\n    moduleMap: ComponentMap<string[]>,\n    defaultModule: string | undefined,\n    dirName: string,\n    isSplitComponentBundle: boolean\n  ) {\n    const contents = generateLink(prefix, moduleMap, defaultModule, isSplitComponentBundle);\n    return this.writeLinkContents(contents, dirName, prefix);\n  }\n\n  writeLinkContents(contents: string, targetDir: string, prefix: string) {\n    const hash = objectHash(contents);\n    const targetPath = join(targetDir, `${prefix}-${this.timestamp}.js`);\n\n    // write only if link has changed (prevents triggering fs watches)\n    if (this.writeHash.get(targetPath) !== hash) {\n      writeFileSync(targetPath, contents);\n      this.writeHash.set(targetPath, hash);\n    }\n\n    return targetPath;\n  }\n\n  private executionRefs = new Map<string, ExecutionRef>();\n\n  private async getPreviewTarget(\n    /** execution context (of the specific env) */\n    context: ExecutionContext\n  ): Promise<string[]> {\n    // store context for later link-file updates\n    // also register related envs that this context is acting on their behalf\n    [context.id, ...context.relatedContexts].forEach((ctxId) => {\n      this.executionRefs.set(ctxId, new ExecutionRef(context));\n    });\n\n    const previewRuntime = await this.writePreviewRuntime(context);\n    const linkFiles = await this.updateLinkFiles(context.components, context);\n\n    return [...linkFiles, previewRuntime];\n  }\n\n  private updateLinkFiles(components: Component[] = [], context: ExecutionContext) {\n    const previews = this.previewSlot.values();\n    const paths = previews.map(async (previewDef) => {\n      const templatePath = await previewDef.renderTemplatePath?.(context);\n\n      const map = await previewDef.getModuleMap(components);\n      const environment = context.envRuntime.env;\n      const isSplitComponentBundle = this.getEnvPreviewConfig().splitComponentBundle ?? false;\n      const compilerInstance = environment.getCompiler?.();\n      const withPaths = map.map<string[]>((files, component) => {\n        const modulePath =\n          compilerInstance?.getPreviewComponentRootPath?.(component) || this.pkg.getModulePath(component);\n        return files.map((file) => {\n          if (!this.workspace || !compilerInstance) {\n            return file.path;\n          }\n          const distRelativePath = compilerInstance.getDistPathBySrcPath(file.relative);\n          return join(this.workspace.path, modulePath, distRelativePath);\n        });\n        // return files.map((file) => file.path);\n      });\n\n      const dirPath = join(this.tempFolder, context.id);\n      if (!existsSync(dirPath)) mkdirSync(dirPath, { recursive: true });\n\n      const link = this.writeLink(previewDef.prefix, withPaths, templatePath, dirPath, isSplitComponentBundle);\n      return link;\n    });\n\n    return Promise.all(paths);\n  }\n\n  async writePreviewRuntime(context: { components: Component[] }, aspectsIdsToNotFilterOut: string[] = []) {\n    const ui = this.ui.getUi();\n    if (!ui) throw new Error('ui not found');\n    const [name, uiRoot] = ui;\n    const resolvedAspects = await uiRoot.resolveAspects(PreviewRuntime.name);\n    const filteredAspects = this.filterAspectsByExecutionContext(resolvedAspects, context, aspectsIdsToNotFilterOut);\n    const filePath = await this.ui.generateRoot(filteredAspects, name, 'preview', PreviewAspect.id);\n    return filePath;\n  }\n\n  /**\n   * Filter the aspects to have only aspects that are:\n   * 1. core aspects\n   * 2. configured on the host (workspace/scope)\n   * 3. used by at least one component from the context\n   * @param aspects\n   * @param context\n   */\n  private filterAspectsByExecutionContext(\n    aspects: AspectDefinition[],\n    context: { components: Component[] },\n    aspectsIdsToNotFilterOut: string[] = []\n  ) {\n    let allComponentContextAspects: string[] = [];\n    allComponentContextAspects = context.components.reduce((acc, curr) => {\n      return acc.concat(curr.state.aspects.ids);\n    }, allComponentContextAspects);\n    const hostAspects = Object.keys(this.harmony.config.toObject());\n    const allAspectsToInclude = uniq(hostAspects.concat(allComponentContextAspects));\n    const filtered = aspects.filter((aspect) => {\n      if (!aspect.getId) {\n        return false;\n      }\n      return (\n        this.aspectLoader.isCoreAspect(aspect.getId) ||\n        allAspectsToInclude.includes(aspect.getId) ||\n        aspectsIdsToNotFilterOut.includes(aspect.getId)\n      );\n    });\n\n    return filtered;\n  }\n\n  private getDefaultStrategies() {\n    return [new EnvBundlingStrategy(this), new ComponentBundlingStrategy(this, this.pkg, this.dependencyResolver)];\n  }\n\n  // TODO - executionContext should be responsible for updating components list, and emit 'update' events\n  // instead we keep track of changes\n  private handleComponentChange = async (c: Component, updater: (currentComponents: ExecutionRef) => void) => {\n    const env = this.envs.getEnv(c);\n    const envId = env.id.toString();\n\n    const executionRef = this.executionRefs.get(envId);\n    if (!executionRef) {\n      this.logger.warn(\n        `failed to update link file for component \"${c.id.toString()}\" - could not find execution context for ${envId}`\n      );\n      return noopResult;\n    }\n\n    // add / remove / etc\n    updater(executionRef);\n\n    await this.updateLinkFiles(executionRef.currentComponents, executionRef.executionCtx);\n\n    return noopResult;\n  };\n\n  private handleComponentRemoval = (cId: ComponentID) => {\n    let component: Component | undefined;\n    this.executionRefs.forEach((components) => {\n      const found = components.get(cId);\n      if (found) component = found;\n    });\n    if (!component) return Promise.resolve(noopResult);\n\n    return this.handleComponentChange(component, (currentComponents) => currentComponents.remove(cId));\n  };\n\n  getEnvPreviewConfig(env?: PreviewEnv): EnvPreviewConfig {\n    const config = env?.getPreviewConfig && typeof env?.getPreviewConfig === 'function' ? env?.getPreviewConfig() : {};\n\n    return config;\n  }\n\n  /**\n   * return the configured bundling strategy.\n   */\n  getBundlingStrategy(env?: PreviewEnv): BundlingStrategy {\n    const defaultStrategies = this.getDefaultStrategies();\n    const envPreviewConfig = this.getEnvPreviewConfig(env);\n    const strategyFromEnv = envPreviewConfig?.strategyName;\n    const strategyName = strategyFromEnv || this.config.bundlingStrategy || 'env';\n    const strategies = this.bundlingStrategySlot.values().concat(defaultStrategies);\n    const selected = strategies.find((strategy) => {\n      return strategy.name === strategyName;\n    });\n\n    if (!selected) throw new BundlingStrategyNotFound(strategyName);\n\n    return selected;\n  }\n\n  /**\n   * register a new bundling strategy. default available strategies are `env` and ``\n   */\n  registerBundlingStrategy(bundlingStrategy: BundlingStrategy) {\n    this.bundlingStrategySlot.register(bundlingStrategy);\n    return this;\n  }\n\n  /**\n   * register a new preview definition.\n   */\n  registerDefinition(previewDef: PreviewDefinition) {\n    this.previewSlot.register(previewDef);\n  }\n\n  static slots = [Slot.withType<PreviewDefinition>(), Slot.withType<BundlingStrategy>()];\n\n  static runtime = MainRuntime;\n  static dependencies = [\n    BundlerAspect,\n    BuilderAspect,\n    ComponentAspect,\n    UIAspect,\n    EnvsAspect,\n    WorkspaceAspect,\n    PkgAspect,\n    PubsubAspect,\n    AspectLoaderAspect,\n    LoggerAspect,\n    DependencyResolverAspect,\n    GraphqlAspect,\n  ];\n\n  static defaultConfig = {\n    disabled: false,\n  };\n\n  static async provider(\n    // eslint-disable-next-line max-len\n    [\n      bundler,\n      builder,\n      componentExtension,\n      uiMain,\n      envs,\n      workspace,\n      pkg,\n      pubsub,\n      aspectLoader,\n      loggerMain,\n      dependencyResolver,\n      graphql,\n    ]: [\n      BundlerMain,\n      BuilderMain,\n      ComponentMain,\n      UiMain,\n      EnvsMain,\n      Workspace | undefined,\n      PkgMain,\n      PubsubMain,\n      AspectLoaderMain,\n      LoggerMain,\n      DependencyResolverMain,\n      GraphqlMain\n    ],\n    config: PreviewConfig,\n    [previewSlot, bundlingStrategySlot]: [PreviewDefinitionRegistry, BundlingStrategySlot],\n    harmony: Harmony\n  ) {\n    const logger = loggerMain.createLogger(PreviewAspect.id);\n    // app.registerApp(new PreviewApp());\n    const preview = new PreviewMain(\n      harmony,\n      previewSlot,\n      uiMain,\n      envs,\n      componentExtension,\n      pkg,\n      aspectLoader,\n      config,\n      bundlingStrategySlot,\n      builder,\n      workspace,\n      logger,\n      dependencyResolver\n    );\n\n    if (workspace) uiMain.registerStartPlugin(new PreviewStartPlugin(workspace, bundler, uiMain, pubsub, logger));\n\n    componentExtension.registerRoute([\n      new PreviewRoute(preview, logger),\n      new ComponentPreviewRoute(preview, logger),\n      // @ts-ignore\n      new EnvTemplateRoute(preview, logger),\n      new PreviewAssetsRoute(preview, logger),\n    ]);\n\n    bundler.registerTarget([\n      {\n        entry: preview.getPreviewTarget.bind(preview),\n      },\n    ]);\n\n    if (!config.disabled)\n      builder.registerBuildTasks([\n        new EnvPreviewTemplateTask(preview, envs, aspectLoader),\n        new PreviewTask(bundler, preview),\n      ]);\n\n    if (workspace) {\n      workspace.registerOnComponentAdd((c) =>\n        preview.handleComponentChange(c, (currentComponents) => currentComponents.add(c))\n      );\n      workspace.registerOnComponentChange((c) =>\n        preview.handleComponentChange(c, (currentComponents) => currentComponents.update(c))\n      );\n      workspace.registerOnComponentRemove((cId) => preview.handleComponentRemoval(cId));\n    }\n\n    graphql.register(previewSchema(preview));\n\n    return preview;\n  }\n}\n\nPreviewAspect.addRuntime(PreviewMain);\n"]}