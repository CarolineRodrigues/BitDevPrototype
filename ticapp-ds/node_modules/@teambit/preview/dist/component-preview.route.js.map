{"version":3,"sources":["component-preview.route.ts"],"names":["ComponentPreviewRoute","constructor","preview","logger","req","res","next","isLegacyPath","component","status","send","artifact","getPreview","e","error"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAMA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEO,MAAMA,qBAAN,CAA6C;AAClDC,EAAAA,WAAW;AACT;AACJ;AACA;AACYC,EAAAA,OAJC,EAKDC,MALC,EAMT;AAAA,SAFQD,OAER,GAFQA,OAER;AAAA,SADQC,MACR,GADQA,MACR;AAAA,mDAEO,iCAFP;AAAA,oDAGO,KAHP;AAAA,yDAKY,CACZ,OAAOC,GAAP,EAAuCC,GAAvC,EAAsDC,IAAtD,KAA6E;AAC3E,UAAI;AACF,YAAIC,YAAY,GAAG,KAAnB,CADE,CAEF;;AACA,cAAMC,SAAS,GAAGJ,GAAG,CAACI,SAAtB;AACA,YAAI,CAACA,SAAL,EAAgB,OAAOH,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,uCAArB,CAAP;AAEhB,YAAIC,QAAJ,CANE,CAOF;;AACA,YAAI;AACFJ,UAAAA,YAAY,GAAG,IAAf;AACAI,UAAAA,QAAQ,GAAG,MAAM,KAAKT,OAAL,CAAaU,UAAb,CAAwBJ,SAAxB,CAAjB;AACD,SAHD,CAGE,OAAOK,CAAP,EAAe;AACf,eAAKV,MAAL,CAAYW,KAAZ,CAAmB,+BAAnB,EAAmDD,CAAnD;AACA,iBAAOR,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,uCAArB,CAAP;AACD,SAdC,CAeF;;;AACAN,QAAAA,GAAG,CAACO,QAAJ,GAAeA,QAAf,CAhBE,CAiBF;;AACAP,QAAAA,GAAG,CAACG,YAAJ,GAAmBA,YAAnB;AACA,eAAOD,IAAI,EAAX;AACD,OApBD,CAoBE,OAAOO,CAAP,EAAe;AACf,aAAKV,MAAL,CAAYW,KAAZ,CAAkB,wBAAlB,EAA4CD,CAA5C;AACA,eAAOR,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,yCAArB,CAAP;AACD;AACF,KA1BW,EA2BZ,yDAA0B,KAAKP,MAA/B,CA3BY,CALZ;AAAE;;AAP8C","sourcesContent":["import type { NextFunction, Request, Response, Route } from '@teambit/express';\nimport type { Component } from '@teambit/component';\nimport { noPreview, serverError } from '@teambit/ui-foundation.ui.pages.static-error';\nimport type { Logger } from '@teambit/logger';\n\nimport { PreviewMain } from './preview.main.runtime';\nimport type { PreviewArtifact } from './preview-artifact';\nimport type { PreviewUrlParams } from './artifact-file-middleware';\nimport { getArtifactFileMiddleware } from './artifact-file-middleware';\n\nexport class ComponentPreviewRoute implements Route {\n  constructor(\n    /**\n     * preview extension.\n     */\n    private preview: PreviewMain,\n    private logger: Logger\n  ) {}\n\n  route = `/component-preview/:filePath(*)`;\n  method = 'get';\n\n  middlewares = [\n    async (req: Request<PreviewUrlParams>, res: Response, next: NextFunction) => {\n      try {\n        let isLegacyPath = false;\n        // @ts-ignore TODO: @guy please fix.\n        const component = req.component as Component | undefined;\n        if (!component) return res.status(404).send(noPreview());\n\n        let artifact: PreviewArtifact | undefined;\n        // TODO - prevent error `getVinylsAndImportIfMissing is not a function` #4680\n        try {\n          isLegacyPath = true;\n          artifact = await this.preview.getPreview(component);\n        } catch (e: any) {\n          this.logger.error(`preview.getPreview has failed`, e);\n          return res.status(404).send(noPreview());\n        }\n        // @ts-ignore\n        req.artifact = artifact;\n        // @ts-ignore\n        req.isLegacyPath = isLegacyPath;\n        return next();\n      } catch (e: any) {\n        this.logger.error('failed getting preview', e);\n        return res.status(500).send(serverError());\n      }\n    },\n    getArtifactFileMiddleware(this.logger),\n  ];\n}\n"]}