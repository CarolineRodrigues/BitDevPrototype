{"version":3,"sources":["env-template.route.ts"],"names":["CACHE_MAX_AGE","getCacheControl","_filePath","_contents","mimeType","undefined","EnvTemplateRoute","constructor","preview","logger","req","res","next","artifact","componentId","envId","params","getEnvTemplateByEnvId","e","error","status","send","isLegacyPath"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAKA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAMA;AACA,MAAMA,aAAa,GAAG,KAAK,EAAL,GAAU,EAAV,GAAe,CAArC;;AAEA,MAAMC,eAAoC,GAAG,CAACC,SAAD,EAAoBC,SAApB,EAAuCC,QAAvC,KAAoE;AAC/G;AACA,MAAIA,QAAQ,IAAIA,QAAQ,KAAK,WAA7B,EAA0C;AACxC,WAAOC,SAAP;AACD;;AACD,SAAQ,oBAAmBL,aAAc,EAAzC;AACD,CAND;;AAQO,MAAMM,gBAAN,CAA2D;AAChEC,EAAAA,WAAW;AACT;AACJ;AACA;AACYC,EAAAA,OAJC,EAKDC,MALC,EAMT;AAAA,SAFQD,OAER,GAFQA,OAER;AAAA,SADQC,MACR,GADQA,MACR;AAAA,mDAEO,yCAFP;AAAA,oDAGO,KAHP;AAAA,8DAOiB,KAPjB;AAAA,yDAUY,CACZ,OAAOC,GAAP,EAAgCC,GAAhC,EAA+CC,IAA/C,KAAsE;AACpE,UAAI;AACF;AACA;AACA;AAEA,YAAIC,QAAJ,CALE,CAMF;;AACA,YAAI;AACF,gBAAM;AAAEC,YAAAA,WAAW,EAAEC;AAAf,cAAyBL,GAAG,CAACM,MAAnC;AACAH,UAAAA,QAAQ,GAAG,MAAM,KAAKL,OAAL,CAAaS,qBAAb,CAAmCF,KAAnC,CAAjB;AACD,SAHD,CAGE,OAAOG,CAAP,EAAe;AACf,eAAKT,MAAL,CAAYU,KAAZ,CAAmB,kCAAnB,EAAsDD,CAAtD;AACA,iBAAOP,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,uCAArB,CAAP;AACD,SAbC,CAeF;;;AACAX,QAAAA,GAAG,CAACG,QAAJ,GAAeA,QAAf,CAhBE,CAiBF;;AACAH,QAAAA,GAAG,CAACY,YAAJ,GAAmB,KAAnB;AAEA,eAAOV,IAAI,EAAX;AACD,OArBD,CAqBE,OAAOM,CAAP,EAAe;AACf,aAAKT,MAAL,CAAYU,KAAZ,CAAkB,wBAAlB,EAA4CD,CAA5C;AACA,eAAOP,GAAG,CAACS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,yCAArB,CAAP;AACD;AACF,KA3BW,EA4BZ,yDAA0B,KAAKZ,MAA/B,EAAuCR,eAAvC,CA5BY,CAVZ;AAAE;;AAP4D","sourcesContent":["import type { NextFunction, Request, Response } from '@teambit/express';\nimport type { ComponentUrlParams, RegisteredComponentRoute } from '@teambit/component';\nimport { noPreview, serverError } from '@teambit/ui-foundation.ui.pages.static-error';\nimport type { Logger } from '@teambit/logger';\n\nimport type { PreviewMain } from './preview.main.runtime';\nimport type { PreviewArtifact } from './preview-artifact';\nimport { getArtifactFileMiddleware, GetCacheControlFunc } from './artifact-file-middleware';\n\ntype UrlParams = ComponentUrlParams & {\n  filePath?: string;\n};\n\n// Week for now\nconst CACHE_MAX_AGE = 60 * 60 * 24 * 7;\n\nconst getCacheControl: GetCacheControlFunc = (_filePath: string, _contents: string, mimeType?: string | null) => {\n  // Do not cache the html files\n  if (mimeType && mimeType === 'text/html') {\n    return undefined;\n  }\n  return `private, max-age=${CACHE_MAX_AGE}`;\n};\n\nexport class EnvTemplateRoute implements RegisteredComponentRoute {\n  constructor(\n    /**\n     * preview extension.\n     */\n    private preview: PreviewMain,\n    private logger: Logger\n  ) {}\n\n  route = `/env-template/:previewName/:filePath(*)`;\n  method = 'get';\n\n  // Since we might give it a core env id\n  // Then in the component route when we do host.get(id) it will fail, as we don't have the core envs in the scope/workspace\n  resolveComponent = false;\n\n  // @ts-ignore\n  middlewares = [\n    async (req: Request<UrlParams>, res: Response, next: NextFunction) => {\n      try {\n        // @ts-ignore TODO: @guy please fix.\n        // const component = req.component as Component | undefined;\n        // if (!component) return res.status(404).send(noPreview());\n\n        let artifact: PreviewArtifact | undefined;\n        // TODO - prevent error `getVinylsAndImportIfMissing is not a function` #4680\n        try {\n          const { componentId: envId } = req.params;\n          artifact = await this.preview.getEnvTemplateByEnvId(envId);\n        } catch (e: any) {\n          this.logger.error(`getEnvTemplateByEnvId has failed`, e);\n          return res.status(404).send(noPreview());\n        }\n\n        // @ts-ignore\n        req.artifact = artifact;\n        // @ts-ignore\n        req.isLegacyPath = false;\n\n        return next();\n      } catch (e: any) {\n        this.logger.error('failed getting preview', e);\n        return res.status(500).send(serverError());\n      }\n    },\n    getArtifactFileMiddleware(this.logger, getCacheControl),\n  ];\n}\n"]}