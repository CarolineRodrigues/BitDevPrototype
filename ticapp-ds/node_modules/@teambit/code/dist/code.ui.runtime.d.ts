/// <reference types="react" />
import { ComponentUI } from '@teambit/component';
import { SlotRegistry } from '@teambit/harmony';
import type { FileIconMatch } from '@teambit/code.ui.utils.get-file-icon';
export declare type FileIconSlot = SlotRegistry<FileIconMatch[]>;
/**
 * Component code tab aspect. Presents the code tab page and allows to control the code tab and register specific icons for each file type.
 *  @example CodeUI.registerEnvFileIcon([(fileName) => (/your-regexp/.test(fileName) ? 'your.icon.url' : undefined)])
 */
export declare class CodeUI {
    /**
     * register an icon for a specific file type. pass icon and a match method/regexp
     */
    private fileIconSlot?;
    constructor(
    /**
     * register an icon for a specific file type. pass icon and a match method/regexp
     */
    fileIconSlot?: FileIconSlot | undefined);
    getCodePage: () => JSX.Element;
    registerEnvFileIcon(icons: FileIconMatch[]): this;
    static dependencies: import("@teambit/harmony").Aspect[];
    static runtime: import("@teambit/harmony").RuntimeDefinition;
    static slots: ((registerFn: () => string) => SlotRegistry<string>)[];
    static provider([component]: [ComponentUI], config: any, [fileIconSlot]: [FileIconSlot]): Promise<CodeUI>;
}
