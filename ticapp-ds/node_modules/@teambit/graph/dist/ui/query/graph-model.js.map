{"version":3,"sources":["graph-model.ts"],"names":["GraphModel","constructor","nodes","edges","from","rawGraph","map","NodeModel","EdgeModel"],"mappings":";;;;;;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEO,MAAMA,UAAN,CAAiB;AACtBC,EAAAA,WAAW,CAAQC,KAAR,EAAmCC,KAAnC,EAAuD;AAAA,SAA/CD,KAA+C,GAA/CA,KAA+C;AAAA,SAApBC,KAAoB,GAApBA,KAAoB;AAAE;;AACzD,SAAJC,IAAI,CAACC,QAAD,EAAqB;AAC9B,UAAMH,KAAK,GAAGG,QAAQ,CAACH,KAAT,CAAeI,GAAf,CAAmBC,uBAAUH,IAA7B,CAAd;AACA,UAAMD,KAAK,GAAGE,QAAQ,CAACF,KAAT,CAAeG,GAAf,CAAmBE,uBAAUJ,IAA7B,CAAd;AACA,WAAO,IAAIJ,UAAJ,CAAeE,KAAf,EAAsBC,KAAtB,CAAP;AACD;;AANqB","sourcesContent":["import { RawGraph } from './get-graph.query';\nimport { NodeModel } from './node-model';\nimport { EdgeModel } from './edge-model';\n\nexport class GraphModel {\n  constructor(public nodes: NodeModel[], public edges: EdgeModel[]) {}\n  static from(rawGraph: RawGraph) {\n    const nodes = rawGraph.nodes.map(NodeModel.from);\n    const edges = rawGraph.edges.map(EdgeModel.from);\n    return new GraphModel(nodes, edges);\n  }\n}\n"]}