{"version":3,"sources":["use-graph-query.ts"],"names":["useGraphQuery","componentId","filter","data","error","loading","GET_GRAPH","variables","ids","rawGraph","graph","clientError","GraphQlError","undefined","serverError","message","GraphModel","from"],"mappings":";;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAOA;AACO,SAASA,aAAT,CAAuBC,WAAvB,EAA8CC,MAA9C,EAA+D;AACpE,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA2B,yCAA4CC,qBAA5C,EAAuD;AACtFC,IAAAA,SAAS,EAAE;AAAEC,MAAAA,GAAG,EAAEP,WAAP;AAAoBC,MAAAA;AAApB;AAD2E,GAAvD,CAAjC;AAIA,QAAMO,QAAQ,GAAGN,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEO,KAAvB;AACA,QAAMC,WAAW,GAAG,CAACF,QAAD,IAAa,CAACJ,OAAd,GAAwB,KAAIO,uBAAJ,EAAiB,GAAjB,CAAxB,GAAgDC,SAApE;AACA,QAAMC,WAAW,GAAGV,KAAK,GAAG,KAAIQ,uBAAJ,EAAiB,GAAjB,EAAsBR,KAAK,CAACW,OAA5B,CAAH,GAA0CF,SAAnE;AAEA,SAAO,sBAAQ,MAAM;AACnB,WAAO;AACLH,MAAAA,KAAK,EAAED,QAAQ,GAAGO,yBAAWC,IAAX,CAAgBR,QAAhB,CAAH,GAA+BI,SADzC;AAELT,MAAAA,KAAK,EAAEU,WAAW,IAAIH,WAFjB;AAGLN,MAAAA;AAHK,KAAP;AAKD,GANM,EAMJ,CAACI,QAAD,EAAWL,KAAX,CANI,CAAP;AAOD","sourcesContent":["import { useMemo } from 'react';\nimport { useDataQuery } from '@teambit/ui-foundation.ui.hooks.use-data-query';\nimport { GraphQlError } from '@teambit/graphql';\nimport { GET_GRAPH, RawGraphQuery } from './get-graph.query';\nimport { GraphModel } from './graph-model';\n\ntype QueryVariables = {\n  ids: string[];\n  filter?: string;\n};\n\n/** provides dependencies graph data from graphQL */\nexport function useGraphQuery(componentId: string[], filter?: string) {\n  const { data, error, loading } = useDataQuery<RawGraphQuery, QueryVariables>(GET_GRAPH, {\n    variables: { ids: componentId, filter },\n  });\n\n  const rawGraph = data?.graph;\n  const clientError = !rawGraph && !loading ? new GraphQlError(404) : undefined;\n  const serverError = error ? new GraphQlError(500, error.message) : undefined;\n\n  return useMemo(() => {\n    return {\n      graph: rawGraph ? GraphModel.from(rawGraph) : undefined,\n      error: serverError || clientError,\n      loading,\n    };\n  }, [rawGraph, error]);\n}\n"]}