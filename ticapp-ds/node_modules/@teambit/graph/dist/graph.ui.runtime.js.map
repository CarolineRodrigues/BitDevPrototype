{"version":3,"sources":["graph.ui.runtime.tsx"],"names":["GraphUI","registerComponentWidget","value","componentWidgetSlot","register","constructor","provider","componentUI","config","graphUI","section","GraphSection","registerNavigation","navigationLink","order","registerRoute","route","ComponentAspect","UIRuntime","Slot","withType","GraphAspect","addRuntime"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAQA;AACA;AACA;AACO,MAAMA,OAAN,CAAc;AACnB;AACF;AACA;AACA;AACEC,EAAAA,uBAAuB,CAACC,KAAD,EAAyB;AAC9C,SAAKC,mBAAL,CAAyBC,QAAzB,CAAkCF,KAAlC;AACD;;AAEDG,EAAAA,WAAW,CAASF,mBAAT,EAAmD;AAAA,SAA1CA,mBAA0C,GAA1CA,mBAA0C;AAAE;;AAI3C,eAARG,QAAQ,CAAC,CAACC,WAAD,CAAD,EAA+BC,MAA/B,EAAuC,CAACL,mBAAD,CAAvC,EAAqF;AACxG,UAAMM,OAAO,GAAG,IAAIT,OAAJ,CAAYG,mBAAZ,CAAhB;AACA,UAAMO,OAAO,GAAG,KAAIC,sBAAJ,EAAiBR,mBAAjB,CAAhB;AACAI,IAAAA,WAAW,CAACK,kBAAZ,CAA+BF,OAAO,CAACG,cAAvC,EAAuDH,OAAO,CAACI,KAA/D;AACAP,IAAAA,WAAW,CAACQ,aAAZ,CAA0BL,OAAO,CAACM,KAAlC;AAEA,WAAOP,OAAP;AACD;;AApBkB;;;gCAART,O,kBAUW,CAACiB,4BAAD,C;gCAVXjB,O,aAWMkB,e;gCAXNlB,O,WAYI,CAACmB,gBAAKC,QAAL,EAAD,C;;AAWjBC,qBAAYC,UAAZ,CAAuBtB,OAAvB","sourcesContent":["import { ComponentType } from 'react';\nimport { UIRuntime } from '@teambit/ui';\nimport { Slot, SlotRegistry } from '@teambit/harmony';\n\nimport { ComponentAspect, ComponentUI, ComponentModel } from '@teambit/component';\nimport { GraphAspect } from './graph.aspect';\nimport { GraphSection } from './ui/graph.section';\n\nexport interface ComponentWidgetProps extends React.HTMLAttributes<HTMLDivElement> {\n  component: ComponentModel;\n}\nexport type ComponentWidget = ComponentType<ComponentWidgetProps>;\nexport type ComponentWidgetSlot = SlotRegistry<ComponentWidget>;\n\n/**\n * Presents dependencies graph in the component page\n */\nexport class GraphUI {\n  /**\n   * adds plugins to component nodes\n   * @param value\n   */\n  registerComponentWidget(value: ComponentWidget) {\n    this.componentWidgetSlot.register(value);\n  }\n\n  constructor(private componentWidgetSlot: ComponentWidgetSlot) {}\n  static dependencies = [ComponentAspect];\n  static runtime = UIRuntime;\n  static slots = [Slot.withType<ComponentWidget>()];\n  static async provider([componentUI]: [ComponentUI], config, [componentWidgetSlot]: [ComponentWidgetSlot]) {\n    const graphUI = new GraphUI(componentWidgetSlot);\n    const section = new GraphSection(componentWidgetSlot);\n    componentUI.registerNavigation(section.navigationLink, section.order);\n    componentUI.registerRoute(section.route);\n\n    return graphUI;\n  }\n}\n\nGraphAspect.addRuntime(GraphUI);\n"]}