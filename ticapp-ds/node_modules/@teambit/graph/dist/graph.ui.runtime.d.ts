import { ComponentType } from 'react';
import { SlotRegistry } from '@teambit/harmony';
import { ComponentUI, ComponentModel } from '@teambit/component';
export interface ComponentWidgetProps extends React.HTMLAttributes<HTMLDivElement> {
    component: ComponentModel;
}
export declare type ComponentWidget = ComponentType<ComponentWidgetProps>;
export declare type ComponentWidgetSlot = SlotRegistry<ComponentWidget>;
/**
 * Presents dependencies graph in the component page
 */
export declare class GraphUI {
    private componentWidgetSlot;
    /**
     * adds plugins to component nodes
     * @param value
     */
    registerComponentWidget(value: ComponentWidget): void;
    constructor(componentWidgetSlot: ComponentWidgetSlot);
    static dependencies: import("@teambit/harmony").Aspect[];
    static runtime: import("@teambit/harmony").RuntimeDefinition;
    static slots: ((registerFn: () => string) => SlotRegistry<ComponentWidget>)[];
    static provider([componentUI]: [ComponentUI], config: any, [componentWidgetSlot]: [ComponentWidgetSlot]): Promise<GraphUI>;
}
