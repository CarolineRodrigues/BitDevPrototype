{"version":3,"sources":["scope.main.runtime.ts"],"names":["ScopeMain","constructor","harmony","legacyScope","componentExtension","config","tagRegistry","postPutSlot","postDeleteSlot","postExportSlot","postObjectsPersist","preFetchObjects","isolator","aspectLoader","logger","envs","componentLoader","ScopeComponentLoader","name","icon","backgroundIconColor","description","path","isLegacy","onTag","tagFn","host","getHost","legacyOnTagFunc","legacyComponents","options","reloadAspectsWithNewVersion","components","getManyByLegacy","builderDataMap","builderDataMapToLegacyOnTagResults","push","register","getUserAspectsIdsWithoutRootIds","allUserAspectIds","getUserAspects","rootIds","Object","keys","toObject","diffIds","getAspectsByPreviouslyUsedVersion","harmonyIds","aspectsIds","aspectsP","map","component","newId","resolveComponentId","id","previouslyUsedVersion","version","newIdWithPreviouslyUsedVersion","changeVersion","includes","toString","Promise","all","idsToLoad","loadAspects","getFromConsumerComponent","clearCache","debug","objects","builderDataComponentMap","builderDataToLegacyExtension","builderData","existingBuilder","state","aspects","get","BuilderAspect","legacy","builderExtension","ExtensionDataEntry","undefined","data","toArray","_legacy","onPostPut","postPutFn","onPostDelete","postDeleteFn","registerOnPostExport","postExportFn","registerOnPreFetchObjects","preFetchObjectsFn","registerOnPostObjectsPersist","postObjectsPersistFn","fetch","ids","persist","delete","force","lanes","headers","authData","authorization","result","fns","values","metadata","auth","componentIds","ComponentID","fromString","fn","err","error","toObjectList","types","list","ObjectList","fromBitObjects","toJs","str","endsWith","replace","parseLocalAspect","localAspects","dirPaths","localAspect","nonExistsDirPaths","filter","forEach","warn","existsDirPaths","findRuntime","dirPath","runtime","files","find","loadAspectFromPath","manifests","scopeRuntime","module","require","default","loadExtensionsByManifests","throwOnError","neededFor","info","length","join","grouped","groupAspectIdsByEnvOfTheList","envsManifestsIds","getManifestsAndLoadAspects","otherManifestsIds","other","concat","getNonLoadedAspects","envsIds","getEnvId","envId","isCoreEnv","scopeManifests","getManifestsGraphRecursively","manifest","visited","opts","nonVisitedId","requireAspects","depsToLoad","dependencies","_runtimes","depIds","d","loaded","notLoadedIds","isAspectLoaded","coreAspectsStringIds","getCoreAspectIds","idsWithoutCore","aspectIds","startsWith","resolveMultipleComponentIds","import","reFetchUnBuiltVersion","resolveLocalAspects","dirs","dir","runtimeManifest","AspectDefinition","getResolvedAspects","network","isolateComponents","c","baseDir","getAspectCapsulePath","skipIfExists","seedersOnly","includeFromNestedHosts","installOptions","copyPeerToRuntimeOnRoot","dedupe","packageManagerConfigRootDir","capsules","seedersCapsules","capsule","RequireableComponent","plugins","getPlugins","has","compileIfNoDist","load","MainRuntime","aspect","getRuntimePath","mainRuntime","runtimePath","env","getEnv","compiler","getCompiler","distDir","DEFAULT_DIST_DIRNAME","distExists","compiledCode","filesystem","flatMap","file","isFileSupported","outputText","contents","outputPath","transpileFile","filePath","componentDir","compiledFile","getDistPathBySrcPath","outputFile","tryCompile","requirableAspect","requireableExtensions","erroredId","requireWithCatch","requireableAspects","requireableExtension","doRequire","code","newErr","resolvedAspectsAgain","manifestAgain","handleExtensionLoadingError","resolveUserAspects","runtimeName","userAspectsIds","getMany","aspectDefs","resolveAspects","getCapsule","Error","localPath","aspectPath","withoutLocalAspects","aspectId","fullName","userAspectsDefs","localResolved","coreAspects","getCoreAspectDefs","allDefs","uniqDefs","def","defs","getLegacyGraph","comp","legacyIds","bitId","hasScope","changeScope","legacyGraph","useCache","throwIfNotExist","legacyId","scope","withoutOwnScopeAndLocals","ComponentsIds","fromArray","consumerComponent","getRemoteComponent","includeCache","includeFromLanes","componentsIds","listIds","limit","offset","listInvalid","allModelComponents","filterByCacheAndLanes","modelComponent","cacheFilter","exists","lanesFilter","hasHead","modelComponentsToList","fromLegacy","toBitIdWithLatestVersion","JSON","stringify","hasId","componentId","includeOrphaned","includeVersion","hasIdNested","idsWithoutEmpty","componentsP","getOrThrow","loadMany","ComponentNotFound","getState","hash","getSnap","getLogs","shortHash","startsFrom","loadComponentLogs","idStr","loadModelComponentByIdStr","getIdToCheck","IdToCheck","BitId","getParsedId","byPattern","patterns","finalPatterns","pattern","targetIds","some","toStringWithoutVersion","match","getExactVersionBySemverRange","range","getModelComponent","versions","listVersions","semver","maxSatisfying","includePrerelease","resumeExport","exportId","remotes","resolveId","_legacyRemotes","isAspectComponent","loadComponentsAspect","provider","componentExt","ui","graphql","cli","express","loggerMain","configMain","tagSlot","postObjectsPersistSlot","preFetchObjectsSlot","bitConfig","cwd","createLogger","ScopeAspect","registerOnStart","hasWorkspace","getNotLoadedConfiguredExtensions","onPutHook","getAuthData","token","Http","getToken","type","DEFAULT_AUTH_TYPE","credentials","onPostExportHook","onPostObjectsPersistHook","ExportPersist","PostSign","Scope","onPostExport","Repository","onPostObjectsPersist","registerPreAddingAspectsSlot","compIds","loadedIds","compId","loadedId","PutRoute","FetchRoute","ActionRoute","DeleteRoute","registerUiRoot","ScopeUIRoot","registerHost","Slot","withType","ComponentAspect","UIAspect","GraphqlAspect","CLIAspect","IsolatorAspect","AspectLoaderAspect","ExpressAspect","LoggerAspect","EnvsAspect","ConfigAspect","httpTimeOut","addRuntime"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAGA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAGA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAkCO,MAAMA,SAAN,CAA4C;AAEjDC,EAAAA,WAAW;AACT;AACJ;AACA;AACYC,EAAAA,OAJC;AAKT;AACJ;AACA;AACaC,EAAAA,WARA;AAUT;AACJ;AACA;AACaC,EAAAA,kBAbA;AAeT;AACJ;AACA;AAEaC,EAAAA,MAnBA,EAqBDC,WArBC,EAuBDC,WAvBC,EAyBDC,cAzBC,EA2BDC,cA3BC,EA6BDC,kBA7BC,EA+BFC,eA/BE,EAiCDC,QAjCC,EAmCDC,YAnCC,EAqCDC,MArCC,EAuCDC,IAvCC,EAwCT;AAAA,SApCQb,OAoCR,GApCQA,OAoCR;AAAA,SAhCSC,WAgCT,GAhCSA,WAgCT;AAAA,SA3BSC,kBA2BT,GA3BSA,kBA2BT;AAAA,SArBSC,MAqBT,GArBSA,MAqBT;AAAA,SAnBQC,WAmBR,GAnBQA,WAmBR;AAAA,SAjBQC,WAiBR,GAjBQA,WAiBR;AAAA,SAfQC,cAeR,GAfQA,cAeR;AAAA,SAbQC,cAaR,GAbQA,cAaR;AAAA,SAXQC,kBAWR,GAXQA,kBAWR;AAAA,SATOC,eASP,GATOA,eASP;AAAA,SAPQC,QAOR,GAPQA,QAOR;AAAA,SALQC,YAKR,GALQA,YAKR;AAAA,SAHQC,MAGR,GAHQA,MAGR;AAAA,SADQC,IACR,GADQA,IACR;AAAA;AAAA,0DAwO+B,EAxO/B;AACA,SAAKC,eAAL,GAAuB,KAAIC,4CAAJ,EAAyB,IAAzB,EAA+B,KAAKH,MAApC,CAAvB;AACD;AAED;AACF;AACA;;;AACU,MAAJI,IAAI,GAAW;AACjB,WAAO,KAAKf,WAAL,CAAiBe,IAAxB;AACD;;AAEO,MAAJC,IAAI,GAAuB;AAC7B,WAAO,KAAKd,MAAL,CAAYc,IAAnB;AACD;;AAEsB,MAAnBC,mBAAmB,GAAuB;AAC5C,WAAO,KAAKf,MAAL,CAAYe,mBAAnB;AACD;;AAEc,MAAXC,WAAW,GAAuB;AACpC,WAAO,KAAKhB,MAAL,CAAYgB,WAAnB;AACD;;AAEO,MAAJC,IAAI,GAAW;AACjB,WAAO,KAAKnB,WAAL,CAAiBmB,IAAxB;AACD;;AAEW,MAARC,QAAQ,GAAY;AACtB,WAAO,KAAKpB,WAAL,CAAiBoB,QAAxB;AACD;AAED;AACF;AACA;;;AACEC,EAAAA,KAAK,CAACC,KAAD,EAAe;AAClB,UAAMC,IAAI,GAAG,KAAKtB,kBAAL,CAAwBuB,OAAxB,EAAb;;AACA,UAAMC,eAA0B,GAAG,OACjCC,gBADiC,EAEjCC,OAFiC,KAGA;AACjC;AACA,YAAM,KAAKC,2BAAL,CAAiCF,gBAAjC,CAAN;AACA,YAAMG,UAAU,GAAG,MAAMN,IAAI,CAACO,eAAL,CAAqBJ,gBAArB,CAAzB;AACA,YAAM;AAAEK,QAAAA;AAAF,UAAqB,MAAMT,KAAK,CAACO,UAAD,EAAaF,OAAb,CAAtC;AACA,aAAO,KAAKK,kCAAL,CAAwCD,cAAxC,CAAP;AACD,KATD;;AAUA,SAAK/B,WAAL,CAAiBqB,KAAjB,CAAuBY,IAAvB,CAA4BR,eAA5B;AACA,SAAKtB,WAAL,CAAiB+B,QAAjB,CAA0BZ,KAA1B;AACD,GA1FgD,CA4FjD;AACA;AACA;AACA;AACA;AACA;AACA;;;AACiC,QAA3BM,2BAA2B,CAACC,UAAD,EAAiD;AAChF,UAAMN,IAAI,GAAG,KAAKtB,kBAAL,CAAwBuB,OAAxB,EAAb,CADgF,CAGhF;;AACA,UAAMW,+BAA+B,GAAG,MAAgB;AACtD,YAAMC,gBAAgB,GAAG,KAAK1B,YAAL,CAAkB2B,cAAlB,EAAzB;AACA,YAAMC,OAAO,GAAGC,MAAM,CAACC,IAAP,CAAY,KAAKzC,OAAL,CAAaG,MAAb,CAAoBuC,QAApB,EAAZ,CAAhB;AACA,YAAMC,OAAO,GAAG,0BAAWN,gBAAX,EAA6BE,OAA7B,CAAhB;AACA,aAAOI,OAAP;AACD,KALD,CAJgF,CAWhF;;;AACA,UAAMC,iCAAiC,GAAG,YAA+B;AACvE,YAAMC,UAAU,GAAGT,+BAA+B,EAAlD;AACA,YAAMU,UAAoB,GAAG,EAA7B;AACA,YAAMC,QAAQ,GAAGjB,UAAU,CAACkB,GAAX,CAAe,MAAOC,SAAP,IAAqB;AACnD,cAAMC,KAAK,GAAG,MAAM1B,IAAI,CAAC2B,kBAAL,CAAwBF,SAAS,CAACG,EAAlC,CAApB;;AACA,YACEH,SAAS,CAACI,qBAAV,IACAJ,SAAS,CAACK,OADV,IAEAL,SAAS,CAACI,qBAAV,KAAoCJ,SAAS,CAACK,OAHhD,EAIE;AACA,gBAAMC,8BAA8B,GAAGL,KAAK,CAACM,aAAN,CAAoBP,SAAS,CAACI,qBAA9B,CAAvC;;AACA,cAAIR,UAAU,CAACY,QAAX,CAAoBF,8BAA8B,CAACG,QAA/B,EAApB,CAAJ,EAAoE;AAClEZ,YAAAA,UAAU,CAACZ,IAAX,CAAgBgB,KAAK,CAACQ,QAAN,EAAhB;AACD;AACF;AACF,OAZgB,CAAjB;AAaA,YAAMC,OAAO,CAACC,GAAR,CAAYb,QAAZ,CAAN;AACA,aAAOD,UAAP;AACD,KAlBD;;AAoBA,UAAMe,SAAS,GAAG,MAAMjB,iCAAiC,EAAzD;AACA,UAAMpB,IAAI,CAACsC,WAAL,CAAiBD,SAAjB,EAA4B,KAA5B,CAAN;AACD;;AAED9B,EAAAA,eAAe,CAACD,UAAD,EAAwD;AACrE,WAAO,2BAAUA,UAAV,EAAsB,MAAOmB,SAAP,IAAqB,KAAKc,wBAAL,CAA8Bd,SAA9B,CAA3C,CAAP;AACD;;AAEDe,EAAAA,UAAU,GAAG;AACX,SAAKpD,MAAL,CAAYqD,KAAZ,CAAkB,8CAAlB;AACA,SAAKnD,eAAL,CAAqBkD,UAArB;AACA,SAAK/D,WAAL,CAAiBiE,OAAjB,CAAyBF,UAAzB;AACD;;AAED/B,EAAAA,kCAAkC,CAACkC,uBAAD,EAA0E;AAC1G,UAAMC,4BAA4B,GAAG,CAACnB,SAAD,EAAuBoB,WAAvB,KAAoD;AAAA;;AACvF,YAAMC,eAAe,4BAAGrB,SAAS,CAACsB,KAAV,CAAgBC,OAAhB,CAAwBC,GAAxB,CAA4BC,yBAActB,EAA1C,CAAH,0DAAG,sBAA+CuB,MAAvE;AACA,YAAMC,gBAAgB,GAAGN,eAAe,IAAI,KAAIO,6BAAJ,EAAuBC,SAAvB,EAAkCA,SAAlC,EAA6CJ,yBAActB,EAA3D,CAA5C;AACAwB,MAAAA,gBAAgB,CAACG,IAAjB,GAAwBV,WAAxB;AACA,aAAOO,gBAAP;AACD,KALD;;AAMA,WAAOT,uBAAuB,CAACa,OAAxB,GAAkChC,GAAlC,CAAsC,CAAC,CAACC,SAAD,EAAYoB,WAAZ,CAAD,MAA+B;AAC1EjB,MAAAA,EAAE,EAAEH,SAAS,CAACG,EAAV,CAAa6B,OADyD;AAE1EZ,MAAAA,WAAW,EAAED,4BAA4B,CAACnB,SAAD,EAAYoB,WAAZ;AAFiC,KAA/B,CAAtC,CAAP;AAID;AAED;AACF;AACA;;;AACEa,EAAAA,SAAS,CAACC,SAAD,EAAuB;AAC9B,SAAK9E,WAAL,CAAiB8B,QAAjB,CAA0BgD,SAA1B;AACA,WAAO,IAAP;AACD;AAED;AACF;AACA;;;AACEC,EAAAA,YAAY,CAACC,YAAD,EAA6B;AACvC,SAAK/E,cAAL,CAAoB6B,QAApB,CAA6BkD,YAA7B;AACA,WAAO,IAAP;AACD;AAED;AACF;AACA;;;AACEC,EAAAA,oBAAoB,CAACC,YAAD,EAA6B;AAC/C,SAAKhF,cAAL,CAAoB4B,QAApB,CAA6BoD,YAA7B;AACA,WAAO,IAAP;AACD;;AAEDC,EAAAA,yBAAyB,CAACC,iBAAD,EAAuC;AAC9D,SAAKhF,eAAL,CAAqB0B,QAArB,CAA8BsD,iBAA9B;AACA,WAAO,IAAP;AACD;;AAEDC,EAAAA,4BAA4B,CAACC,oBAAD,EAA6C;AACvE,SAAKnF,kBAAL,CAAwB2B,QAAxB,CAAiCwD,oBAAjC;AACA,WAAO,IAAP;AACD;AAED;AACF;AACA;AACA;AACA;AACA;;;AACEC,EAAAA,KAAK,CAACC,GAAD,EAAqB,CAAE,CAtMqB,CAsMpB;;AAE7B;AACF;AACA;AACA;AACA;AACA;;;AACEC,EAAAA,OAAO,CAAChE,UAAD,EAA0BF,OAA1B,EAAmD,CAAE,CA9MX,CA8MY;;;AAEjD,QAANmE,MAAM,CACV;AAAEF,IAAAA,GAAF;AAAOG,IAAAA,KAAP;AAAcC,IAAAA;AAAd,GADU,EAEVC,OAFU,EAGV;AACA,UAAMC,QAAQ,GAAG,mCAAsBD,OAAtB,aAAsBA,OAAtB,uBAAsBA,OAAO,CAAEE,aAA/B,CAAjB;AACA,UAAMC,MAAM,GAAG,MAAM,sBAAO;AAC1BjF,MAAAA,IAAI,EAAE,KAAKA,IADe;AAE1ByE,MAAAA,GAF0B;AAG1BG,MAAAA,KAH0B;AAI1BC,MAAAA;AAJ0B,KAAP,CAArB;AAOA,UAAMK,GAAG,GAAG,KAAKhG,cAAL,CAAoBiG,MAApB,EAAZ;AACA,UAAMC,QAAQ,GAAG;AAAEC,MAAAA,IAAI,EAAEN,QAAR;AAAkBD,MAAAA;AAAlB,KAAjB;AACA,UAAMQ,YAAY,GAAGb,GAAG,CAAC7C,GAAJ,CAASI,EAAD,IAAQuD,yBAAYC,UAAZ,CAAuBxD,EAAvB,CAAhB,CAArB;AACA,UAAM,2BAAUkD,GAAV,EAAe,MAAOO,EAAP,IAAc;AACjC,UAAI;AACF,cAAMA,EAAE,CAAC;AAAEhB,UAAAA,GAAG,EAAEa;AAAP,SAAD,EAAwBF,QAAxB,CAAR;AACD,OAFD,CAEE,OAAOM,GAAP,EAAiB;AACjB,aAAKlG,MAAL,CAAYmG,KAAZ,CAAkB,2BAAlB,EAA+CD,GAA/C;AACD;AACF,KANK,CAAN;AAOA,WAAOT,MAAP;AACD;;AAEiB,QAAZW,YAAY,CAACC,KAAD,EAAoC;AACpD,UAAM/C,OAAO,GAAG,MAAM,KAAKjE,WAAL,CAAiBiE,OAAjB,CAAyBgD,IAAzB,CAA8BD,KAA9B,CAAtB;AACA,WAAOE,yBAAWC,cAAX,CAA0BlD,OAA1B,CAAP;AACD,GA5OgD,CA8OjD;;;AACQmD,EAAAA,IAAI,CAACC,GAAD,EAAc;AACxB,QAAIA,GAAG,CAACC,QAAJ,CAAa,KAAb,CAAJ,EAAyB,OAAOD,GAAG,CAACE,OAAJ,CAAY,KAAZ,EAAmB,KAAnB,CAAP;AACzB,WAAOF,GAAP;AACD;;AAEOG,EAAAA,gBAAgB,CAACC,YAAD,EAAyB;AAC/C,UAAMC,QAAQ,GAAGD,YAAY,CAAC1E,GAAb,CAAkB4E,WAAD,IAAiB,qBAAQA,WAAW,CAACJ,OAAZ,CAAoB,SAApB,EAA+B,EAA/B,CAAR,CAAlC,CAAjB;AACA,UAAMK,iBAAiB,GAAGF,QAAQ,CAACG,MAAT,CAAiB1G,IAAD,IAAU,CAAC,2BAAWA,IAAX,CAA3B,CAA1B;AACAyG,IAAAA,iBAAiB,CAACE,OAAlB,CAA2B3G,IAAD,IAAU,KAAKR,MAAL,CAAYoH,IAAZ,CAAkB,8BAA6B5G,IAAK,EAApD,CAApC;AACA,UAAM6G,cAAc,GAAGN,QAAQ,CAACG,MAAT,CAAiB1G,IAAD,IAAU,2BAAWA,IAAX,CAA1B,CAAvB;AACA,WAAO6G,cAAP;AACD;;AAEOC,EAAAA,WAAW,CAACC,OAAD,EAAkBC,OAAlB,EAAmC;AACpD,UAAMC,KAAK,GAAG,4BAAY,kBAAKF,OAAL,EAAc,MAAd,CAAZ,CAAd;AACA,WAAOE,KAAK,CAACC,IAAN,CAAYlH,IAAD,IAAUA,IAAI,CAACqC,QAAL,CAAe,GAAE2E,OAAQ,aAAzB,CAArB,CAAP;AACD;;AAE+B,QAAlBG,kBAAkB,CAACb,YAAD,EAAyB;AACvD,UAAMC,QAAQ,GAAG,KAAKF,gBAAL,CAAsBC,YAAtB,CAAjB;AACA,UAAMc,SAAS,GAAGb,QAAQ,CAAC3E,GAAT,CAAcmF,OAAD,IAAa;AAC1C,YAAMM,YAAY,GAAG,KAAKP,WAAL,CAAiBC,OAAjB,EAA0B,OAA1B,CAArB;;AACA,UAAIM,YAAJ,EAAkB;AAChB;AACA,cAAMC,MAAM,GAAGC,OAAO,CAAC,kBAAKR,OAAL,EAAc,MAAd,EAAsBM,YAAtB,CAAD,CAAtB;;AACA,eAAOC,MAAM,CAACE,OAAP,IAAkBF,MAAzB;AACD,OANyC,CAO1C;;;AACA,YAAMA,MAAM,GAAGC,OAAO,CAACR,OAAD,CAAtB;;AACA,aAAOO,MAAM,CAACE,OAAP,IAAkBF,MAAzB;AACD,KAViB,CAAlB;AAYA,UAAM,KAAK/H,YAAL,CAAkBkI,yBAAlB,CAA4CL,SAA5C,EAAuD,IAAvD,CAAN;AACD;;AAIgB,QAAX1E,WAAW,CAAC+B,GAAD,EAAgBiD,YAAY,GAAG,KAA/B,EAAsCC,SAAtC,EAAkF;AACjG,SAAKnI,MAAL,CAAYoI,IAAZ,CAAkB,wBAAuBnD,GAAG,CAACoD,MAAO;AACxD,OAAOpD,GAAG,CAACqD,IAAJ,CAAS,IAAT,CAAe;AACtB,cAAc,CAAAH,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAErF,QAAX,OAAyB,WAAY,EAF/C;AAGA,UAAMyF,OAAO,GAAG,MAAM,KAAKC,4BAAL,CAAkCvD,GAAlC,CAAtB;AACA,UAAMwD,gBAAgB,GAAG,MAAM,KAAKC,0BAAL,CAAgCH,OAAO,CAACtI,IAAxC,EAA8CiI,YAA9C,CAA/B;AACA,UAAMS,iBAAiB,GAAG,MAAM,KAAKD,0BAAL,CAAgCH,OAAO,CAACK,KAAxC,EAA+CV,YAA/C,CAAhC;AACA,WAAOO,gBAAgB,CAACI,MAAjB,CAAwBF,iBAAxB,CAAP;AACD;AAED;AACF;AACA;AACA;;;AACoC,QAA5BH,4BAA4B,CAACvD,GAAD,EAA8D;AAC9F,UAAM/D,UAAU,GAAG,MAAM,KAAK4H,mBAAL,CAAyB7D,GAAzB,CAAzB;AACA,UAAM8D,OAAO,GAAG,oBACd7H,UAAU,CACPkB,GADH,CACQC,SAAD,IAAe,KAAKpC,IAAL,CAAU+I,QAAV,CAAmB3G,SAAnB,CADtB,EAEG6E,MAFH,CAEW+B,KAAD,IAAW,CAAC,KAAKlJ,YAAL,CAAkBmJ,SAAlB,CAA4BD,KAA5B,CAFtB,CADc,CAAhB;AAKA,UAAMV,OAAO,GAAG,uBAAQtD,GAAR,EAAczC,EAAD,IAAQ;AACnC,UAAIuG,OAAO,CAAClG,QAAR,CAAiBL,EAAjB,CAAJ,EAA0B,OAAO,MAAP;AAC1B,aAAO,OAAP;AACD,KAHe,CAAhB;AAIA,WAAO+F,OAAP;AACD;;AAEuC,QAA1BG,0BAA0B,CAACzD,GAAD,EAAgBiD,YAAY,GAAG,KAA/B,EAAyD;AAC/F,UAAMiB,cAAc,GAAG,MAAM,KAAKC,4BAAL,CAAkCnE,GAAlC,EAAuC,EAAvC,EAA2CiD,YAA3C,CAA7B;AACA,UAAM,KAAKnI,YAAL,CAAkBkI,yBAAlB,CAA4CkB,cAA5C,CAAN;AACA,WAAO,uBAAQA,cAAc,CAAC/G,GAAf,CAAoBiH,QAAD,IAAcA,QAAQ,CAAC7G,EAA1C,CAAR,CAAP;AACD;;AAEiC,QAA5B4G,4BAA4B,CAChCnE,GADgC,EAEhCqE,OAAiB,GAAG,EAFY,EAGhCpB,YAAY,GAAG,KAHiB,EAIhCqB,IAEC,GAAG,EAN4B,EAOH;AAC7BtE,IAAAA,GAAG,GAAG,oBAAKA,GAAL,CAAN;AACA,UAAMuE,YAAY,GAAGvE,GAAG,CAACiC,MAAJ,CAAY1E,EAAD,IAAQ,CAAC8G,OAAO,CAACzG,QAAR,CAAiBL,EAAjB,CAApB,CAArB;;AACA,QAAI,CAACgH,YAAY,CAACnB,MAAlB,EAA0B;AACxB,aAAO,EAAP;AACD;;AACD,UAAMnH,UAAU,GAAG,MAAM,KAAK4H,mBAAL,CAAyBU,YAAzB,CAAzB;AACAF,IAAAA,OAAO,CAAChI,IAAR,CAAa,GAAGkI,YAAhB;AACA,UAAM5B,SAAS,GAAG,MAAM,KAAK6B,cAAL,CAAoBvI,UAApB,EAAgCgH,YAAhC,EAA8CqB,IAA9C,CAAxB;AACA,UAAMG,UAA6C,GAAG,EAAtD;AACA,UAAM,2BAAU9B,SAAV,EAAqB,MAAOyB,QAAP,IAAoB;AAC7CK,MAAAA,UAAU,CAACpI,IAAX,CAAgB,IAAI+H,QAAQ,CAACM,YAAT,IAAyB,EAA7B,CAAhB,EAD6C,CAE7C;;AACA,OAACN,QAAQ,CAACO,SAAT,IAAsB,EAAvB,EAA2BzC,OAA3B,CAAoCK,OAAD,IAAa;AAC9CkC,QAAAA,UAAU,CAACpI,IAAX,CAAgB,IAAIkG,OAAO,CAACmC,YAAR,IAAwB,EAA5B,CAAhB;AACD,OAFD;AAGA,YAAME,MAAM,GAAGH,UAAU,CAACtH,GAAX,CAAgB0H,CAAD,IAAOA,CAAC,CAACtH,EAAxB,EAA4B0E,MAA5B,CAAoC1E,EAAD,IAAQA,EAA3C,CAAf;AACA,YAAMuH,MAAM,GAAG,MAAM,KAAKX,4BAAL,CAAkCS,MAAlC,EAA0CP,OAA1C,EAAmDpB,YAAnD,CAArB;AACAN,MAAAA,SAAS,CAACtG,IAAV,CAAe,GAAGyI,MAAlB;AACD,KATK,CAAN;AAUA,WAAOnC,SAAP;AACD;;AAEgC,QAAnBkB,mBAAmB,CAAC7D,GAAD,EAAsC;AACrE,UAAM+E,YAAY,GAAG/E,GAAG,CAACiC,MAAJ,CAAY1E,EAAD,IAAQ,CAAC,KAAKzC,YAAL,CAAkBkK,cAAlB,CAAiCzH,EAAjC,CAApB,CAArB;AACA,QAAI,CAACwH,YAAY,CAAC3B,MAAlB,EAA0B,OAAO,EAAP;AAC1B,UAAM6B,oBAAoB,GAAG,KAAKnK,YAAL,CAAkBoK,gBAAlB,EAA7B;AACA,UAAMC,cAAwB,GAAG,0BAAWnF,GAAX,EAAgBiF,oBAAhB,CAAjC;AACA,UAAMG,SAAS,GAAGD,cAAc,CAAClD,MAAf,CAAuB1E,EAAD,IAAQ,CAACA,EAAE,CAAC8H,UAAH,CAAc,SAAd,CAA/B,CAAlB,CALqE,CAMrE;;AACA,UAAMxD,YAAY,GAAG7B,GAAG,CAACiC,MAAJ,CAAY1E,EAAD,IAAQA,EAAE,CAAC8H,UAAH,CAAc,SAAd,CAAnB,CAArB;AACA,SAAKxD,YAAL,GAAoB,KAAKA,YAAL,CAAkB+B,MAAlB,CAAyB/B,YAAzB,CAApB,CARqE,CASrE;;AACA,UAAM,KAAKa,kBAAL,CAAwBb,YAAxB,CAAN;AACA,UAAMhB,YAAY,GAAG,MAAM,KAAKyE,2BAAL,CAAiCF,SAAjC,CAA3B;AACA,QAAI,CAACvE,YAAD,IAAiB,CAACA,YAAY,CAACuC,MAAnC,EAA2C,OAAO,EAAP;AAC3C,UAAMnH,UAAU,GAAG,MAAM,KAAKsJ,MAAL,CAAY1E,YAAZ,EAA0B;AAAE2E,MAAAA,qBAAqB,EAAE;AAAzB,KAA1B,CAAzB;AAEA,WAAOvJ,UAAP;AACD;;AAEgC,QAAnBwJ,mBAAmB,CAACzF,GAAD,EAAgBuC,OAAhB,EAAkC;AACjE,UAAMmD,IAAI,GAAG,KAAK9D,gBAAL,CAAsB5B,GAAtB,CAAb;AAEA,WAAO0F,IAAI,CAACvI,GAAL,CAAUwI,GAAD,IAAS;AACvB,YAAMC,eAAe,GAAGrD,OAAO,GAAG,KAAKF,WAAL,CAAiBsD,GAAjB,EAAsBpD,OAAtB,CAAH,GAAoCtD,SAAnE;AACA,aAAO,KAAI4G,gCAAJ,EACLF,GADK,EAELC,eAAe,GAAG,kBAAKD,GAAL,EAAU,MAAV,EAAkBC,eAAlB,CAAH,GAAwC,IAFlD,EAGL3G,SAHK,EAILA,SAJK,EAKL,IALK,CAAP;AAOD,KATM,CAAP;AAUD;;AAEuB,QAAlB6G,kBAAkB,CACtB7J,UADsB,EAEtBqI,IAFsB,EAGW;AAAA;;AACjC,QAAI,CAACrI,UAAD,IAAe,CAACA,UAAU,CAACmH,MAA/B,EAAuC,OAAO,EAAP;AACvC,UAAM2C,OAAO,GAAG,MAAM,KAAKlL,QAAL,CAAcmL,iBAAd,CACpB/J,UAAU,CAACkB,GAAX,CAAgB8I,CAAD,IAAOA,CAAC,CAAC1I,EAAxB,CADoB,EAEpB;AACA;AACE2I,MAAAA,OAAO,EAAE,KAAKC,oBAAL,EADX;AAEEC,MAAAA,YAAY,wBAAE9B,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAE8B,YAAR,mEAAwB,IAFtC;AAGEC,MAAAA,WAAW,EAAE,IAHf;AAIEC,MAAAA,sBAAsB,EAAE,IAJ1B;AAKEC,MAAAA,cAAc,EAAE;AACdC,QAAAA,uBAAuB,EAAE,IADX;AAEdC,QAAAA,MAAM,EAAE,KAFM;AAGdC,QAAAA,2BAA2B,EAAEpC,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEoC;AAHrB;AALlB,KAHoB,EAcpB,KAAKtM,WAde,CAAtB;AAiBA,UAAMuM,QAAQ,GAAGZ,OAAO,CAACa,eAAzB;AAEA,WAAOD,QAAQ,CAACxJ,GAAT,CAAc0J,OAAD,IAAa;AAC/B,aAAO,KAAIC,sCAAJ,EACLD,OAAO,CAACzJ,SADH,EAEL,YAAY;AACV;AACA,cAAM2J,OAAO,GAAG,KAAKjM,YAAL,CAAkBkM,UAAlB,CAA6BH,OAAO,CAACzJ,SAArC,EAAgDyJ,OAAO,CAACtL,IAAxD,CAAhB;;AACA,YAAIwL,OAAO,CAACE,GAAR,EAAJ,EAAmB;AACjB,gBAAM,KAAKC,eAAL,CAAqBL,OAArB,EAA8BA,OAAO,CAACzJ,SAAtC,CAAN;AACA,iBAAO2J,OAAO,CAACI,IAAR,CAAaC,mBAAYjM,IAAzB,CAAP;AACD,SANS,CAOV;;;AACA,cAAMkM,MAAM,GAAGvE,OAAO,CAAC+D,OAAO,CAACtL,IAAT,CAAtB;;AACA,cAAMqH,YAAY,GAAG,MAAM,KAAK9H,YAAL,CAAkBwM,cAAlB,CAAiCT,OAAO,CAACzJ,SAAzC,EAAoDyJ,OAAO,CAACtL,IAA5D,EAAkE,OAAlE,CAA3B;AACA,cAAMgM,WAAW,GAAG,MAAM,KAAKzM,YAAL,CAAkBwM,cAAlB,CAAiCT,OAAO,CAACzJ,SAAzC,EAAoDyJ,OAAO,CAACtL,IAA5D,EAAkE6L,mBAAYjM,IAA9E,CAA1B;AACA,cAAMqM,WAAW,GAAG5E,YAAY,IAAI2E,WAApC,CAXU,CAYV;;AACA,YAAIC,WAAJ,EAAiB1E,OAAO,CAAC0E,WAAD,CAAP,CAbP,CAcV;;AACA,eAAOH,MAAP;AACD,OAlBI,EAmBLR,OAnBK,CAAP;AAqBD,KAtBM,CAAP;AAuBD;;AAE4B,QAAfK,eAAe,CAACL,OAAD,EAAmBzJ,SAAnB,EAAyC;AACpE,UAAMqK,GAAG,GAAG,KAAKzM,IAAL,CAAU0M,MAAV,CAAiBtK,SAAjB,CAAZ;AACA,UAAMuK,QAAkB,GAAGF,GAAG,CAACA,GAAJ,CAAQG,WAAR,EAA3B;;AACA,UAAMC,OAAO,GAAG,CAAAF,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEE,OAAV,KAAqBC,iCAArC;;AACA,UAAMC,UAAU,GAAG,2BAAW,kBAAKlB,OAAO,CAACtL,IAAb,EAAmBsM,OAAnB,CAAX,CAAnB;AACA,QAAIE,UAAJ,EAAgB;AAEhB,UAAMC,YAAY,GAAG5K,SAAS,CAAC6K,UAAV,CAAqBzF,KAArB,CAA2B0F,OAA3B,CAAoCC,IAAD,IAAU;AAChE,UAAI,CAACR,QAAQ,CAACS,eAAT,CAAyBD,IAAI,CAAC5M,IAA9B,CAAL,EAA0C;AACxC,eAAO,CACL;AACE8M,UAAAA,UAAU,EAAEF,IAAI,CAACG,QAAL,CAAczK,QAAd,CAAuB,MAAvB,CADd;AAEE0K,UAAAA,UAAU,EAAEJ,IAAI,CAAC5M;AAFnB,SADK,CAAP;AAMD;;AAED,UAAIoM,QAAQ,CAACa,aAAb,EAA4B;AAC1B,eAAOb,QAAQ,CAACa,aAAT,CAAuBL,IAAI,CAACG,QAAL,CAAczK,QAAd,CAAuB,MAAvB,CAAvB,EAAuD;AAC5D4K,UAAAA,QAAQ,EAAEN,IAAI,CAAC5M,IAD6C;AAE5DmN,UAAAA,YAAY,EAAE7B,OAAO,CAACtL;AAFsC,SAAvD,CAAP;AAID;;AAED,aAAO,EAAP;AACD,KAlBoB,CAArB;AAoBA,UAAMuC,OAAO,CAACC,GAAR,CACJ,uBAAQiK,YAAR,EAAsB7K,GAAtB,CAA2BwL,YAAD,IAAkB;AAC1C,YAAMpN,IAAI,GAAGoM,QAAQ,CAACiB,oBAAT,CAA8BD,YAAY,CAACJ,UAA3C,CAAb;AACA,aAAO1B,OAAP,aAAOA,OAAP,uBAAOA,OAAO,CAAEgC,UAAT,CAAoBtN,IAApB,EAA0BoN,YAAY,CAACN,UAAvC,CAAP;AACD,KAHD,CADI,CAAN;AAMD;;AAEuB,QAAVS,UAAU,CAACC,gBAAD,EAAyC;AAC/D,QAAIA,gBAAgB,CAAClC,OAArB,EAA8B,OAAO,KAAKK,eAAL,CAAqB6B,gBAAgB,CAAClC,OAAtC,EAA+CkC,gBAAgB,CAAC3L,SAAhE,CAAP;AAC9B,WAAO6B,SAAP;AACD;;AAEmB,QAAduF,cAAc,CAClBvI,UADkB,EAElBgH,YAAY,GAAG,KAFG,EAGlBqB,IAA8C,GAAG,EAH/B,EAI0B;AAC5C,UAAM0E,qBAAqB,GAAG,MAAM,KAAKlD,kBAAL,CAAwB7J,UAAxB,EAAoCqI,IAApC,CAApC;;AACA,QAAI,CAAC0E,qBAAL,EAA4B;AAC1B,aAAO,EAAP;AACD;;AACD,QAAI9H,KAAJ;AACA,QAAI+H,SAAS,GAAG,EAAhB;;AACA,UAAMC,gBAAgB,GAAG,MAAOC,kBAAP,IAAsD;AAC7EjI,MAAAA,KAAK,GAAGjC,SAAR;;AACA,UAAI;AACF,cAAM0D,SAAS,GAAG,MAAM,2BAAUwG,kBAAV,EAA8B,MAAOC,oBAAP,IAAgC;AACpF,cAAI;AACF,mBAAO,MAAM,KAAKtO,YAAL,CAAkBuO,SAAlB,CAA4BD,oBAA5B,CAAb;AACD,WAFD,CAEE,OAAOnI,GAAP,EAAiB;AACjBgI,YAAAA,SAAS,GAAGG,oBAAoB,CAAChM,SAArB,CAA+BG,EAA/B,CAAkCM,QAAlC,EAAZ;;AACA,gBAAIoD,GAAG,CAACqI,IAAJ,KAAa,kBAAjB,EAAqC;AACnC,kBAAI;AACF,sBAAM,KAAKR,UAAL,CAAgBM,oBAAhB,CAAN;AACA,uBAAO,MAAM,KAAKtO,YAAL,CAAkBuO,SAAlB,CAA4BD,oBAA5B,CAAb;AACD,eAHD,CAGE,OAAOG,MAAP,EAAoB;AACpBrI,gBAAAA,KAAK,GAAGqI,MAAR;AACA,sBAAMA,MAAN;AACD;AACF;;AACDrI,YAAAA,KAAK,GAAGD,GAAR;AACA,kBAAMA,GAAN;AACD;AACF,SAjBuB,CAAxB;AAkBA,eAAO0B,SAAP;AACD,OApBD,CAoBE,OAAO1B,GAAP,EAAY;AACZ,eAAO,IAAP;AACD;AACF,KAzBD;;AA0BA,UAAM0B,SAAS,GAAG,MAAMuG,gBAAgB,CAACF,qBAAD,CAAxC;;AACA,QAAI,CAAC9H,KAAL,EAAY;AACV,aAAO,uBAAQyB,SAAR,CAAP;AACD;;AACD,QAAIzB,KAAK,CAACoI,IAAN,KAAe,kBAAnB,EAAuC;AACrC,WAAKvO,MAAL,CAAYoH,IAAZ,CACG,+GADH;AAGA,YAAMqH,oBAAoB,GAAG,MAAM,KAAK1D,kBAAL,CAAwB7J,UAAxB,EAAoC;AACrEmK,QAAAA,YAAY,EAAE;AADuD,OAApC,CAAnC;AAGA,YAAMqD,aAAa,GAAG,MAAMP,gBAAgB,CAACM,oBAAD,CAA5C;;AACA,UAAI,CAACtI,KAAL,EAAY;AACV,eAAO,uBAAQuI,aAAR,CAAP;AACD;AACF;;AAED,SAAK3O,YAAL,CAAkB4O,2BAAlB,CAA8CxI,KAA9C,EAAqD+H,SAArD,EAAgEhG,YAAhE;AACA,WAAO,EAAP;AACD;;AAEDkD,EAAAA,oBAAoB,GAAG;AACrB,WAAQ,GAAE,KAAK5K,IAAK,UAApB;AACD;;AAE+B,QAAlBoO,kBAAkB,CAACC,WAAD,EAAuBC,cAAvB,EAAoF;AAClH,QAAI,CAACA,cAAD,IAAmB,CAACA,cAAc,CAACzG,MAAvC,EAA+C,OAAO,EAAP;AAC/C,UAAMnH,UAAU,GAAG,MAAM,KAAK6N,OAAL,CAAaD,cAAb,CAAzB;AACA,UAAM9D,OAAO,GAAG,MAAM,KAAKlL,QAAL,CAAcmL,iBAAd,CACpB6D,cADoB,EAEpB;AACE3D,MAAAA,OAAO,EAAE,KAAKC,oBAAL,EADX;AAEEC,MAAAA,YAAY,EAAE,IAFhB;AAGE;AACA;AACA;AACAC,MAAAA,WAAW,EAAE,IANf;AAOEC,MAAAA,sBAAsB,EAAE,IAP1B;AAQEC,MAAAA,cAAc,EAAE;AAAEC,QAAAA,uBAAuB,EAAE,IAA3B;AAAiCC,QAAAA,MAAM,EAAE;AAAzC,OARlB;AASE9K,MAAAA,IAAI,EAAE;AATR,KAFoB,EAapB,KAAKvB,WAbe,CAAtB;AAeA,UAAMuM,QAAQ,GAAGZ,OAAO,CAACa,eAAzB;AACA,UAAMmD,UAAU,GAAG,MAAM,KAAKjP,YAAL,CAAkBkP,cAAlB,CAAiC/N,UAAjC,EAA6C,MAAOmB,SAAP,IAAqB;AACzF,YAAMyJ,OAAO,GAAGF,QAAQ,CAACsD,UAAT,CAAoB7M,SAAS,CAACG,EAA9B,CAAhB;AACA,UAAI,CAACsJ,OAAL,EAAc,MAAM,IAAIqD,KAAJ,CAAW,0BAAyB9M,SAAS,CAACG,EAAV,CAAaM,QAAb,EAAwB,EAA5D,CAAN;AACd,YAAMsM,SAAS,GAAGtD,OAAO,CAACtL,IAA1B;AAEA,aAAO;AACL6O,QAAAA,UAAU,EAAED,SADP;AAEL3C,QAAAA,WAAW,EAAEoC,WAAW,GAAG,MAAM,KAAK9O,YAAL,CAAkBwM,cAAlB,CAAiClK,SAAjC,EAA4C+M,SAA5C,EAAuDP,WAAvD,CAAT,GAA+E;AAFlG,OAAP;AAID,KATwB,CAAzB;AAUA,WAAOG,UAAP;AACD;;AAEmB,QAAdC,cAAc,CAACJ,WAAD,EAAuB/I,YAAvB,EAAkF;AACpG,UAAMgJ,cAAc,GAAGhJ,YAAY,KAAK,MAAM,KAAKyE,2BAAL,CAAiC,KAAKxK,YAAL,CAAkB2B,cAAlB,EAAjC,CAAX,CAAnC;AACA,UAAM4N,mBAAmB,GAAGR,cAAc,CAAC5H,MAAf,CAAuBqI,QAAD,IAAc;AAC9D,aAAO,CAAC,KAAKzI,YAAL,CAAkBY,IAAlB,CAAwBV,WAAD,IAAiB;AAC9C,eAAOA,WAAW,CAACnE,QAAZ,CAAqB0M,QAAQ,CAACC,QAAT,CAAkB5I,OAAlB,CAA0B,GAA1B,EAA+B,GAA/B,CAArB,CAAP;AACD,OAFO,CAAR;AAGD,KAJ2B,CAA5B;AAKA,UAAM6I,eAAe,GAAG,MAAM,KAAKb,kBAAL,CAAwBC,WAAxB,EAAqCS,mBAArC,CAA9B;AACA,UAAMI,aAAa,GAAG,MAAM,KAAKhF,mBAAL,CAAyB,KAAK5D,YAA9B,EAA4C+H,WAA5C,CAA5B;AACA,UAAMc,WAAW,GAAG,MAAM,KAAK5P,YAAL,CAAkB6P,iBAAlB,CAAoCf,WAApC,CAA1B;AAEA,UAAMgB,OAAO,GAAGJ,eAAe,CAAC5G,MAAhB,CAAuB8G,WAAvB,EAAoC9G,MAApC,CAA2C6G,aAA3C,CAAhB;AACA,UAAMI,QAAQ,GAAG,sBAAOD,OAAP,EAAiBE,GAAD,IAAU,GAAEA,GAAG,CAACV,UAAW,IAAGU,GAAG,CAACtD,WAAY,EAA9D,CAAjB;AACA,QAAIuD,IAAI,GAAGF,QAAX;;AACA,QAAIjB,WAAJ,EAAiB;AACfmB,MAAAA,IAAI,GAAGA,IAAI,CAAC9I,MAAL,CAAa6I,GAAD,IAASA,GAAG,CAACtD,WAAzB,CAAP;AACD;;AACD,WAAOuD,IAAP;AACD;;AAEmB,QAAdC,cAAc,CAAChL,GAAD,EAA4C;AAC9D,QAAI,CAACA,GAAD,IAAQA,GAAG,CAACoD,MAAJ,GAAa,CAAzB,EAA4BpD,GAAG,GAAG,CAAC,MAAM,KAAKqB,IAAL,EAAP,EAAoBlE,GAApB,CAAyB8N,IAAD,IAAUA,IAAI,CAAC1N,EAAvC,KAA8C,EAApD;AAC5B,UAAM2N,SAAS,GAAGlL,GAAG,CAAC7C,GAAJ,CAASI,EAAD,IAAQ;AAChC,UAAI4N,KAAK,GAAG5N,EAAE,CAAC6B,OAAf,CADgC,CAEhC;AACA;;AACA,UAAI,CAAC+L,KAAK,CAACC,QAAN,EAAL,EAAuB;AAAA;;AACrBD,QAAAA,KAAK,GAAGA,KAAK,CAACE,WAAN,sBAAkB,KAAKjR,WAAvB,sDAAkB,kBAAkBe,IAApC,CAAR;AACD;;AACD,aAAOgQ,KAAP;AACD,KARiB,CAAlB;AAUA,UAAMG,WAAW,GAAG,MAAM,6DAAqCJ,SAArC,EAAgD,KAAK9Q,WAArD,CAA1B;AACA,WAAOkR,WAAP;AACD;AAED;AACF;AACA;;;AACc,QAAN/F,MAAM,CACVvF,GADU,EAEV;AACEuL,IAAAA,QAAQ,GAAG,IADb;AAEEC,IAAAA,eAAe,GAAG,KAFpB;AAGEhG,IAAAA,qBAAqB,GAAG;AAH1B,MAeI,EAjBM,EAkBY;AACtB,UAAM0F,SAAS,GAAGlL,GAAG,CAAC7C,GAAJ,CAASI,EAAD,IAAQ;AAChC,YAAMkO,QAAQ,GAAGlO,EAAE,CAAC6B,OAApB;AACA,UAAIqM,QAAQ,CAACC,KAAT,KAAmB,KAAKvQ,IAA5B,EAAkC,OAAOsQ,QAAQ,CAACJ,WAAT,CAAqB,IAArB,CAAP;AAClC,aAAOI,QAAP;AACD,KAJiB,CAAlB;AAMA,UAAME,wBAAwB,GAAGT,SAAS,CAACjJ,MAAV,CAAkB1E,EAAD,IAAQ;AACxD,aAAOA,EAAE,CAACmO,KAAH,KAAa,KAAKvQ,IAAlB,IAA0BoC,EAAE,CAAC6N,QAAH,EAAjC;AACD,KAFgC,CAAjC;AAGA,UAAM,KAAKhR,WAAL,CAAiBmL,MAAjB,CAAwBqG,gBAAcC,SAAd,CAAwBF,wBAAxB,CAAxB,EAA2EJ,QAA3E,EAAqF/F,qBAArF,CAAN;AAEA,WAAO,KAAKsE,OAAL,CAAa9J,GAAb,EAAkBwL,eAAlB,CAAP;AACD;;AAEQ,QAAH5M,GAAG,CAACrB,EAAD,EAAkD;AACzD,WAAO,KAAKtC,eAAL,CAAqB2D,GAArB,CAAyBrB,EAAzB,CAAP;AACD;;AAE6B,QAAxBW,wBAAwB,CAAC4N,iBAAD,EAA2D;AACvF,WAAO,KAAK7Q,eAAL,CAAqBiD,wBAArB,CAA8C4N,iBAA9C,CAAP;AACD;AAED;AACF;AACA;;;AAC0B,QAAlBC,kBAAkB,CAACxO,EAAD,EAAsC;AAC5D,WAAO,KAAKtC,eAAL,CAAqB8Q,kBAArB,CAAwCxO,EAAxC,CAAP;AACD;AAED;AACF;AACA;;;AACY,QAAJ8D,IAAI,CACRY,MADQ,EAER+J,YAAY,GAAG,KAFP,EAGRC,gBAAgB,GAAG,KAHX,EAIc;AACtB,UAAMC,aAAa,GAAG,MAAM,KAAKC,OAAL,CAAaH,YAAb,EAA2BC,gBAA3B,CAA5B;AAEA,WAAO,KAAKnC,OAAL,CACL7H,MAAM,IAAIA,MAAM,CAACmK,KAAjB,GAAyB,qBAAMF,aAAN,EAAqBjK,MAAM,CAACoK,MAA5B,EAAoCpK,MAAM,CAACoK,MAAP,GAAgBpK,MAAM,CAACmK,KAA3D,CAAzB,GAA6FF,aADxF,CAAP;AAGD;AAED;AACF;AACA;AACA;AACA;;;AACmB,QAAXI,WAAW,GAAG;AAClB,WAAO,EAAP;AACD;AAED;AACF;AACA;AACA;;;AACe,QAAPH,OAAO,CAACH,YAAY,GAAG,KAAhB,EAAuBC,gBAAgB,GAAG,KAA1C,EAAyE;AACpF,UAAMM,kBAAkB,GAAG,MAAM,KAAKnS,WAAL,CAAiBiH,IAAjB,EAAjC;;AACA,UAAMmL,qBAAqB,GAAIC,cAAD,IAAoC;AAChE,YAAMC,WAAW,GAAGV,YAAY,GAAG,IAAH,GAAU,KAAKW,MAAL,CAAYF,cAAZ,CAA1C;AACA,YAAMG,WAAW,GAAGX,gBAAgB,GAAG,IAAH,GAAUQ,cAAc,CAACI,OAAf,EAA9C;AACA,aAAOH,WAAW,IAAIE,WAAtB;AACD,KAJD;;AAKA,UAAME,qBAAqB,GAAGP,kBAAkB,CAACtK,MAAnB,CAA0BuK,qBAA1B,CAA9B;AACA,UAAMxM,GAAG,GAAG8M,qBAAqB,CAAC3P,GAAtB,CAA2BC,SAAD,IACpC0D,yBAAYiM,UAAZ,CAAuB3P,SAAS,CAAC4P,wBAAV,EAAvB,EAA6D5P,SAAS,CAACsO,KAAV,IAAmB,KAAKvQ,IAArF,CADU,CAAZ;AAGA,SAAKJ,MAAL,CAAYqD,KAAZ,CAAmB,oDAAmD6O,IAAI,CAACC,SAAL,CAAelN,GAAf,EAAoBf,SAApB,EAA+B,CAA/B,CAAkC,EAAxG;AACA,WAAOe,GAAP;AACD;AAED;AACF;AACA;AACA;;;AACa,QAALmN,KAAK,CAACC,WAAD,EAA2BpB,YAAY,GAAG,KAA1C,EAAmE;AAC5E,QAAI,CAACA,YAAD,IAAiBoB,WAAW,CAAC1B,KAAZ,KAAsB,KAAKvQ,IAAhD,EAAsD,OAAO,KAAP;AACtD,UAAMmJ,IAAI,GAAG;AACX+I,MAAAA,eAAe,EAAE,IADN;AAEXC,MAAAA,cAAc,EAAE;AAFL,KAAb;AAKA,WAAO,KAAKlT,WAAL,CAAiB+S,KAAjB,CAAuBC,WAAW,CAAChO,OAAnC,EAA4CkF,IAA5C,CAAP;AACD;;AAEgB,QAAXiJ,WAAW,CAACH,WAAD,EAA2BpB,YAAY,GAAG,KAA1C,EAAmE;AAClF,WAAO,KAAKmB,KAAL,CAAWC,WAAX,EAAwBpB,YAAxB,CAAP;AACD;AAED;AACF;AACA;;;AACEW,EAAAA,MAAM,CAACF,cAAD,EAAiC;AACrC,WAAOA,cAAc,CAACf,KAAf,KAAyB,KAAKvQ,IAArC;AACD;;AAEY,QAAP2O,OAAO,CAAC9J,GAAD,EAAqBwL,eAAe,GAAG,KAAvC,EAAoE;AAC/E,UAAMgC,eAAe,GAAG,uBAAQxN,GAAR,CAAxB;AACA,UAAMyN,WAAW,GAAG,2BAAUD,eAAV,EAA2B,MAAOjQ,EAAP,IAA2B;AACxE,aAAOiO,eAAe,GAAG,KAAKkC,UAAL,CAAgBnQ,EAAhB,CAAH,GAAyB,KAAKqB,GAAL,CAASrB,EAAT,CAA/C;AACD,KAFmB,CAApB;AAGA,UAAMtB,UAAU,GAAG,MAAMwR,WAAzB;AACA,WAAO,uBAAQxR,UAAR,CAAP;AACD;AAED;AACF;AACA;;;AACgB,QAAR0R,QAAQ,CAAC3N,GAAD,EAA2C;AACvD,UAAM/D,UAAU,GAAG,MAAM,2BAAU+D,GAAV,EAAgBzC,EAAD,IAAQ,KAAK4J,IAAL,CAAU5J,EAAV,CAAvB,CAAzB;AACA,WAAO,uBAAQtB,UAAR,CAAP;AACD;AAED;AACF;AACA;AACA;;;AACkB,QAAVyR,UAAU,CAACnQ,EAAD,EAAsC;AACpD,UAAMH,SAAS,GAAG,MAAM,KAAKwB,GAAL,CAASrB,EAAT,CAAxB;AACA,QAAI,CAACH,SAAL,EAAgB,MAAM,KAAIwQ,+BAAJ,EAAsBrQ,EAAtB,CAAN;AAChB,WAAOH,SAAP;AACD;AAED;AACF;AACA;AACA;AACA;;;AACgB,QAARyQ,QAAQ,CAACtQ,EAAD,EAAkBuQ,IAAlB,EAAgD;AAC5D,WAAO,KAAK7S,eAAL,CAAqB4S,QAArB,CAA8BtQ,EAA9B,EAAkCuQ,IAAlC,CAAP;AACD;;AAEY,QAAPC,OAAO,CAACxQ,EAAD,EAAkBuQ,IAAlB,EAA+C;AAC1D,WAAO,KAAK7S,eAAL,CAAqB8S,OAArB,CAA6BxQ,EAA7B,EAAiCuQ,IAAjC,CAAP;AACD;;AAEY,QAAPE,OAAO,CAACzQ,EAAD,EAAkB0Q,SAAS,GAAG,KAA9B,EAAqCC,UAArC,EAAmF;AAC9F,WAAO,KAAK9T,WAAL,CAAiB+T,iBAAjB,CAAmC5Q,EAAE,CAAC6B,OAAtC,EAA+C6O,SAA/C,EAA0DC,UAA1D,CAAP;AACD;AAED;AACF;AACA;AACA;;;AAC0B,QAAlB5Q,kBAAkB,CAACC,EAAD,EAAyD;AAC/E,UAAM6Q,KAAK,GAAG7Q,EAAE,CAACM,QAAH,EAAd;AACA,UAAMT,SAAS,GAAG,MAAM,KAAKhD,WAAL,CAAiBiU,yBAAjB,CAA2CD,KAA3C,CAAxB;;AACA,UAAME,YAAY,GAAG,MAAM;AACzB,UAAIlR,SAAJ,EAAe,OAAOgR,KAAP,CADU,CACI;;AAC7B,UAAIA,KAAK,CAAC/I,UAAN,CAAkB,GAAE,KAAKlK,IAAK,GAA9B,CAAJ,EAAuC;AACrC;AACA,eAAOiT,KAAK,CAACzM,OAAN,CAAe,GAAE,KAAKxG,IAAK,GAA3B,EAA+B,EAA/B,CAAP;AACD;;AACD,aAAOiT,KAAP;AACD,KAPD;;AAQA,UAAMG,SAAS,GAAGD,YAAY,EAA9B;AACA,UAAM7C,QAAQ,GAAGlO,EAAE,YAAYiR,oBAAd,GAAsBjR,EAAtB,GAA2B,MAAM,KAAKnD,WAAL,CAAiBqU,WAAjB,CAA6BF,SAA7B,CAAlD;AACA,QAAI,CAAC9C,QAAQ,CAACC,KAAd,EAAqB,OAAO5K,yBAAYiM,UAAZ,CAAuBtB,QAAvB,EAAiC,KAAKtQ,IAAtC,CAAP;AACrB,WAAO2F,yBAAYiM,UAAZ,CAAuBtB,QAAvB,CAAP;AACD;;AAEgC,QAA3BnG,2BAA2B,CAACtF,GAAD,EAA2C;AAC1E,WAAOlC,OAAO,CAACC,GAAR,CAAYiC,GAAG,CAAC7C,GAAJ,CAAQ,MAAOI,EAAP,IAAc,KAAKD,kBAAL,CAAwBC,EAAxB,CAAtB,CAAZ,CAAP;AACD;AAED;AACF;AACA;;;AACiB,QAATmR,SAAS,CAACC,QAAD,EAAqBjD,KAAK,GAAG,IAA7B,EAAyD;AACtE,UAAM1L,GAAG,GAAG,MAAM,KAAKmM,OAAL,CAAa,IAAb,CAAlB;AACA,UAAMyC,aAAa,GAAGD,QAAQ,CAACxR,GAAT,CAAc0R,OAAD,IAAc,GAAEnD,KAAM,IAAGmD,OAAO,IAAI,IAAK,EAAtD,CAAtB;AACA,UAAMC,SAAS,GAAG9O,GAAG,CAACiC,MAAJ,CAAY1E,EAAD,IAAQ;AACnC,aAAOqR,aAAa,CAACG,IAAd,CAAoBF,OAAD,IAAa,qDAA4BtR,EAAE,CAACyR,sBAAH,EAA5B,EAAyDH,OAAzD,EAAkEI,KAAlG,CAAP;AACD,KAFiB,CAAlB;AAIA,UAAMhT,UAAU,GAAG,MAAM,KAAK6N,OAAL,CAAagF,SAAb,CAAzB;AACA,WAAO7S,UAAP;AACD;;AAEiC,QAA5BiT,4BAA4B,CAAC3R,EAAD,EAAkB4R,KAAlB,EAA8D;AAAA;;AAC9F,UAAM1C,cAAc,GAAG,MAAM,KAAKrS,WAAL,CAAiBgV,iBAAjB,CAAmC7R,EAAE,CAAC6B,OAAtC,CAA7B;AACA,UAAMiQ,QAAQ,GAAG5C,cAAc,CAAC6C,YAAf,EAAjB;AACA,oCAAOC,kBAAOC,aAAP,CAA6BH,QAA7B,EAAuCF,KAAvC,EAA8C;AAAEM,MAAAA,iBAAiB,EAAE;AAArB,KAA9C,CAAP,0DAAO,sBAA4E5R,QAA5E,EAAP;AACD;;AAEiB,QAAZ6R,YAAY,CAACC,QAAD,EAAmBC,OAAnB,EAAyD;AACzE,WAAO,2CAAa,KAAKxV,WAAlB,EAA+BuV,QAA/B,EAAyCC,OAAzC,CAAP;AACD;;AAEc,QAATC,SAAS,CAACtS,EAAD,EAAmC;AAChD,UAAMkO,QAAQ,GAAG,MAAM,KAAKrR,WAAL,CAAiBqU,WAAjB,CAA6BlR,EAA7B,CAAvB;AACA,WAAOuD,yBAAYiM,UAAZ,CAAuBtB,QAAvB,CAAP;AACD,GAvyBgD,CAyyBjD;;;AACoB,QAAdqE,cAAc,GAAqB;AACvC,WAAO,qCAAgB,KAAK1V,WAArB,CAAP;AACD;AAED;AACF;AACA;;;AACY,QAAJ+M,IAAI,CAAC5J,EAAD,EAAkD;AAC1D,UAAMH,SAAS,GAAG,MAAM,KAAKwB,GAAL,CAASrB,EAAT,CAAxB;AACA,QAAI,CAACH,SAAL,EAAgB,OAAO6B,SAAP;AAChB,UAAMmG,SAAS,GAAGhI,SAAS,CAACsB,KAAV,CAAgBC,OAAhB,CAAwBqB,GAA1C,CAH0D,CAI1D;;AACA,QAAI,KAAKlF,YAAL,CAAkBiV,iBAAlB,CAAoC3S,SAApC,CAAJ,EAAoD;AAClDgI,MAAAA,SAAS,CAAC/I,IAAV,CAAee,SAAS,CAACG,EAAV,CAAaM,QAAb,EAAf;AACD;;AACD,UAAM,KAAKI,WAAL,CAAiBmH,SAAjB,EAA4B,IAA5B,EAAkC7H,EAAlC,CAAN;AAEA,WAAOH,SAAP;AACD;;AAEyB,QAApB4S,oBAAoB,CAAC5S,SAAD,EAAuB;AAC/C,UAAMgI,SAAS,GAAGhI,SAAS,CAACsB,KAAV,CAAgBC,OAAhB,CAAwBqB,GAA1C;AACA,UAAM,KAAK/B,WAAL,CAAiBmH,SAAjB,EAA4B,IAA5B,EAAkChI,SAAS,CAACG,EAA5C,CAAN;AACD;AAED;AACF;AACA;;;AA4BuB,eAAR0S,QAAQ,CACnB,CAACC,YAAD,EAAeC,EAAf,EAAmBC,OAAnB,EAA4BC,GAA5B,EAAiCxV,QAAjC,EAA2CC,YAA3C,EAAyDwV,OAAzD,EAAkEC,UAAlE,EAA8EvV,IAA9E,EAAoFwV,UAApF,CADmB,EAanBlW,MAbmB,EAcnB,CAACmW,OAAD,EAAUjW,WAAV,EAAuBC,cAAvB,EAAuCC,cAAvC,EAAuDgW,sBAAvD,EAA+EC,mBAA/E,CAdmB,EAsBnBxW,OAtBmB,EAuBnB;AAAA;;AACA,UAAMyW,SAAc,GAAGzW,OAAO,CAACG,MAAR,CAAesE,GAAf,CAAmB,qBAAnB,CAAvB;AACA,UAAMxE,WAAW,GAAG,MAAM,qCAAiBwW,SAAjB,aAAiBA,SAAjB,uBAAiBA,SAAS,CAAEC,GAA5B,CAA1B;;AACA,QAAI,CAACzW,WAAL,EAAkB;AAChB,aAAO6E,SAAP;AACD;;AAED,UAAMlE,MAAM,GAAGwV,UAAU,CAACO,YAAX,CAAwBC,sBAAYxT,EAApC,CAAf;AACA,UAAMmO,KAAK,GAAG,IAAIzR,SAAJ,CACZE,OADY,EAEZC,WAFY,EAGZ8V,YAHY,EAIZ5V,MAJY,EAKZmW,OALY,EAMZjW,WANY,EAOZC,cAPY,EAQZC,cARY,EASZgW,sBATY,EAUZC,mBAVY,EAWZ9V,QAXY,EAYZC,YAZY,EAaZC,MAbY,EAcZC,IAdY,CAAd;AAgBAqV,IAAAA,GAAG,CAACW,eAAJ,CAAoB,MAAOC,YAAP,IAAiC;AACnD,UAAIA,YAAJ,EAAkB;AAClB,YAAMvF,KAAK,CAACzN,WAAN,CAAkBnD,YAAY,CAACoW,gCAAb,EAAlB,CAAN;AACD,KAHD;;AAKA,UAAMC,SAAS,GAAG,OAAOnR,GAAP,EAAsBI,KAAtB,EAAqCE,QAArC,KAA4E;AAC5FvF,MAAAA,MAAM,CAACqD,KAAP,CAAc,wBAAuB4B,GAAG,CAACoD,MAAO,cAAhD;AACAsI,MAAAA,KAAK,CAACzQ,eAAN,CAAsBkD,UAAtB;AACA,YAAM0C,YAAY,GAAG,MAAM6K,KAAK,CAACpG,2BAAN,CAAkCtF,GAAlC,CAA3B;AACA,YAAMS,GAAG,GAAGjG,WAAW,CAACkG,MAAZ,EAAZ;AACA,YAAMxB,IAAI,GAAG;AACXc,QAAAA,GAAG,EAAEa,YADM;AAEXT,QAAAA;AAFW,OAAb;AAIA,YAAMO,QAAQ,GAAG;AAAEC,QAAAA,IAAI,EAAEN;AAAR,OAAjB;AACA,YAAMxC,OAAO,CAACC,GAAR,CAAY0C,GAAG,CAACtD,GAAJ,CAAQ,MAAO6D,EAAP,IAAcA,EAAE,CAAC9B,IAAD,EAAOyB,QAAP,CAAxB,CAAZ,CAAN;AACA5F,MAAAA,MAAM,CAACqD,KAAP,CAAc,0BAAyB4B,GAAG,CAACoD,MAAO,cAAlD;AACD,KAZD;;AAcA,UAAMgO,WAAW,GAAG,MAA4B;AAC9C,YAAMC,KAAK,GAAGC,aAAKC,QAAL,EAAd;;AACA,aAAOF,KAAK,GAAG;AAAEG,QAAAA,IAAI,EAAEC,yBAAR;AAA2BC,QAAAA,WAAW,EAAEL;AAAxC,OAAH,GAAqDpS,SAAjE;AACD,KAHD;;AAKA,UAAM0S,gBAAgB,GAAG,OAAO3R,GAAP,EAAqBI,KAArB,KAAsD;AAC7ErF,MAAAA,MAAM,CAACqD,KAAP,CAAc,+BAA8B4B,GAAG,CAACoD,MAAO,cAAvD;AACA,YAAMvC,YAAY,GAAG,MAAM6K,KAAK,CAACpG,2BAAN,CAAkCtF,GAAlC,CAA3B;AACA,YAAMS,GAAG,GAAG/F,cAAc,CAACgG,MAAf,EAAZ;AACA,YAAMxB,IAAI,GAAG;AACXc,QAAAA,GAAG,EAAEa,YADM;AAEXT,QAAAA;AAFW,OAAb;AAIA,YAAMO,QAAQ,GAAG;AAAEC,QAAAA,IAAI,EAAEwQ,WAAW;AAAnB,OAAjB;AACA,YAAMtT,OAAO,CAACC,GAAR,CAAY0C,GAAG,CAACtD,GAAJ,CAAQ,MAAO6D,EAAP,IAAcA,EAAE,CAAC9B,IAAD,EAAOyB,QAAP,CAAxB,CAAZ,CAAN;AACA5F,MAAAA,MAAM,CAACqD,KAAP,CAAc,iCAAgC4B,GAAG,CAACoD,MAAO,cAAzD;AACD,KAXD;;AAaA,UAAMwO,wBAAwB,GAAG,YAA2B;AAC1D7W,MAAAA,MAAM,CAACqD,KAAP,CAAc,mCAAd;AACA,YAAMqC,GAAG,GAAGiQ,sBAAsB,CAAChQ,MAAvB,EAAZ;AACA,YAAMC,QAAQ,GAAG;AAAEC,QAAAA,IAAI,EAAEwQ,WAAW;AAAnB,OAAjB;AACA,YAAMtT,OAAO,CAACC,GAAR,CAAY0C,GAAG,CAACtD,GAAJ,CAAQ,MAAO6D,EAAP,IAAcA,EAAE,CAAC/B,SAAD,EAAY0B,QAAZ,CAAxB,CAAZ,CAAN;AACA5F,MAAAA,MAAM,CAACqD,KAAP,CAAc,qCAAd;AACD,KAND;;AAQAyT,6BAAcV,SAAd,GAA0BA,SAA1B;AACAW,wBAASX,SAAT,GAAqBA,SAArB;AACAY,mBAAMC,YAAN,GAAqBL,gBAArB;AACAM,0BAAWC,oBAAX,GAAkCN,wBAAlC;AAEApB,IAAAA,UAAU,SAAV,IAAAA,UAAU,WAAV,qCAAAA,UAAU,CAAE2B,4BAAZ,qFAAA3B,UAAU,EAAiC,MAAO4B,OAAP,IAAmB;AAC5D,YAAMC,SAAS,GAAG,MAAM3G,KAAK,CAACzN,WAAN,CAAkBmU,OAAlB,EAA2B,IAA3B,CAAxB,CAD4D,CAE5D;AACA;;AACA,aAAOA,OAAO,CAACjV,GAAR,CAAamV,MAAD,IAAY;AAC7B,cAAMxN,MAAM,GAAGuN,SAAS,CAAC5P,IAAV,CAAgB8P,QAAD,IAAcA,QAAQ,CAAClN,UAAT,CAAqB,GAAEiN,MAAO,GAA9B,CAA7B,CAAf;AACA,eAAOxN,MAAM,IAAIwN,MAAjB;AACD,OAHM,CAAP;AAID,KARS,CAAV;AAUAhC,IAAAA,OAAO,CAAChU,QAAR,CAAiB,CACf,KAAIkW,kBAAJ,EAAa9G,KAAb,EAAoBlR,WAApB,CADe,EAEf,KAAIiY,oBAAJ,EAAe/G,KAAf,EAAsB3Q,MAAtB,CAFe,EAGf,KAAI2X,qBAAJ,EAAgBhH,KAAhB,CAHe,EAIf,KAAIiH,qBAAJ,EAAgBjH,KAAhB,CAJe,CAAjB,EApFA,CA0FA;;AACAyE,IAAAA,EAAE,CAACyC,cAAH,CAAkB,KAAIC,qBAAJ,EAAgBnH,KAAhB,CAAlB;AACA0E,IAAAA,OAAO,CAAC9T,QAAR,CAAiB,2BAAYoP,KAAZ,CAAjB;AACAwE,IAAAA,YAAY,CAAC4C,YAAb,CAA0BpH,KAA1B;AAEA,WAAOA,KAAP;AACD;;AAx9BgD;;;gCAAtCzR,S,WAs0BI,CACb8Y,gBAAKC,QAAL,EADa,EAEbD,gBAAKC,QAAL,EAFa,EAGbD,gBAAKC,QAAL,EAHa,EAIbD,gBAAKC,QAAL,EAJa,EAKbD,gBAAKC,QAAL,EALa,EAMbD,gBAAKC,QAAL,EANa,C;gCAt0BJ/Y,S,aA80BMmN,kB;gCA90BNnN,S,kBAg1BW,CACpBgZ,4BADoB,EAEpBC,cAFoB,EAGpBC,wBAHoB,EAIpBC,gBAJoB,EAKpBC,0BALoB,EAMpBC,kCANoB,EAOpBC,wBAPoB,EAQpBC,sBARoB,EASpBC,eAToB,EAUpBC,sBAVoB,C;gCAh1BXzZ,S,mBA61ByB;AAClC0Z,EAAAA,WAAW,EAAE;AADqB,C;;AA8HtC5C,sBAAY6C,UAAZ,CAAuB3Z,SAAvB","sourcesContent":["import mapSeries from 'p-map-series';\nimport semver from 'semver';\nimport type { AspectLoaderMain } from '@teambit/aspect-loader';\nimport { TaskResultsList, BuilderData, BuilderAspect } from '@teambit/builder';\nimport { readdirSync, existsSync } from 'fs-extra';\nimport { resolve, join } from 'path';\nimport { AspectLoaderAspect, AspectDefinition } from '@teambit/aspect-loader';\nimport { CLIAspect, CLIMain, MainRuntime } from '@teambit/cli';\nimport type { ComponentMain, ComponentMap } from '@teambit/component';\nimport { Component, ComponentAspect, ComponentFactory, ComponentID, Snap, State } from '@teambit/component';\nimport type { GraphqlMain } from '@teambit/graphql';\nimport { GraphqlAspect } from '@teambit/graphql';\nimport { Harmony, Slot, SlotRegistry, ExtensionManifest, Aspect } from '@teambit/harmony';\nimport { Capsule, IsolatorAspect, IsolatorMain } from '@teambit/isolator';\nimport { LoggerAspect, LoggerMain, Logger } from '@teambit/logger';\nimport { ExpressAspect, ExpressMain } from '@teambit/express';\nimport type { UiMain } from '@teambit/ui';\nimport { UIAspect } from '@teambit/ui';\nimport { RequireableComponent } from '@teambit/harmony.modules.requireable-component';\nimport { BitId } from '@teambit/legacy-bit-id';\nimport { BitIds as ComponentsIds } from '@teambit/legacy/dist/bit-id';\nimport { ModelComponent, Lane } from '@teambit/legacy/dist/scope/models';\nimport { Repository } from '@teambit/legacy/dist/scope/objects';\nimport LegacyScope, { LegacyOnTagResult, OnTagFunc, OnTagOpts } from '@teambit/legacy/dist/scope/scope';\nimport { ComponentLog } from '@teambit/legacy/dist/scope/models/model-component';\nimport { loadScopeIfExist } from '@teambit/legacy/dist/scope/scope-loader';\nimport { PersistOptions } from '@teambit/legacy/dist/scope/types';\nimport { DEFAULT_DIST_DIRNAME } from '@teambit/legacy/dist/constants';\nimport LegacyGraph from '@teambit/legacy/dist/scope/graph/graph';\nimport { ExportPersist, PostSign } from '@teambit/legacy/dist/scope/actions';\nimport { getScopeRemotes } from '@teambit/legacy/dist/scope/scope-remotes';\nimport { Remotes } from '@teambit/legacy/dist/remotes';\nimport { isMatchNamespacePatternItem } from '@teambit/workspace.modules.match-pattern';\nimport { ConfigMain, ConfigAspect } from '@teambit/config';\nimport { Scope } from '@teambit/legacy/dist/scope';\nimport { Types } from '@teambit/legacy/dist/scope/object-registrar';\nimport { FETCH_OPTIONS } from '@teambit/legacy/dist/api/scope/lib/fetch';\nimport { ObjectList } from '@teambit/legacy/dist/scope/objects/object-list';\nimport { Http, DEFAULT_AUTH_TYPE, AuthData, getAuthDataFromHeader } from '@teambit/legacy/dist/scope/network/http/http';\nimport { buildOneGraphForComponentsUsingScope } from '@teambit/legacy/dist/scope/graph/components-graph';\nimport { remove } from '@teambit/legacy/dist/api/scope';\nimport ConsumerComponent from '@teambit/legacy/dist/consumer/component';\nimport { resumeExport } from '@teambit/legacy/dist/scope/component-ops/export-scope-components';\nimport { ExtensionDataEntry } from '@teambit/legacy/dist/consumer/config';\nimport EnvsAspect, { EnvsMain } from '@teambit/envs';\nimport { Compiler } from '@teambit/compiler';\nimport { compact, uniq, slice, uniqBy, difference, groupBy } from 'lodash';\nimport { ComponentNotFound } from './exceptions';\nimport { ScopeAspect } from './scope.aspect';\nimport { scopeSchema } from './scope.graphql';\nimport { ScopeUIRoot } from './scope.ui-root';\nimport { PutRoute, FetchRoute, ActionRoute, DeleteRoute } from './routes';\nimport { ScopeComponentLoader } from './scope-component-loader';\n\ntype TagRegistry = SlotRegistry<OnTag>;\n\ntype ManifestOrAspect = ExtensionManifest | Aspect;\n\nexport type OnTagResults = { builderDataMap: ComponentMap<BuilderData>; pipeResults: TaskResultsList[] };\nexport type OnTag = (components: Component[], options?: OnTagOpts) => Promise<OnTagResults>;\n\ntype RemoteEventMetadata = { auth?: AuthData; headers?: {} };\ntype RemoteEvent<Data> = (data: Data, metadata: RemoteEventMetadata, errors?: Array<string | Error>) => Promise<void>;\ntype OnPostPutData = { ids: ComponentID[]; lanes: Lane[] };\ntype OnPostDeleteData = { ids: ComponentID[] };\ntype OnPreFetchObjectData = { ids: string[]; fetchOptions: FETCH_OPTIONS };\n\ntype OnPostPut = RemoteEvent<OnPostPutData>;\ntype OnPostExport = RemoteEvent<OnPostPutData>;\ntype OnPostDelete = RemoteEvent<OnPostDeleteData>;\ntype OnPostObjectsPersist = RemoteEvent<undefined>;\ntype OnPreFetchObjects = RemoteEvent<OnPreFetchObjectData>;\n\nexport type OnPostPutSlot = SlotRegistry<OnPostPut>;\nexport type OnPostDeleteSlot = SlotRegistry<OnPostDelete>;\nexport type OnPostExportSlot = SlotRegistry<OnPostExport>;\nexport type OnPostObjectsPersistSlot = SlotRegistry<OnPostObjectsPersist>;\nexport type OnPreFetchObjectsSlot = SlotRegistry<OnPreFetchObjects>;\n\nexport type ScopeConfig = {\n  httpTimeOut: number;\n  description?: string;\n  icon?: string;\n  backgroundIconColor?: string;\n};\n\nexport class ScopeMain implements ComponentFactory {\n  componentLoader: ScopeComponentLoader;\n  constructor(\n    /**\n     * private reference to the instance of Harmony.\n     */\n    private harmony: Harmony,\n    /**\n     * legacy scope\n     */\n    readonly legacyScope: LegacyScope,\n\n    /**\n     * component extension.\n     */\n    readonly componentExtension: ComponentMain,\n\n    /**\n     * slot registry for subscribing to build\n     */\n\n    readonly config: ScopeConfig,\n\n    private tagRegistry: TagRegistry,\n\n    private postPutSlot: OnPostPutSlot,\n\n    private postDeleteSlot: OnPostDeleteSlot,\n\n    private postExportSlot: OnPostExportSlot,\n\n    private postObjectsPersist: OnPostObjectsPersistSlot,\n\n    public preFetchObjects: OnPreFetchObjectsSlot,\n\n    private isolator: IsolatorMain,\n\n    private aspectLoader: AspectLoaderMain,\n\n    private logger: Logger,\n\n    private envs: EnvsMain\n  ) {\n    this.componentLoader = new ScopeComponentLoader(this, this.logger);\n  }\n\n  /**\n   * name of the scope\n   */\n  get name(): string {\n    return this.legacyScope.name;\n  }\n\n  get icon(): string | undefined {\n    return this.config.icon;\n  }\n\n  get backgroundIconColor(): string | undefined {\n    return this.config.backgroundIconColor;\n  }\n\n  get description(): string | undefined {\n    return this.config.description;\n  }\n\n  get path(): string {\n    return this.legacyScope.path;\n  }\n\n  get isLegacy(): boolean {\n    return this.legacyScope.isLegacy;\n  }\n\n  /**\n   * register to the tag slot.\n   */\n  onTag(tagFn: OnTag) {\n    const host = this.componentExtension.getHost();\n    const legacyOnTagFunc: OnTagFunc = async (\n      legacyComponents: ConsumerComponent[],\n      options?: OnTagOpts\n    ): Promise<LegacyOnTagResult[]> => {\n      // Reload the aspects with their new version\n      await this.reloadAspectsWithNewVersion(legacyComponents);\n      const components = await host.getManyByLegacy(legacyComponents);\n      const { builderDataMap } = await tagFn(components, options);\n      return this.builderDataMapToLegacyOnTagResults(builderDataMap);\n    };\n    this.legacyScope.onTag.push(legacyOnTagFunc);\n    this.tagRegistry.register(tagFn);\n  }\n\n  // We need to reload the aspects with their new version since:\n  // during get many by legacy, we go load component which in turn go to getEnv\n  // get env validates that the env written on the component is really exist by checking the envs slot registry\n  // when we load here, it's env version in the aspect list already has the new version in case the env itself is being tagged\n  // so we are search for the env in the registry with the new version number\n  // but since the env only registered during the on load of the bit process (before the tag) it's version in the registry is only the old one\n  // once we reload them we will have it registered with the new version as well\n  async reloadAspectsWithNewVersion(components: ConsumerComponent[]): Promise<void> {\n    const host = this.componentExtension.getHost();\n\n    // Return only aspects that defined on components but not in the root config file (workspace.jsonc/scope.jsonc)\n    const getUserAspectsIdsWithoutRootIds = (): string[] => {\n      const allUserAspectIds = this.aspectLoader.getUserAspects();\n      const rootIds = Object.keys(this.harmony.config.toObject());\n      const diffIds = difference(allUserAspectIds, rootIds);\n      return diffIds;\n    };\n\n    // Based on the list of components to be tagged return those who are loaded to harmony with their used version\n    const getAspectsByPreviouslyUsedVersion = async (): Promise<string[]> => {\n      const harmonyIds = getUserAspectsIdsWithoutRootIds();\n      const aspectsIds: string[] = [];\n      const aspectsP = components.map(async (component) => {\n        const newId = await host.resolveComponentId(component.id);\n        if (\n          component.previouslyUsedVersion &&\n          component.version &&\n          component.previouslyUsedVersion !== component.version\n        ) {\n          const newIdWithPreviouslyUsedVersion = newId.changeVersion(component.previouslyUsedVersion);\n          if (harmonyIds.includes(newIdWithPreviouslyUsedVersion.toString())) {\n            aspectsIds.push(newId.toString());\n          }\n        }\n      });\n      await Promise.all(aspectsP);\n      return aspectsIds;\n    };\n\n    const idsToLoad = await getAspectsByPreviouslyUsedVersion();\n    await host.loadAspects(idsToLoad, false);\n  }\n\n  getManyByLegacy(components: ConsumerComponent[]): Promise<Component[]> {\n    return mapSeries(components, async (component) => this.getFromConsumerComponent(component));\n  }\n\n  clearCache() {\n    this.logger.debug('clearing the components and the legacy cache');\n    this.componentLoader.clearCache();\n    this.legacyScope.objects.clearCache();\n  }\n\n  builderDataMapToLegacyOnTagResults(builderDataComponentMap: ComponentMap<BuilderData>): LegacyOnTagResult[] {\n    const builderDataToLegacyExtension = (component: Component, builderData: BuilderData) => {\n      const existingBuilder = component.state.aspects.get(BuilderAspect.id)?.legacy;\n      const builderExtension = existingBuilder || new ExtensionDataEntry(undefined, undefined, BuilderAspect.id);\n      builderExtension.data = builderData;\n      return builderExtension;\n    };\n    return builderDataComponentMap.toArray().map(([component, builderData]) => ({\n      id: component.id._legacy,\n      builderData: builderDataToLegacyExtension(component, builderData),\n    }));\n  }\n\n  /**\n   * register to the post-export slot.\n   */\n  onPostPut(postPutFn: OnPostPut) {\n    this.postPutSlot.register(postPutFn);\n    return this;\n  }\n\n  /**\n   * register to the post-delete slot.\n   */\n  onPostDelete(postDeleteFn: OnPostDelete) {\n    this.postDeleteSlot.register(postDeleteFn);\n    return this;\n  }\n\n  /**\n   * register to the post-export slot.\n   */\n  registerOnPostExport(postExportFn: OnPostExport) {\n    this.postExportSlot.register(postExportFn);\n    return this;\n  }\n\n  registerOnPreFetchObjects(preFetchObjectsFn: OnPreFetchObjects) {\n    this.preFetchObjects.register(preFetchObjectsFn);\n    return this;\n  }\n\n  registerOnPostObjectsPersist(postObjectsPersistFn: OnPostObjectsPersist) {\n    this.postObjectsPersist.register(postObjectsPersistFn);\n    return this;\n  }\n\n  /**\n   * Will fetch a list of components into the current scope.\n   * This will only fetch the object and won't write the files to the actual FS\n   *\n   * @param {ComponentsIds} ids list of ids to fetch\n   */\n  fetch(ids: ComponentsIds) {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\n  /**\n   * This function will get a component and sealed it's current state into the scope\n   *\n   * @param {Component[]} components A list of components to seal with specific persist options (such as message and version number)\n   * @param {PersistOptions} persistGeneralOptions General persistence options such as verbose\n   */\n  persist(components: Component[], options: PersistOptions) {} // eslint-disable-line @typescript-eslint/no-unused-vars\n\n  async delete(\n    { ids, force, lanes }: { ids: string[]; force: boolean; lanes: boolean },\n    headers?: Record<string, any>\n  ) {\n    const authData = getAuthDataFromHeader(headers?.authorization);\n    const result = await remove({\n      path: this.path,\n      ids,\n      force,\n      lanes,\n    });\n\n    const fns = this.postDeleteSlot.values();\n    const metadata = { auth: authData, headers };\n    const componentIds = ids.map((id) => ComponentID.fromString(id));\n    await mapSeries(fns, async (fn) => {\n      try {\n        await fn({ ids: componentIds }, metadata);\n      } catch (err: any) {\n        this.logger.error('failed to run delete slot', err);\n      }\n    });\n    return result;\n  }\n\n  async toObjectList(types: Types): Promise<ObjectList> {\n    const objects = await this.legacyScope.objects.list(types);\n    return ObjectList.fromBitObjects(objects);\n  }\n\n  // TODO: temporary compiler workaround - discuss this with david.\n  private toJs(str: string) {\n    if (str.endsWith('.ts')) return str.replace('.ts', '.js');\n    return str;\n  }\n\n  private parseLocalAspect(localAspects: string[]) {\n    const dirPaths = localAspects.map((localAspect) => resolve(localAspect.replace('file://', '')));\n    const nonExistsDirPaths = dirPaths.filter((path) => !existsSync(path));\n    nonExistsDirPaths.forEach((path) => this.logger.warn(`no such file or directory: ${path}`));\n    const existsDirPaths = dirPaths.filter((path) => existsSync(path));\n    return existsDirPaths;\n  }\n\n  private findRuntime(dirPath: string, runtime: string) {\n    const files = readdirSync(join(dirPath, 'dist'));\n    return files.find((path) => path.includes(`${runtime}.runtime.js`));\n  }\n\n  private async loadAspectFromPath(localAspects: string[]) {\n    const dirPaths = this.parseLocalAspect(localAspects);\n    const manifests = dirPaths.map((dirPath) => {\n      const scopeRuntime = this.findRuntime(dirPath, 'scope');\n      if (scopeRuntime) {\n        // eslint-disable-next-line global-require, import/no-dynamic-require\n        const module = require(join(dirPath, 'dist', scopeRuntime));\n        return module.default || module;\n      }\n      // eslint-disable-next-line global-require, import/no-dynamic-require\n      const module = require(dirPath);\n      return module.default || module;\n    });\n\n    await this.aspectLoader.loadExtensionsByManifests(manifests, true);\n  }\n\n  private localAspects: string[] = [];\n\n  async loadAspects(ids: string[], throwOnError = false, neededFor?: ComponentID): Promise<string[]> {\n    this.logger.info(`loadAspects, loading ${ids.length} aspects.\nids: ${ids.join(', ')}\nneeded-for: ${neededFor?.toString() || '<unknown>'}`);\n    const grouped = await this.groupAspectIdsByEnvOfTheList(ids);\n    const envsManifestsIds = await this.getManifestsAndLoadAspects(grouped.envs, throwOnError);\n    const otherManifestsIds = await this.getManifestsAndLoadAspects(grouped.other, throwOnError);\n    return envsManifestsIds.concat(otherManifestsIds);\n  }\n\n  /**\n   * This function get's a list of aspect ids and return them grouped by whether any of them is the env of other from the list\n   * @param ids\n   */\n  async groupAspectIdsByEnvOfTheList(ids: string[]): Promise<{ envs: string[]; other: string[] }> {\n    const components = await this.getNonLoadedAspects(ids);\n    const envsIds = uniq(\n      components\n        .map((component) => this.envs.getEnvId(component))\n        .filter((envId) => !this.aspectLoader.isCoreEnv(envId))\n    );\n    const grouped = groupBy(ids, (id) => {\n      if (envsIds.includes(id)) return 'envs';\n      return 'other';\n    });\n    return grouped as { envs: string[]; other: string[] };\n  }\n\n  private async getManifestsAndLoadAspects(ids: string[], throwOnError = false): Promise<string[]> {\n    const scopeManifests = await this.getManifestsGraphRecursively(ids, [], throwOnError);\n    await this.aspectLoader.loadExtensionsByManifests(scopeManifests);\n    return compact(scopeManifests.map((manifest) => manifest.id));\n  }\n\n  async getManifestsGraphRecursively(\n    ids: string[],\n    visited: string[] = [],\n    throwOnError = false,\n    opts: {\n      packageManagerConfigRootDir?: string;\n    } = {}\n  ): Promise<ManifestOrAspect[]> {\n    ids = uniq(ids);\n    const nonVisitedId = ids.filter((id) => !visited.includes(id));\n    if (!nonVisitedId.length) {\n      return [];\n    }\n    const components = await this.getNonLoadedAspects(nonVisitedId);\n    visited.push(...nonVisitedId);\n    const manifests = await this.requireAspects(components, throwOnError, opts);\n    const depsToLoad: Array<ExtensionManifest | Aspect> = [];\n    await mapSeries(manifests, async (manifest) => {\n      depsToLoad.push(...(manifest.dependencies || []));\n      // @ts-ignore\n      (manifest._runtimes || []).forEach((runtime) => {\n        depsToLoad.push(...(runtime.dependencies || []));\n      });\n      const depIds = depsToLoad.map((d) => d.id).filter((id) => id) as string[];\n      const loaded = await this.getManifestsGraphRecursively(depIds, visited, throwOnError);\n      manifests.push(...loaded);\n    });\n    return manifests;\n  }\n\n  private async getNonLoadedAspects(ids: string[]): Promise<Component[]> {\n    const notLoadedIds = ids.filter((id) => !this.aspectLoader.isAspectLoaded(id));\n    if (!notLoadedIds.length) return [];\n    const coreAspectsStringIds = this.aspectLoader.getCoreAspectIds();\n    const idsWithoutCore: string[] = difference(ids, coreAspectsStringIds);\n    const aspectIds = idsWithoutCore.filter((id) => !id.startsWith('file://'));\n    // TODO: use diff instead of filter twice\n    const localAspects = ids.filter((id) => id.startsWith('file://'));\n    this.localAspects = this.localAspects.concat(localAspects);\n    // load local aspects for debugging purposes.\n    await this.loadAspectFromPath(localAspects);\n    const componentIds = await this.resolveMultipleComponentIds(aspectIds);\n    if (!componentIds || !componentIds.length) return [];\n    const components = await this.import(componentIds, { reFetchUnBuiltVersion: false });\n\n    return components;\n  }\n\n  private async resolveLocalAspects(ids: string[], runtime?: string) {\n    const dirs = this.parseLocalAspect(ids);\n\n    return dirs.map((dir) => {\n      const runtimeManifest = runtime ? this.findRuntime(dir, runtime) : undefined;\n      return new AspectDefinition(\n        dir,\n        runtimeManifest ? join(dir, 'dist', runtimeManifest) : null,\n        undefined,\n        undefined,\n        true\n      );\n    });\n  }\n\n  async getResolvedAspects(\n    components: Component[],\n    opts?: { skipIfExists?: boolean; packageManagerConfigRootDir?: string }\n  ): Promise<RequireableComponent[]> {\n    if (!components || !components.length) return [];\n    const network = await this.isolator.isolateComponents(\n      components.map((c) => c.id),\n      // includeFromNestedHosts - to support case when you are in a workspace, trying to load aspect defined in the workspace.jsonc but not part of the workspace\n      {\n        baseDir: this.getAspectCapsulePath(),\n        skipIfExists: opts?.skipIfExists ?? true,\n        seedersOnly: true,\n        includeFromNestedHosts: true,\n        installOptions: {\n          copyPeerToRuntimeOnRoot: true,\n          dedupe: false,\n          packageManagerConfigRootDir: opts?.packageManagerConfigRootDir,\n        },\n      },\n      this.legacyScope\n    );\n\n    const capsules = network.seedersCapsules;\n\n    return capsules.map((capsule) => {\n      return new RequireableComponent(\n        capsule.component,\n        async () => {\n          // eslint-disable-next-line global-require, import/no-dynamic-require\n          const plugins = this.aspectLoader.getPlugins(capsule.component, capsule.path);\n          if (plugins.has()) {\n            await this.compileIfNoDist(capsule, capsule.component);\n            return plugins.load(MainRuntime.name);\n          }\n          // eslint-disable-next-line global-require, import/no-dynamic-require\n          const aspect = require(capsule.path);\n          const scopeRuntime = await this.aspectLoader.getRuntimePath(capsule.component, capsule.path, 'scope');\n          const mainRuntime = await this.aspectLoader.getRuntimePath(capsule.component, capsule.path, MainRuntime.name);\n          const runtimePath = scopeRuntime || mainRuntime;\n          // eslint-disable-next-line global-require, import/no-dynamic-require\n          if (runtimePath) require(runtimePath);\n          // eslint-disable-next-line global-require, import/no-dynamic-require\n          return aspect;\n        },\n        capsule\n      );\n    });\n  }\n\n  private async compileIfNoDist(capsule: Capsule, component: Component) {\n    const env = this.envs.getEnv(component);\n    const compiler: Compiler = env.env.getCompiler();\n    const distDir = compiler?.distDir || DEFAULT_DIST_DIRNAME;\n    const distExists = existsSync(join(capsule.path, distDir));\n    if (distExists) return;\n\n    const compiledCode = component.filesystem.files.flatMap((file) => {\n      if (!compiler.isFileSupported(file.path)) {\n        return [\n          {\n            outputText: file.contents.toString('utf8'),\n            outputPath: file.path,\n          },\n        ];\n      }\n\n      if (compiler.transpileFile) {\n        return compiler.transpileFile(file.contents.toString('utf8'), {\n          filePath: file.path,\n          componentDir: capsule.path,\n        });\n      }\n\n      return [];\n    });\n\n    await Promise.all(\n      compact(compiledCode).map((compiledFile) => {\n        const path = compiler.getDistPathBySrcPath(compiledFile.outputPath);\n        return capsule?.outputFile(path, compiledFile.outputText);\n      })\n    );\n  }\n\n  private async tryCompile(requirableAspect: RequireableComponent) {\n    if (requirableAspect.capsule) return this.compileIfNoDist(requirableAspect.capsule, requirableAspect.component);\n    return undefined;\n  }\n\n  async requireAspects(\n    components: Component[],\n    throwOnError = false,\n    opts: { packageManagerConfigRootDir?: string } = {}\n  ): Promise<Array<ExtensionManifest | Aspect>> {\n    const requireableExtensions = await this.getResolvedAspects(components, opts);\n    if (!requireableExtensions) {\n      return [];\n    }\n    let error: any;\n    let erroredId = '';\n    const requireWithCatch = async (requireableAspects: RequireableComponent[]) => {\n      error = undefined;\n      try {\n        const manifests = await mapSeries(requireableAspects, async (requireableExtension) => {\n          try {\n            return await this.aspectLoader.doRequire(requireableExtension);\n          } catch (err: any) {\n            erroredId = requireableExtension.component.id.toString();\n            if (err.code === 'MODULE_NOT_FOUND') {\n              try {\n                await this.tryCompile(requireableExtension);\n                return await this.aspectLoader.doRequire(requireableExtension);\n              } catch (newErr: any) {\n                error = newErr;\n                throw newErr;\n              }\n            }\n            error = err;\n            throw err;\n          }\n        });\n        return manifests;\n      } catch (err) {\n        return null;\n      }\n    };\n    const manifests = await requireWithCatch(requireableExtensions);\n    if (!error) {\n      return compact(manifests);\n    }\n    if (error.code === 'MODULE_NOT_FOUND') {\n      this.logger.warn(\n        `failed loading aspects from capsules due to MODULE_NOT_FOUND error, re-creating the capsules and trying again`\n      );\n      const resolvedAspectsAgain = await this.getResolvedAspects(components, {\n        skipIfExists: false,\n      });\n      const manifestAgain = await requireWithCatch(resolvedAspectsAgain);\n      if (!error) {\n        return compact(manifestAgain);\n      }\n    }\n\n    this.aspectLoader.handleExtensionLoadingError(error, erroredId, throwOnError);\n    return [];\n  }\n\n  getAspectCapsulePath() {\n    return `${this.path}-aspects`;\n  }\n\n  private async resolveUserAspects(runtimeName?: string, userAspectsIds?: ComponentID[]): Promise<AspectDefinition[]> {\n    if (!userAspectsIds || !userAspectsIds.length) return [];\n    const components = await this.getMany(userAspectsIds);\n    const network = await this.isolator.isolateComponents(\n      userAspectsIds,\n      {\n        baseDir: this.getAspectCapsulePath(),\n        skipIfExists: true,\n        // for some reason this needs to be false, otherwise tagging components in some workspaces\n        // result in error during Preview task:\n        // \"No matching version found for <some-component-on-the-workspace>\"\n        seedersOnly: true,\n        includeFromNestedHosts: true,\n        installOptions: { copyPeerToRuntimeOnRoot: true, dedupe: false },\n        host: this,\n      },\n      this.legacyScope\n    );\n    const capsules = network.seedersCapsules;\n    const aspectDefs = await this.aspectLoader.resolveAspects(components, async (component) => {\n      const capsule = capsules.getCapsule(component.id);\n      if (!capsule) throw new Error(`failed loading aspect: ${component.id.toString()}`);\n      const localPath = capsule.path;\n\n      return {\n        aspectPath: localPath,\n        runtimePath: runtimeName ? await this.aspectLoader.getRuntimePath(component, localPath, runtimeName) : null,\n      };\n    });\n    return aspectDefs;\n  }\n\n  async resolveAspects(runtimeName?: string, componentIds?: ComponentID[]): Promise<AspectDefinition[]> {\n    const userAspectsIds = componentIds || (await this.resolveMultipleComponentIds(this.aspectLoader.getUserAspects()));\n    const withoutLocalAspects = userAspectsIds.filter((aspectId) => {\n      return !this.localAspects.find((localAspect) => {\n        return localAspect.includes(aspectId.fullName.replace('/', '.'));\n      });\n    });\n    const userAspectsDefs = await this.resolveUserAspects(runtimeName, withoutLocalAspects);\n    const localResolved = await this.resolveLocalAspects(this.localAspects, runtimeName);\n    const coreAspects = await this.aspectLoader.getCoreAspectDefs(runtimeName);\n\n    const allDefs = userAspectsDefs.concat(coreAspects).concat(localResolved);\n    const uniqDefs = uniqBy(allDefs, (def) => `${def.aspectPath}-${def.runtimePath}`);\n    let defs = uniqDefs;\n    if (runtimeName) {\n      defs = defs.filter((def) => def.runtimePath);\n    }\n    return defs;\n  }\n\n  async getLegacyGraph(ids?: ComponentID[]): Promise<LegacyGraph> {\n    if (!ids || ids.length < 1) ids = (await this.list()).map((comp) => comp.id) || [];\n    const legacyIds = ids.map((id) => {\n      let bitId = id._legacy;\n      // The resolve bitId in scope will remove the scope name in case it's the same as the scope\n      // We restore it back to use it correctly in the legacy code.\n      if (!bitId.hasScope()) {\n        bitId = bitId.changeScope(this.legacyScope?.name);\n      }\n      return bitId;\n    });\n\n    const legacyGraph = await buildOneGraphForComponentsUsingScope(legacyIds, this.legacyScope);\n    return legacyGraph;\n  }\n\n  /**\n   * import components into the scope.\n   */\n  async import(\n    ids: ComponentID[],\n    {\n      useCache = true,\n      throwIfNotExist = false,\n      reFetchUnBuiltVersion = true,\n    }: {\n      /**\n       * if the component exists locally, don't go to the server to search for updates.\n       */\n      useCache?: boolean;\n      throwIfNotExist?: boolean;\n      /**\n       * if the Version objects exists locally, but its `buildStatus` is Pending or Failed, reach the remote to find\n       * whether the version was already built there.\n       */\n      reFetchUnBuiltVersion?: boolean;\n    } = {}\n  ): Promise<Component[]> {\n    const legacyIds = ids.map((id) => {\n      const legacyId = id._legacy;\n      if (legacyId.scope === this.name) return legacyId.changeScope(null);\n      return legacyId;\n    });\n\n    const withoutOwnScopeAndLocals = legacyIds.filter((id) => {\n      return id.scope !== this.name && id.hasScope();\n    });\n    await this.legacyScope.import(ComponentsIds.fromArray(withoutOwnScopeAndLocals), useCache, reFetchUnBuiltVersion);\n\n    return this.getMany(ids, throwIfNotExist);\n  }\n\n  async get(id: ComponentID): Promise<Component | undefined> {\n    return this.componentLoader.get(id);\n  }\n\n  async getFromConsumerComponent(consumerComponent: ConsumerComponent): Promise<Component> {\n    return this.componentLoader.getFromConsumerComponent(consumerComponent);\n  }\n\n  /**\n   * get a component from a remote without importing it\n   */\n  async getRemoteComponent(id: ComponentID): Promise<Component> {\n    return this.componentLoader.getRemoteComponent(id);\n  }\n\n  /**\n   * list all components in the scope.\n   */\n  async list(\n    filter?: { offset: number; limit: number },\n    includeCache = false,\n    includeFromLanes = false\n  ): Promise<Component[]> {\n    const componentsIds = await this.listIds(includeCache, includeFromLanes);\n\n    return this.getMany(\n      filter && filter.limit ? slice(componentsIds, filter.offset, filter.offset + filter.limit) : componentsIds\n    );\n  }\n\n  /**\n   * for now, list of invalid components are mostly useful for the workspace.\n   * in the future, this can return components that failed to load in the scope due to objects file\n   * corruption or similar issues.\n   */\n  async listInvalid() {\n    return [];\n  }\n\n  /**\n   * get ids of all scope components.\n   * @param includeCache whether or not include components that their scope-name is different than the current scope-name\n   */\n  async listIds(includeCache = false, includeFromLanes = false): Promise<ComponentID[]> {\n    const allModelComponents = await this.legacyScope.list();\n    const filterByCacheAndLanes = (modelComponent: ModelComponent) => {\n      const cacheFilter = includeCache ? true : this.exists(modelComponent);\n      const lanesFilter = includeFromLanes ? true : modelComponent.hasHead();\n      return cacheFilter && lanesFilter;\n    };\n    const modelComponentsToList = allModelComponents.filter(filterByCacheAndLanes);\n    const ids = modelComponentsToList.map((component) =>\n      ComponentID.fromLegacy(component.toBitIdWithLatestVersion(), component.scope || this.name)\n    );\n    this.logger.debug(`scope listIds: componentsIds after filter scope: ${JSON.stringify(ids, undefined, 2)}`);\n    return ids;\n  }\n\n  /**\n   * Check if a specific id exist in the scope\n   * @param componentId\n   */\n  async hasId(componentId: ComponentID, includeCache = false): Promise<boolean> {\n    if (!includeCache && componentId.scope !== this.name) return false;\n    const opts = {\n      includeOrphaned: true,\n      includeVersion: true,\n    };\n\n    return this.legacyScope.hasId(componentId._legacy, opts);\n  }\n\n  async hasIdNested(componentId: ComponentID, includeCache = false): Promise<boolean> {\n    return this.hasId(componentId, includeCache);\n  }\n\n  /**\n   * determine whether a component exists in the scope.\n   */\n  exists(modelComponent: ModelComponent) {\n    return modelComponent.scope === this.name;\n  }\n\n  async getMany(ids: ComponentID[], throwIfNotExist = false): Promise<Component[]> {\n    const idsWithoutEmpty = compact(ids);\n    const componentsP = mapSeries(idsWithoutEmpty, async (id: ComponentID) => {\n      return throwIfNotExist ? this.getOrThrow(id) : this.get(id);\n    });\n    const components = await componentsP;\n    return compact(components);\n  }\n\n  /**\n   * load components from a scope and load their aspects\n   */\n  async loadMany(ids: ComponentID[]): Promise<Component[]> {\n    const components = await mapSeries(ids, (id) => this.load(id));\n    return compact(components);\n  }\n\n  /**\n   * get a component and throw an exception if not found.\n   * @param id component id\n   */\n  async getOrThrow(id: ComponentID): Promise<Component> {\n    const component = await this.get(id);\n    if (!component) throw new ComponentNotFound(id);\n    return component;\n  }\n\n  /**\n   * returns a specific state of a component.\n   * @param id component ID.\n   * @param hash state hash.\n   */\n  async getState(id: ComponentID, hash: string): Promise<State> {\n    return this.componentLoader.getState(id, hash);\n  }\n\n  async getSnap(id: ComponentID, hash: string): Promise<Snap> {\n    return this.componentLoader.getSnap(id, hash);\n  }\n\n  async getLogs(id: ComponentID, shortHash = false, startsFrom?: string): Promise<ComponentLog[]> {\n    return this.legacyScope.loadComponentLogs(id._legacy, shortHash, startsFrom);\n  }\n\n  /**\n   * resolve a component ID.\n   * @param id component ID.\n   */\n  async resolveComponentId(id: string | ComponentID | BitId): Promise<ComponentID> {\n    const idStr = id.toString();\n    const component = await this.legacyScope.loadModelComponentByIdStr(idStr);\n    const getIdToCheck = () => {\n      if (component) return idStr; // component exists in the scope with the scope-name.\n      if (idStr.startsWith(`${this.name}/`)) {\n        // component with the full name doesn't exist in the scope, it might be locally tagged\n        return idStr.replace(`${this.name}/`, '');\n      }\n      return idStr;\n    };\n    const IdToCheck = getIdToCheck();\n    const legacyId = id instanceof BitId ? id : await this.legacyScope.getParsedId(IdToCheck);\n    if (!legacyId.scope) return ComponentID.fromLegacy(legacyId, this.name);\n    return ComponentID.fromLegacy(legacyId);\n  }\n\n  async resolveMultipleComponentIds(ids: Array<string | ComponentID | BitId>) {\n    return Promise.all(ids.map(async (id) => this.resolveComponentId(id)));\n  }\n\n  /**\n   * load components into the scope through a variants pattern.\n   */\n  async byPattern(patterns: string[], scope = '**'): Promise<Component[]> {\n    const ids = await this.listIds(true);\n    const finalPatterns = patterns.map((pattern) => `${scope}/${pattern || '**'}`);\n    const targetIds = ids.filter((id) => {\n      return finalPatterns.some((pattern) => isMatchNamespacePatternItem(id.toStringWithoutVersion(), pattern).match);\n    });\n\n    const components = await this.getMany(targetIds);\n    return components;\n  }\n\n  async getExactVersionBySemverRange(id: ComponentID, range: string): Promise<string | undefined> {\n    const modelComponent = await this.legacyScope.getModelComponent(id._legacy);\n    const versions = modelComponent.listVersions();\n    return semver.maxSatisfying<string>(versions, range, { includePrerelease: true })?.toString();\n  }\n\n  async resumeExport(exportId: string, remotes: string[]): Promise<string[]> {\n    return resumeExport(this.legacyScope, exportId, remotes);\n  }\n\n  async resolveId(id: string): Promise<ComponentID> {\n    const legacyId = await this.legacyScope.getParsedId(id);\n    return ComponentID.fromLegacy(legacyId);\n  }\n\n  // TODO: add new API for this\n  async _legacyRemotes(): Promise<Remotes> {\n    return getScopeRemotes(this.legacyScope);\n  }\n\n  /**\n   * get a component and load its aspect\n   */\n  async load(id: ComponentID): Promise<Component | undefined> {\n    const component = await this.get(id);\n    if (!component) return undefined;\n    const aspectIds = component.state.aspects.ids;\n    // load components from type aspects as aspects.\n    if (this.aspectLoader.isAspectComponent(component)) {\n      aspectIds.push(component.id.toString());\n    }\n    await this.loadAspects(aspectIds, true, id);\n\n    return component;\n  }\n\n  async loadComponentsAspect(component: Component) {\n    const aspectIds = component.state.aspects.ids;\n    await this.loadAspects(aspectIds, true, component.id);\n  }\n\n  /**\n   * declare the slots of scope extension.\n   */\n  static slots = [\n    Slot.withType<OnTag>(),\n    Slot.withType<OnPostPut>(),\n    Slot.withType<OnPostDelete>(),\n    Slot.withType<OnPostExport>(),\n    Slot.withType<OnPostObjectsPersist>(),\n    Slot.withType<OnPreFetchObjects>(),\n  ];\n  static runtime = MainRuntime;\n\n  static dependencies = [\n    ComponentAspect,\n    UIAspect,\n    GraphqlAspect,\n    CLIAspect,\n    IsolatorAspect,\n    AspectLoaderAspect,\n    ExpressAspect,\n    LoggerAspect,\n    EnvsAspect,\n    ConfigAspect,\n  ];\n\n  static defaultConfig: ScopeConfig = {\n    httpTimeOut: 600000,\n  };\n\n  static async provider(\n    [componentExt, ui, graphql, cli, isolator, aspectLoader, express, loggerMain, envs, configMain]: [\n      ComponentMain,\n      UiMain,\n      GraphqlMain,\n      CLIMain,\n      IsolatorMain,\n      AspectLoaderMain,\n      ExpressMain,\n      LoggerMain,\n      EnvsMain,\n      ConfigMain\n    ],\n    config: ScopeConfig,\n    [tagSlot, postPutSlot, postDeleteSlot, postExportSlot, postObjectsPersistSlot, preFetchObjectsSlot]: [\n      TagRegistry,\n      OnPostPutSlot,\n      OnPostDeleteSlot,\n      OnPostExportSlot,\n      OnPostObjectsPersistSlot,\n      OnPreFetchObjectsSlot\n    ],\n    harmony: Harmony\n  ) {\n    const bitConfig: any = harmony.config.get('teambit.harmony/bit');\n    const legacyScope = await loadScopeIfExist(bitConfig?.cwd);\n    if (!legacyScope) {\n      return undefined;\n    }\n\n    const logger = loggerMain.createLogger(ScopeAspect.id);\n    const scope = new ScopeMain(\n      harmony,\n      legacyScope,\n      componentExt,\n      config,\n      tagSlot,\n      postPutSlot,\n      postDeleteSlot,\n      postExportSlot,\n      postObjectsPersistSlot,\n      preFetchObjectsSlot,\n      isolator,\n      aspectLoader,\n      logger,\n      envs\n    );\n    cli.registerOnStart(async (hasWorkspace: boolean) => {\n      if (hasWorkspace) return;\n      await scope.loadAspects(aspectLoader.getNotLoadedConfiguredExtensions());\n    });\n\n    const onPutHook = async (ids: string[], lanes: Lane[], authData?: AuthData): Promise<void> => {\n      logger.debug(`onPutHook, started. (${ids.length} components)`);\n      scope.componentLoader.clearCache();\n      const componentIds = await scope.resolveMultipleComponentIds(ids);\n      const fns = postPutSlot.values();\n      const data = {\n        ids: componentIds,\n        lanes,\n      };\n      const metadata = { auth: authData };\n      await Promise.all(fns.map(async (fn) => fn(data, metadata)));\n      logger.debug(`onPutHook, completed. (${ids.length} components)`);\n    };\n\n    const getAuthData = (): AuthData | undefined => {\n      const token = Http.getToken();\n      return token ? { type: DEFAULT_AUTH_TYPE, credentials: token } : undefined;\n    };\n\n    const onPostExportHook = async (ids: BitId[], lanes: Lane[]): Promise<void> => {\n      logger.debug(`onPostExportHook, started. (${ids.length} components)`);\n      const componentIds = await scope.resolveMultipleComponentIds(ids);\n      const fns = postExportSlot.values();\n      const data = {\n        ids: componentIds,\n        lanes,\n      };\n      const metadata = { auth: getAuthData() };\n      await Promise.all(fns.map(async (fn) => fn(data, metadata)));\n      logger.debug(`onPostExportHook, completed. (${ids.length} components)`);\n    };\n\n    const onPostObjectsPersistHook = async (): Promise<void> => {\n      logger.debug(`onPostObjectsPersistHook, started`);\n      const fns = postObjectsPersistSlot.values();\n      const metadata = { auth: getAuthData() };\n      await Promise.all(fns.map(async (fn) => fn(undefined, metadata)));\n      logger.debug(`onPostObjectsPersistHook, completed`);\n    };\n\n    ExportPersist.onPutHook = onPutHook;\n    PostSign.onPutHook = onPutHook;\n    Scope.onPostExport = onPostExportHook;\n    Repository.onPostObjectsPersist = onPostObjectsPersistHook;\n\n    configMain?.registerPreAddingAspectsSlot?.(async (compIds) => {\n      const loadedIds = await scope.loadAspects(compIds, true);\n      // find the full component-ids including versions in the load-aspects results.\n      // we need it for bit-use to be added to the config file.\n      return compIds.map((compId) => {\n        const loaded = loadedIds.find((loadedId) => loadedId.startsWith(`${compId}@`));\n        return loaded || compId;\n      });\n    });\n\n    express.register([\n      new PutRoute(scope, postPutSlot),\n      new FetchRoute(scope, logger),\n      new ActionRoute(scope),\n      new DeleteRoute(scope),\n    ]);\n    // @ts-ignore - @ran to implement the missing functions and remove it\n    ui.registerUiRoot(new ScopeUIRoot(scope));\n    graphql.register(scopeSchema(scope));\n    componentExt.registerHost(scope);\n\n    return scope;\n  }\n}\n\nScopeAspect.addRuntime(ScopeMain);\n"]}