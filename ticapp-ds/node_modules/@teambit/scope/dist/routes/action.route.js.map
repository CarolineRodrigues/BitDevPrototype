{"version":3,"sources":["action.route.ts"],"names":["ActionRoute","constructor","scope","Verb","WRITE","req","res","setTimeout","config","httpTimeOut","authData","headers","authorization","result","path","body","name","options","json"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAGO,MAAMA,WAAN,CAAmC;AACxCC,EAAAA,WAAW,CAASC,KAAT,EAA2B;AAAA,SAAlBA,KAAkB,GAAlBA,KAAkB;AAAA,oDAE7B,MAF6B;AAAA,mDAG9B,eAH8B;AAAA,kDAI/BC,gBAAKC,KAJ0B;AAAA,yDAMxB,CACZ,OAAOC,GAAP,EAAqBC,GAArB,KAAuC;AACrCD,MAAAA,GAAG,CAACE,UAAJ,CAAe,KAAKL,KAAL,CAAWM,MAAX,CAAkBC,WAAjC;AACA,YAAMC,QAAQ,GAAG,mCAAsBL,GAAG,CAACM,OAAJ,CAAYC,aAAlC,CAAjB;AACA,YAAMC,MAAM,GAAG,MAAM,sBAAO,KAAKX,KAAL,CAAWY,IAAlB,EAAwBT,GAAG,CAACU,IAAJ,CAASC,IAAjC,EAAuCX,GAAG,CAACU,IAAJ,CAASE,OAAhD,EAAyDP,QAAzD,CAArB,CAHqC,CAIrC;;AACAJ,MAAAA,GAAG,CAACY,IAAJ,CAASL,MAAM,IAAI,EAAnB;AACD,KAPW,CANwB;AAAE;;AADA","sourcesContent":["import { Route, Verb, Request, Response } from '@teambit/express';\nimport { action } from '@teambit/legacy/dist/api/scope/lib/action';\nimport { getAuthDataFromHeader } from '@teambit/legacy/dist/scope/network/http/http';\nimport { ScopeMain } from '../scope.main.runtime';\n\nexport class ActionRoute implements Route {\n  constructor(private scope: ScopeMain) {}\n\n  method = 'post';\n  route = '/scope/action';\n  verb = Verb.WRITE;\n\n  middlewares = [\n    async (req: Request, res: Response) => {\n      req.setTimeout(this.scope.config.httpTimeOut);\n      const authData = getAuthDataFromHeader(req.headers.authorization);\n      const result = await action(this.scope.path, req.body.name, req.body.options, authData);\n      // in case the result is empty, send `{}` to make it a valid json.\n      res.json(result || {});\n    },\n  ];\n}\n"]}