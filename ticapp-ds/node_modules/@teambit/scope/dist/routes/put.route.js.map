{"version":3,"sources":["put.route.ts"],"names":["PutRoute","constructor","scope","postPutSlot","Verb","WRITE","req","res","setTimeout","config","httpTimeOut","pushOptionsStr","headers","Error","pushOptions","JSON","parse","objectList","ObjectList","fromTar","ids","path","Promise","all","map","id","resolveComponentId","json"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAGO,MAAMA,QAAN,CAAgC;AACrCC,EAAAA,WAAW,CAASC,KAAT,EAAmCC,WAAnC,EAA+D;AAAA,SAAtDD,KAAsD,GAAtDA,KAAsD;AAAA,SAA5BC,WAA4B,GAA5BA,WAA4B;AAAA,oDAEjE,MAFiE;AAAA,mDAGlE,YAHkE;AAAA,kDAInEC,gBAAKC,KAJ8D;AAAA,yDAM5D,CACZ,OAAOC,GAAP,EAAqBC,GAArB,KAAuC;AACrCD,MAAAA,GAAG,CAACE,UAAJ,CAAe,KAAKN,KAAL,CAAWO,MAAX,CAAkBC,WAAjC;AACA,YAAMC,cAAc,GAAGL,GAAG,CAACM,OAAJ,CAAY,cAAZ,CAAvB;AACA,UAAI,CAACD,cAAL,EAAqB,MAAM,IAAIE,KAAJ,CAAU,yCAAV,CAAN;AACrB,YAAMC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWL,cAAX,CAApB;AACA,YAAMM,UAAU,GAAG,MAAMC,yBAAWC,OAAX,CAAmBb,GAAnB,CAAzB;AACA,YAAMc,GAAG,GAAG,MAAM,kBAChB;AACEC,QAAAA,IAAI,EAAE,KAAKnB,KAAL,CAAWmB,IADnB;AAEEJ,QAAAA;AAFF,OADgB,EAKhBH,WALgB,CAAlB;AAQA,YAAMQ,OAAO,CAACC,GAAR,CACJH,GAAG,CAACI,GAAJ,CAASC,EAAD,IAAQ;AACd,eAAO,KAAKvB,KAAL,CAAWwB,kBAAX,CAA8BD,EAA9B,CAAP;AACD,OAFD,CADI,CAAN;AAMAlB,MAAAA,GAAG,CAACoB,IAAJ,CAASP,GAAT;AACD,KAtBW,CAN4D;AAAE;;AADvC","sourcesContent":["import { Route, Verb, Request, Response } from '@teambit/express';\nimport { ObjectList } from '@teambit/legacy/dist/scope/objects/object-list';\nimport { put } from '@teambit/legacy/dist/api/scope';\nimport { OnPostPutSlot, ScopeMain } from '../scope.main.runtime';\n\nexport class PutRoute implements Route {\n  constructor(private scope: ScopeMain, private postPutSlot: OnPostPutSlot) {}\n\n  method = 'post';\n  route = '/scope/put';\n  verb = Verb.WRITE;\n\n  middlewares = [\n    async (req: Request, res: Response) => {\n      req.setTimeout(this.scope.config.httpTimeOut);\n      const pushOptionsStr = req.headers['push-options'];\n      if (!pushOptionsStr) throw new Error('http is missing the push-options header');\n      const pushOptions = JSON.parse(pushOptionsStr as string);\n      const objectList = await ObjectList.fromTar(req);\n      const ids = await put(\n        {\n          path: this.scope.path,\n          objectList,\n        },\n        pushOptions\n      );\n\n      await Promise.all(\n        ids.map((id) => {\n          return this.scope.resolveComponentId(id);\n        })\n      );\n\n      res.json(ids);\n    },\n  ];\n}\n"]}