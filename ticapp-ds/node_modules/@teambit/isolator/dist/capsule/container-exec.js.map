{"version":3,"sources":["container-exec.ts"],"names":["ContainerExec","EventEmitter","constructor","_code","DuplexBufferStream","setStatus","status","emit","code","inspect","Promise","resolve","running","pid","abort","Error"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEe,MAAMA,aAAN,SAA4BC,sBAA5B,CAAyD;AACtEC,EAAAA,WAAW,CAASC,KAAa,GAAG,CAAzB,EAA4B;AACrC;AADqC,SAAnBA,KAAmB,GAAnBA,KAAmB;AAAA,oDAIV,KAAIC,6BAAJ,GAJU;AAAA,oDAKV,KAAIA,6BAAJ,GALU;AAAA,mDAMX,KAAIA,6BAAJ,GANW;AAEtC;;AAMDC,EAAAA,SAAS,CAACC,MAAD,EAAuB;AAC9B,SAAKH,KAAL,GAAaG,MAAb;AACA,SAAKC,IAAL,CAAU,OAAV;AACD;;AAEO,MAAJC,IAAI,GAAW;AACjB,WAAO,KAAKL,KAAZ;AACD;;AAEDM,EAAAA,OAAO,GAAwB;AAC7B,WAAOC,OAAO,CAACC,OAAR,CAAgB;AACrBC,MAAAA,OAAO,EAAE,IADY;AAErBC,MAAAA,GAAG,EAAE;AAFgB,KAAhB,CAAP;AAID;;AACDC,EAAAA,KAAK,GAAkB;AACrB,UAAM,IAAIC,KAAJ,CAAU,yBAAV,CAAN;AACD;;AA1BqE","sourcesContent":["import { DuplexBufferStream, Exec, ExecStatus } from '@teambit/capsule';\nimport { EventEmitter } from 'events';\n\nexport default class ContainerExec extends EventEmitter implements Exec {\n  constructor(private _code: number = 0) {\n    super();\n  }\n\n  stdout: DuplexBufferStream = new DuplexBufferStream();\n  stderr: DuplexBufferStream = new DuplexBufferStream();\n  stdin: DuplexBufferStream = new DuplexBufferStream();\n\n  setStatus(status: number): void {\n    this._code = status;\n    this.emit('close');\n  }\n\n  get code(): number {\n    return this._code;\n  }\n\n  inspect(): Promise<ExecStatus> {\n    return Promise.resolve({\n      running: true,\n      pid: 1,\n    });\n  }\n  abort(): Promise<void> {\n    throw new Error('Method not implemented.');\n  }\n}\n"]}