{"version":3,"sources":["forking.graphql.ts"],"names":["forkingSchema","forking","typeDefs","resolvers","Component","component","forkInfo","getForkInfo","forkedFrom","toString"],"mappings":";;;;;;;;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAGO,SAASA,aAAT,CAAuBC,OAAvB,EAAqD;AAC1D,SAAO;AACLC,IAAAA,QAAQ,EAAE,0BAAI;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KATS;AAULC,IAAAA,SAAS,EAAE;AACTC,MAAAA,SAAS,EAAE;AACTH,QAAAA,OAAO,EAAGI,SAAD,IAA0B;AACjC,gBAAMC,QAAQ,GAAGL,OAAO,CAACM,WAAR,CAAoBF,SAApB,CAAjB;AACA,iBAAO;AACLG,YAAAA,UAAU,EAAEF,QAAF,aAAEA,QAAF,uBAAEA,QAAQ,CAAEE,UAAV,CAAqBC,QAArB;AADP,WAAP;AAGD;AANQ;AADF;AAVN,GAAP;AAqBD","sourcesContent":["import { Component } from '@teambit/component';\nimport { Schema } from '@teambit/graphql';\nimport gql from 'graphql-tag';\nimport { ForkingMain } from './forking.main.runtime';\n\nexport function forkingSchema(forking: ForkingMain): Schema {\n  return {\n    typeDefs: gql`\n      extend type Component {\n        forking: ForkingInfo\n      }\n\n      type ForkingInfo {\n        forkedFrom: String\n      }\n    `,\n    resolvers: {\n      Component: {\n        forking: (component: Component) => {\n          const forkInfo = forking.getForkInfo(component);\n          return {\n            forkedFrom: forkInfo?.forkedFrom.toString(),\n          };\n        },\n      },\n    },\n  };\n}\n"]}