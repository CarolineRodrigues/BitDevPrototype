{"version":3,"sources":["watcher.ts"],"names":["Watcher","constructor","workspace","pubsub","trackDirs","verbose","multipleWatchers","consumer","watchAll","opts","msgs","watchOpts","pathsToWatch","getPathsToWatch","componentIds","Object","values","triggerOnPreWatch","createWatcher","watcher","fsWatcher","onStart","Promise","resolve","reject","process","env","BIT_LOG","onAll","on","onReady","filePath","startTime","Date","getTime","buildResults","handleChange","initiator","duration","onChange","onAdd","p","onUnlink","err","onError","endsWith","BIT_MAP","handleBitmapChanges","completeWatch","componentId","getComponentIdAndClearItsCache","logger","debug","executeWatchOperationsOnComponent","msg","error","console","message","previewsTrackDirs","_reloadConsumer","setTrackDirs","newDirs","keys","removedDirs","results","length","add","addResults","dir","push","flat","unwatch","executeWatchOperationsOnRemove","chalk","bold","toString","pub","WorkspaceAspect","id","creatOnComponentRemovedEvent","triggerOnComponentRemove","files","isChange","isComponentWatchedExternally","get","idStr","creatOnComponentChangeEvent","creatOnComponentAddEvent","triggerOnComponentChange","triggerOnComponentAdd","OnComponentRemovedEvent","now","hook","OnComponentChangeEvent","OnComponentAddEvent","loader","stop","watcherData","find","m","isEqual","_legacy","compilerId","relativeFile","getPathRelativeToConsumer","trackDir","findTrackDirByFilePathRecursively","clearComponentCache","component","componentMap","state","_consumer","getFilesRelativeToConsumer","parentDir","chokidar","watch","ignoreInitial","ignored","path","includes","sep","persistent","useFsEvents","componentsFromBitMap","bitMap","getAllComponents","COMPONENT_ORIGINS","AUTHORED","IMPORTED","all","map","bitId","getTrackDir","Error","resolveComponentId","paths","pathsAbsolute","toAbsolutePath"],"mappings":"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","sourcesContent":["import { PubsubMain } from '@teambit/pubsub';\nimport { dirname, sep } from 'path';\nimport { difference } from 'lodash';\nimport { ComponentID } from '@teambit/component';\nimport { BitId } from '@teambit/legacy-bit-id';\nimport loader from '@teambit/legacy/dist/cli/loader';\nimport { BIT_MAP, COMPONENT_ORIGINS } from '@teambit/legacy/dist/constants';\nimport { Consumer } from '@teambit/legacy/dist/consumer';\nimport logger from '@teambit/legacy/dist/logger/logger';\nimport { pathNormalizeToLinux } from '@teambit/legacy/dist/utils';\nimport mapSeries from 'p-map-series';\nimport chalk from 'chalk';\nimport { ChildProcess } from 'child_process';\nimport chokidar, { FSWatcher } from 'chokidar';\nimport ComponentMap from '@teambit/legacy/dist/consumer/bit-map/component-map';\nimport { PathLinux, PathOsBasedAbsolute } from '@teambit/legacy/dist/utils/path';\nimport { CompilationInitiator } from '@teambit/compiler';\nimport { WorkspaceAspect } from '../';\nimport { OnComponentChangeEvent, OnComponentAddEvent, OnComponentRemovedEvent } from '../events';\nimport { Workspace } from '../workspace';\nimport { OnComponentEventResult } from '../on-component-events';\nimport { CheckTypes } from './check-types';\n\nexport type WatcherProcessData = { watchProcess: ChildProcess; compilerId: BitId; componentIds: BitId[] };\n\nexport type EventMessages = {\n  onAll: Function;\n  onStart: Function;\n  onReady: Function;\n  onChange: Function;\n  onAdd: Function;\n  onUnlink: Function;\n  onError: Function;\n};\n\nexport type WatchOptions = {\n  msgs?: EventMessages;\n  initiator?: CompilationInitiator;\n  verbose?: boolean; // print watch events to the console. (also ts-server events if spawnTSServer is true)\n  spawnTSServer?: boolean; // needed for check types and extract API/docs.\n  checkTypes?: CheckTypes; // if enabled, the spawnTSServer becomes true.\n  preCompile?: boolean; // whether compile all components before start watching\n};\n\nexport class Watcher {\n  private fsWatcher: FSWatcher;\n  constructor(\n    private workspace: Workspace,\n    private pubsub: PubsubMain,\n    private trackDirs: { [dir: PathLinux]: ComponentID } = {},\n    private verbose = false,\n    private multipleWatchers: WatcherProcessData[] = []\n  ) {}\n\n  get consumer(): Consumer {\n    return this.workspace.consumer;\n  }\n\n  async watchAll(opts: WatchOptions) {\n    const { msgs, ...watchOpts } = opts;\n    // TODO: run build in the beginning of process (it's work like this in other envs)\n    const pathsToWatch = await this.getPathsToWatch();\n    const componentIds = Object.values(this.trackDirs);\n    await this.workspace.triggerOnPreWatch(componentIds, watchOpts);\n    await this.createWatcher(pathsToWatch);\n    const watcher = this.fsWatcher;\n    msgs?.onStart(this.workspace);\n\n    return new Promise((resolve, reject) => {\n      // prefix your command with \"BIT_LOG=*\" to see all watch events\n      if (process.env.BIT_LOG) {\n        // @ts-ignore\n        if (msgs?.onAll) watcher.on('all', msgs?.onAll);\n      }\n      watcher.on('ready', () => {\n        msgs?.onReady(this.workspace, this.trackDirs, this.verbose);\n      });\n      // eslint-disable-next-line @typescript-eslint/no-misused-promises\n      watcher.on('change', async (filePath) => {\n        const startTime = new Date().getTime();\n        const buildResults = (await this.handleChange(filePath, opts?.initiator)) || [];\n        const duration = new Date().getTime() - startTime;\n        msgs?.onChange(filePath, buildResults, this.verbose, duration);\n      });\n      // eslint-disable-next-line @typescript-eslint/no-misused-promises\n      watcher.on('add', async (filePath) => {\n        const startTime = new Date().getTime();\n        const buildResults = (await this.handleChange(filePath)) || [];\n        const duration = new Date().getTime() - startTime;\n        msgs?.onAdd(filePath, buildResults, this.verbose, duration);\n      });\n      // eslint-disable-next-line @typescript-eslint/no-misused-promises\n      watcher.on('unlink', async (p) => {\n        msgs?.onUnlink(p);\n        await this.handleChange(p);\n      });\n      watcher.on('error', (err) => {\n        msgs?.onError(err);\n        reject(err);\n      });\n    });\n  }\n\n  private async handleChange(filePath: string, initiator?: CompilationInitiator): Promise<OnComponentEventResult[]> {\n    try {\n      if (filePath.endsWith(BIT_MAP)) {\n        const buildResults = await this.handleBitmapChanges();\n        this.completeWatch();\n        return buildResults;\n      }\n      const componentId = await this.getComponentIdAndClearItsCache(filePath);\n      if (!componentId) {\n        logger.debug(`file ${filePath} is not part of any component, ignoring it`);\n        return this.completeWatch();\n      }\n\n      const buildResults = await this.executeWatchOperationsOnComponent(componentId, [filePath], true, initiator);\n      this.completeWatch();\n      return buildResults;\n    } catch (err: any) {\n      const msg = `watcher found an error while handling ${filePath}`;\n      logger.error(msg, err);\n      logger.console(`${msg}, ${err.message}`);\n      return [];\n    }\n  }\n\n  /**\n   * if .bitmap changed, it's possible that a new component has been added. trigger onComponentAdd.\n   */\n  private async handleBitmapChanges(): Promise<OnComponentEventResult[]> {\n    const previewsTrackDirs = { ...this.trackDirs };\n    await this.workspace._reloadConsumer();\n    await this.setTrackDirs();\n    const newDirs: string[] = difference(Object.keys(this.trackDirs), Object.keys(previewsTrackDirs));\n    const removedDirs: string[] = difference(Object.keys(previewsTrackDirs), Object.keys(this.trackDirs));\n    const results: OnComponentEventResult[] = [];\n    if (newDirs.length) {\n      this.fsWatcher.add(newDirs);\n      const addResults = await mapSeries(newDirs, async (dir) =>\n        this.executeWatchOperationsOnComponent(this.trackDirs[dir], [], false)\n      );\n      results.push(...addResults.flat());\n    }\n    if (removedDirs.length) {\n      await this.fsWatcher.unwatch(removedDirs);\n      await mapSeries(removedDirs, (dir) => this.executeWatchOperationsOnRemove(previewsTrackDirs[dir]));\n    }\n    return results;\n  }\n\n  private async executeWatchOperationsOnRemove(componentId: ComponentID) {\n    logger.debug(`running OnComponentRemove hook for ${chalk.bold(componentId.toString())}`);\n    this.pubsub.pub(WorkspaceAspect.id, this.creatOnComponentRemovedEvent(componentId.toString()));\n    await this.workspace.triggerOnComponentRemove(componentId);\n  }\n\n  private async executeWatchOperationsOnComponent(\n    componentId: ComponentID,\n    files: string[],\n    isChange = true,\n    initiator?: CompilationInitiator\n  ): Promise<OnComponentEventResult[]> {\n    if (this.isComponentWatchedExternally(componentId)) {\n      // update capsule, once done, it automatically triggers the external watcher\n      await this.workspace.get(componentId);\n      return [];\n    }\n    const idStr = componentId.toString();\n\n    if (isChange) {\n      logger.debug(`running OnComponentChange hook for ${chalk.bold(idStr)}`);\n      this.pubsub.pub(WorkspaceAspect.id, this.creatOnComponentChangeEvent(idStr, 'OnComponentChange'));\n    } else {\n      logger.debug(`running OnComponentAdd hook for ${chalk.bold(idStr)}`);\n      this.pubsub.pub(WorkspaceAspect.id, this.creatOnComponentAddEvent(idStr, 'OnComponentAdd'));\n    }\n\n    let buildResults: OnComponentEventResult[];\n    try {\n      buildResults = isChange\n        ? await this.workspace.triggerOnComponentChange(componentId, files, initiator)\n        : await this.workspace.triggerOnComponentAdd(componentId);\n    } catch (err: any) {\n      // do not exit the watch process on errors, just print them\n      const msg = `found an issue during onComponentChange or onComponentAdd hooks`;\n      logger.error(msg, err);\n      logger.console(`\\n${msg}: ${err.message || err}`);\n      return [];\n    }\n    if (buildResults && buildResults.length) {\n      return buildResults;\n    }\n    logger.console(`${idStr} doesn't have a compiler, nothing to build`);\n    return [];\n  }\n\n  private creatOnComponentRemovedEvent(idStr) {\n    return new OnComponentRemovedEvent(Date.now(), idStr);\n  }\n\n  private creatOnComponentChangeEvent(idStr, hook) {\n    return new OnComponentChangeEvent(Date.now(), idStr, hook);\n  }\n\n  private creatOnComponentAddEvent(idStr, hook) {\n    return new OnComponentAddEvent(Date.now(), idStr, hook);\n  }\n\n  private completeWatch() {\n    loader.stop();\n    return [];\n  }\n\n  private isComponentWatchedExternally(componentId: ComponentID) {\n    const watcherData = this.multipleWatchers.find((m) => m.componentIds.find((id) => id.isEqual(componentId._legacy)));\n    if (watcherData) {\n      logger.debug(`${componentId.toString()} is watched by ${watcherData.compilerId.toString()}`);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * if a file was added/remove, once the component is loaded, it changes .bitmap, and then the\n   * entire cache is invalidated and the consumer is reloaded.\n   * when a file just changed, no need to reload the consumer, it is enough to just delete the\n   * component from the cache (both, workspace and consumer)\n   */\n  private async getComponentIdAndClearItsCache(filePath: string): Promise<ComponentID | null> {\n    const relativeFile = pathNormalizeToLinux(this.consumer.getPathRelativeToConsumer(filePath));\n    const trackDir = this.findTrackDirByFilePathRecursively(relativeFile);\n    if (!trackDir) {\n      // the file is not part of any component. If it was a new component, or a new file of\n      // existing component, then, handleBitmapChanges() should deal with it.\n      return null;\n    }\n    const componentId = this.trackDirs[trackDir];\n    this.workspace.clearComponentCache(componentId);\n    const component = await this.workspace.get(componentId);\n    const componentMap: ComponentMap = component.state._consumer.componentMap;\n    if (componentMap.getFilesRelativeToConsumer().find((p) => p === relativeFile)) {\n      return componentId;\n    }\n    // the file is inside the component dir but it's ignored. (e.g. it's in IGNORE_LIST)\n    return null;\n  }\n\n  private findTrackDirByFilePathRecursively(filePath: string): string | null {\n    if (this.trackDirs[filePath]) return filePath;\n    const parentDir = dirname(filePath);\n    if (parentDir === filePath) return null;\n    return this.findTrackDirByFilePathRecursively(parentDir);\n  }\n\n  private async createWatcher(pathsToWatch: string[]) {\n    this.fsWatcher = chokidar.watch(pathsToWatch, {\n      ignoreInitial: true,\n      // Using the function way since the regular way not working as expected\n      // It might be solved when upgrading to chokidar > 3.0.0\n      // See:\n      // https://github.com/paulmillr/chokidar/issues/773\n      // https://github.com/paulmillr/chokidar/issues/492\n      // https://github.com/paulmillr/chokidar/issues/724\n      ignored: (path) => {\n        // Ignore package.json temporarily since it cerates endless loop since it's re-written after each build\n        if (path.includes(`${sep}node_modules${sep}`) || path.includes(`${sep}package.json`)) {\n          return true;\n        }\n        return false;\n      },\n      persistent: true,\n      useFsEvents: false,\n    });\n  }\n\n  async setTrackDirs() {\n    this.trackDirs = {};\n    const componentsFromBitMap = this.consumer.bitMap.getAllComponents([\n      COMPONENT_ORIGINS.AUTHORED,\n      COMPONENT_ORIGINS.IMPORTED,\n    ]);\n    await Promise.all(\n      componentsFromBitMap.map(async (componentMap) => {\n        const bitId = componentMap.id;\n        const trackDir = componentMap.getTrackDir();\n        if (!trackDir) throw new Error(`${bitId.toString()} has no rootDir, which is invalid in Harmony`);\n        const componentId = await this.workspace.resolveComponentId(bitId);\n        this.trackDirs[trackDir] = componentId;\n      })\n    );\n  }\n\n  private async getPathsToWatch(): Promise<PathOsBasedAbsolute[]> {\n    await this.setTrackDirs();\n    const paths = [...Object.keys(this.trackDirs), BIT_MAP];\n    const pathsAbsolute = paths.map((dir) => this.consumer.toAbsolutePath(dir));\n    return pathsAbsolute;\n  }\n}\n"]}