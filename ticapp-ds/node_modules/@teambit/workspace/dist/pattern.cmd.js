"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

require("core-js/modules/es.array.iterator.js");

require("core-js/modules/es.promise.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PatternCommand = void 0;

function _defineProperty2() {
  const data = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

  _defineProperty2 = function () {
    return data;
  };

  return data;
}

function _chalk() {
  const data = _interopRequireDefault(require("chalk"));

  _chalk = function () {
    return data;
  };

  return data;
}

class PatternCommand {
  constructor(workspace) {
    this.workspace = workspace;
    (0, _defineProperty2().default)(this, "name", 'pattern <pattern>');
    (0, _defineProperty2().default)(this, "alias", '');
    (0, _defineProperty2().default)(this, "description", 'list the component ids matching the given pattern');
    (0, _defineProperty2().default)(this, "group", 'development');
    (0, _defineProperty2().default)(this, "private", false);
    (0, _defineProperty2().default)(this, "options", [['j', 'json', 'return the output as JSON']]);
  }

  async report([pattern]) {
    const ids = await this.json([pattern]);

    const title = _chalk().default.green(`found ${_chalk().default.bold(ids.length.toString())} components matching the pattern`);

    return `${title}\n${ids.join('\n')}`;
  }

  async json([pattern]) {
    return this.workspace.idsByPattern(pattern, false);
  }

}

exports.PatternCommand = PatternCommand;

//# sourceMappingURL=pattern.cmd.js.map