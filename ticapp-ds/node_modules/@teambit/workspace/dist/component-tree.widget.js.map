{"version":3,"sources":["component-tree.widget.tsx"],"names":["ComponentTreeWidget","component","workspace","WorkspaceContext","workspaceComponent","getComponent","id","lanes","isInCurrentLane","currentLane","status","issuesCount"],"mappings":";;;;;;;;;;;;;;;;;;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;AAEO,MAAMA,mBAAN,CAAuD;AAAA;AAAA,oDACnD,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAA2C;AAClD,YAAMC,SAAS,GAAG,yBAAWC,oCAAX,CAAlB;AACA,YAAMC,kBAAkB,GAAGF,SAAS,CAACG,YAAV,CAAuBJ,SAAS,CAACK,EAAjC,CAA3B;AACA,YAAMC,KAAK,GAAG,iCAAd;AAEA,YAAMC,eAAe,GAAG,sBAAQ,MAAM;AACpC,eAAO,CAAAJ,kBAAkB,SAAlB,IAAAA,kBAAkB,WAAlB,YAAAA,kBAAkB,CAAEE,EAApB,MAA0BC,KAA1B,aAA0BA,KAA1B,uBAA0BA,KAAK,CAAEC,eAAP,CAAuBJ,kBAAkB,CAACE,EAA1C,CAA1B,CAAP;AACD,OAFuB,EAErB,CAACC,KAAD,aAACA,KAAD,uBAACA,KAAK,CAAEE,WAAR,EAAqBL,kBAArB,aAAqBA,kBAArB,uBAAqBA,kBAAkB,CAAEE,EAAzC,CAFqB,CAAxB;AAIA,UAAI,CAACF,kBAAL,EAAyB,OAAO,IAAP;AAEzB,0BACE,+BAAC,sCAAD;AACE,QAAA,MAAM,EAAEA,kBAAkB,CAACM,MAD7B;AAEE,QAAA,WAAW,EAAEN,kBAAkB,CAACO,WAFlC;AAGE,QAAA,eAAe,EAAEH;AAHnB,QADF;AAOD,KAnB2D;AAAA;;AAAA","sourcesContent":["import { ComponentTreeNode, ComponentTreeNodeProps } from '@teambit/component-tree';\nimport { ComponentStatusResolver } from '@teambit/component.ui.component-status-resolver';\nimport React, { useContext, useMemo } from 'react';\n\nimport { useLanesContext } from '@teambit/lanes.ui.lanes';\nimport { WorkspaceContext } from './ui/workspace/workspace-context';\n\nexport class ComponentTreeWidget implements ComponentTreeNode {\n  widget = ({ component }: ComponentTreeNodeProps) => {\n    const workspace = useContext(WorkspaceContext);\n    const workspaceComponent = workspace.getComponent(component.id);\n    const lanes = useLanesContext();\n\n    const isInCurrentLane = useMemo(() => {\n      return workspaceComponent?.id && lanes?.isInCurrentLane(workspaceComponent.id);\n    }, [lanes?.currentLane, workspaceComponent?.id]);\n\n    if (!workspaceComponent) return null;\n\n    return (\n      <ComponentStatusResolver\n        status={workspaceComponent.status}\n        issuesCount={workspaceComponent.issuesCount}\n        isInCurrentLane={isInCurrentLane}\n      />\n    );\n  };\n}\n"]}