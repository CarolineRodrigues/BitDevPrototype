{"version":3,"sources":["use-workspace.ts"],"names":["wcComponentFields","WORKSPACE","COMPONENT_SUBSCRIPTION_ADDED","COMPONENT_SUBSCRIPTION_CHANGED","COMPONENT_SUBSCRIPTION_REMOVED","useWorkspace","options","data","subscribeToMore","rest","optionsRef","unSubCompAddition","document","updateQuery","prev","subscriptionData","update","addedComponent","componentAdded","component","componentExists","workspace","components","find","ComponentID","isEqualObj","id","ignoreVersion","setTimeout","current","onComponentAdded","ComponentModel","from","unSubCompChange","updatedComponent","componentChanged","onComponentUpdated","map","name","unSubCompRemoved","idsToRemove","componentRemoved","componentIds","length","onComponentRemoved","fromObject","filter","every","Workspace","undefined"],"mappings":"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","sourcesContent":["import { useEffect, useMemo } from 'react';\nimport { ComponentModel } from '@teambit/component';\nimport useLatest from '@react-hook/latest';\nimport { useDataQuery } from '@teambit/ui-foundation.ui.hooks.use-data-query';\nimport { gql } from '@apollo/client';\nimport { ComponentID, ComponentIdObj } from '@teambit/component-id';\n\nimport { Workspace } from './workspace-model';\n\ntype UseWorkspaceOptions = {\n  onComponentAdded?: (component: ComponentModel[]) => void;\n  onComponentUpdated?: (component: ComponentModel[]) => void;\n  onComponentRemoved?: (compId: ComponentID[]) => void;\n};\ntype RawComponent = { id: ComponentIdObj };\n\nconst wcComponentFields = gql`\n  fragment wcComponentFields on Component {\n    id {\n      name\n      version\n      scope\n    }\n    compositions {\n      identifier\n    }\n    description\n    issuesCount\n    status {\n      isOutdated\n      isNew\n      isInScope\n      isStaged\n      modifyInfo {\n        hasModifiedFiles\n        hasModifiedDependencies\n      }\n      isDeleted\n    }\n    deprecation {\n      isDeprecate\n    }\n    server {\n      env\n      url\n    }\n    env {\n      id\n      icon\n    }\n  }\n`;\n\nconst WORKSPACE = gql`\n  query workspace {\n    workspace {\n      name\n      path\n      icon\n      components {\n        ...wcComponentFields\n      }\n    }\n  }\n  ${wcComponentFields}\n`;\n\nconst COMPONENT_SUBSCRIPTION_ADDED = gql`\n  subscription OnComponentAdded {\n    componentAdded {\n      component {\n        ...wcComponentFields\n      }\n    }\n  }\n  ${wcComponentFields}\n`;\n\nconst COMPONENT_SUBSCRIPTION_CHANGED = gql`\n  subscription OnComponentChanged {\n    componentChanged {\n      component {\n        ...wcComponentFields\n      }\n    }\n  }\n  ${wcComponentFields}\n`;\n\nconst COMPONENT_SUBSCRIPTION_REMOVED = gql`\n  subscription OnComponentRemoved {\n    componentRemoved {\n      componentIds {\n        name\n        version\n        scope\n      }\n    }\n  }\n`;\n\nexport function useWorkspace(options: UseWorkspaceOptions = {}) {\n  const { data, subscribeToMore, ...rest } = useDataQuery(WORKSPACE);\n  const optionsRef = useLatest(options);\n\n  useEffect(() => {\n    const unSubCompAddition = subscribeToMore({\n      document: COMPONENT_SUBSCRIPTION_ADDED,\n      updateQuery: (prev, { subscriptionData }) => {\n        const update = subscriptionData.data;\n        const addedComponent = update?.componentAdded?.component;\n        if (!addedComponent) return prev;\n\n        const componentExists = prev.workspace.components.find((component: any) =>\n          ComponentID.isEqualObj(component.id, addedComponent.id, { ignoreVersion: true })\n        );\n        if (componentExists) return prev;\n\n        // side effect - trigger observers\n        setTimeout(() => optionsRef.current.onComponentAdded?.([ComponentModel.from(addedComponent)]));\n\n        return {\n          ...prev,\n          workspace: {\n            ...prev.workspace,\n            components: [...prev.workspace.components, addedComponent],\n          },\n        };\n      },\n    });\n\n    const unSubCompChange = subscribeToMore({\n      document: COMPONENT_SUBSCRIPTION_CHANGED,\n      updateQuery: (prev, { subscriptionData }) => {\n        const update = subscriptionData.data;\n        if (!update) return prev;\n\n        const updatedComponent = update.componentChanged.component;\n        // side effect - trigger observers\n        setTimeout(() => optionsRef.current.onComponentUpdated?.([ComponentModel.from(updatedComponent)]));\n\n        return {\n          ...prev,\n          workspace: {\n            ...prev.workspace,\n            components: prev.workspace.components.map((component) =>\n              component.id.name === updatedComponent.id.name ? updatedComponent : component\n            ),\n          },\n        };\n      },\n    });\n\n    const unSubCompRemoved = subscribeToMore({\n      document: COMPONENT_SUBSCRIPTION_REMOVED,\n      updateQuery: (prev, { subscriptionData }) => {\n        const idsToRemove: ComponentIdObj[] | undefined = subscriptionData.data?.componentRemoved?.componentIds;\n        if (!idsToRemove || idsToRemove.length === 0) return prev;\n\n        // side effect - trigger observers\n        setTimeout(() => optionsRef.current.onComponentRemoved?.(idsToRemove.map((id) => ComponentID.fromObject(id))));\n\n        return {\n          ...prev,\n          workspace: {\n            ...prev.workspace,\n            components: prev.workspace.components.filter((component: RawComponent) =>\n              idsToRemove.every((id) => !ComponentID.isEqualObj(id, component.id))\n            ),\n          },\n        };\n      },\n    });\n\n    // TODO - sub to component removal\n\n    return () => {\n      unSubCompAddition();\n      unSubCompChange();\n      unSubCompRemoved();\n    };\n  }, [optionsRef]);\n\n  const workspace = useMemo(() => {\n    return data?.workspace ? Workspace.from(data?.workspace) : undefined;\n  }, [data?.workspace]);\n\n  return {\n    workspace,\n    subscribeToMore,\n    ...rest,\n  };\n}\n"]}