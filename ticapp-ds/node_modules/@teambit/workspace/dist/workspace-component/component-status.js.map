{"version":3,"sources":["component-status.ts"],"names":["ComponentStatus","constructor","modifyInfo","isNew","isDeleted","isStaged","isInWorkspace","isInScope","isOutdated","nested","isInCurrentLane","fromLegacy","status","hasModifiedDependencies","modify","hasModifiedFiles","modified","newlyCreated","deleted","staged","notExist","missingFromScope"],"mappings":";;;;;;;AAOO,MAAMA,eAAN,CAAsB;AAC3BC,EAAAA,WAAW;AACT;AACJ;AACA;AACaC,EAAAA,UAJA;AAMT;AACJ;AACA;AACaC,EAAAA,KATA;AAWT;AACJ;AACA;AACaC,EAAAA,SAdA;AAgBT;AACJ;AACA;AACaC,EAAAA,QAnBA;AAqBT;AACJ;AACA;AACaC,EAAAA,aAxBA;AA0BT;AACJ;AACA;AACaC,EAAAA,SA7BA;AA+BT;AACJ;AACA;AACaC,EAAAA,UAlCA;AAoCT;AACJ;AACA;AACaC,EAAAA,MAvCA;AAwCT;AACJ;AACA;AACaC,EAAAA,eA3CA,EA4CT;AAAA,SAxCSR,UAwCT,GAxCSA,UAwCT;AAAA,SAnCSC,KAmCT,GAnCSA,KAmCT;AAAA,SA9BSC,SA8BT,GA9BSA,SA8BT;AAAA,SAzBSC,QAyBT,GAzBSA,QAyBT;AAAA,SApBSC,aAoBT,GApBSA,aAoBT;AAAA,SAfSC,SAeT,GAfSA,SAeT;AAAA,SAVSC,UAUT,GAVSA,UAUT;AAAA,SALSC,MAKT,GALSA,MAKT;AAAA,SADSC,eACT,GADSA,eACT;AAAE;;AAEa,SAAVC,UAAU,CACfC,MADe,EAEfC,uBAFe,EAGfL,UAHe,EAIfE,eAJe,EAKf;AACA,UAAMI,MAAkB,GAAG;AACzBC,MAAAA,gBAAgB,EAAE,CAAC,CAACH,MAAM,CAACI,QADF;AAEzBH,MAAAA;AAFyB,KAA3B;AAIA,WAAO,IAAIb,eAAJ,CACLc,MADK,EAEL,CAAC,CAACF,MAAM,CAACK,YAFJ,EAGL,CAAC,CAACL,MAAM,CAACM,OAHJ,EAIL,CAAC,CAACN,MAAM,CAACO,MAJJ,EAKL,CAACP,MAAM,CAACQ,QALH,EAML,CAACR,MAAM,CAACS,gBANH,EAOLb,UAPK,EAQL,CAAC,CAACI,MAAM,CAACH,MARJ,EASLC,eATK,CAAP;AAWD;;AApE0B","sourcesContent":["import { ComponentStatus as LegacyComponentStatus } from '@teambit/legacy/dist/consumer/component-ops/component-status-loader';\n\nexport type ModifyInfo = {\n  hasModifiedFiles: boolean;\n  hasModifiedDependencies: boolean;\n};\n\nexport class ComponentStatus {\n  constructor(\n    /**\n     * is the component modified.\n     */\n    readonly modifyInfo: ModifyInfo,\n\n    /**\n     * is the new component new.\n     */\n    readonly isNew: boolean,\n\n    /**\n     * is the component deleted from the workspace.\n     */\n    readonly isDeleted: boolean,\n\n    /**\n     * is the component staged.\n     */\n    readonly isStaged: boolean,\n\n    /**\n     * does the component exists in the workspace.\n     */\n    readonly isInWorkspace: boolean,\n\n    /**\n     * does the component exists in the scope.\n     */\n    readonly isInScope: boolean,\n\n    /**\n     * does the component is outdated (pending for update).\n     */\n    readonly isOutdated: boolean,\n\n    /**\n     *  the component is not authored and not imported.\n     */\n    readonly nested?: boolean,\n    /**\n     * does the component exist on the current lane\n     */\n    readonly isInCurrentLane?: boolean\n  ) {}\n\n  static fromLegacy(\n    status: LegacyComponentStatus,\n    hasModifiedDependencies: boolean,\n    isOutdated: boolean,\n    isInCurrentLane?: boolean\n  ) {\n    const modify: ModifyInfo = {\n      hasModifiedFiles: !!status.modified,\n      hasModifiedDependencies,\n    };\n    return new ComponentStatus(\n      modify,\n      !!status.newlyCreated,\n      !!status.deleted,\n      !!status.staged,\n      !status.notExist,\n      !status.missingFromScope,\n      isOutdated,\n      !!status.nested,\n      isInCurrentLane\n    );\n  }\n}\n"]}