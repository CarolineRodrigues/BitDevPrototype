{"version":3,"sources":["workspace-component.ts"],"names":["WorkspaceComponent","Component","constructor","id","head","workspaceState","tags","TagMap","workspace","getStatus","getComponentStatus","getIssues","getComponentIssues","fromComponent","component","state"],"mappings":";;;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAKA;AACO,MAAMA,kBAAN,SAAiCC,sBAAjC,CAA2C;AAChDC,EAAAA,WAAW;AACT;AACJ;AACA;AACaC,EAAAA,EAJA;AAMT;AACJ;AACA;AACaC,EAAAA,IAAiB,GAAG,IATpB;AAWT;AACJ;AACA;AACIC,EAAAA,cAdS;AAgBT;AACJ;AACA;AACaC,EAAAA,IAAY,GAAG,KAAIC,mBAAJ,GAnBf;AAqBT;AACJ;AACA;AACaC,EAAAA,SAxBA,EAyBT;AACA,UAAML,EAAN,EAAUC,IAAV,EAAgBC,cAAhB,EAAgCC,IAAhC,EAAsCE,SAAtC;AADA,SArBSL,EAqBT,GArBSA,EAqBT;AAAA,SAhBSC,IAgBT,GAhBSA,IAgBT;AAAA,SANSE,IAMT,GANSA,IAMT;AAAA,SADSE,SACT,GADSA,SACT;AAED;;AAEc,QAATC,SAAS,GAA6B;AAC1C,WAAO,KAAKD,SAAL,CAAeE,kBAAf,CAAkC,IAAlC,CAAP;AACD;AAED;AACF;AACA;;;AACEC,EAAAA,SAAS,GAAsB;AAC7B,WAAO,KAAKH,SAAL,CAAeI,kBAAf,CAAkC,IAAlC,CAAP;AACD;;AAEmB,SAAbC,aAAa,CAACC,SAAD,EAAuBN,SAAvB,EAA6C;AAC/D,WAAO,IAAIR,kBAAJ,CAAuBc,SAAS,CAACX,EAAjC,EAAqCW,SAAS,CAACV,IAA/C,EAAqDU,SAAS,CAACC,KAA/D,EAAsED,SAAS,CAACR,IAAhF,EAAsFE,SAAtF,CAAP;AACD;;AA3C+C","sourcesContent":["import { Component, ComponentID, Snap, State, TagMap } from '@teambit/component';\nimport { IssuesList } from '@teambit/component-issues';\nimport { Workspace } from '../workspace';\nimport { ComponentStatus } from './component-status';\n\n// TODO: refactor this to a composition rather than to use inheritance\nexport class WorkspaceComponent extends Component {\n  constructor(\n    /**\n     * component ID represented by the `ComponentId` type.\n     */\n    readonly id: ComponentID,\n\n    /**\n     * head version of the component. can be `null` for new components.\n     */\n    readonly head: Snap | null = null,\n\n    /**\n     * state of the component.\n     */\n    workspaceState: State,\n\n    /**\n     * tags of the component.\n     */\n    readonly tags: TagMap = new TagMap(),\n\n    /**\n     * workspace extension.\n     */\n    readonly workspace: Workspace\n  ) {\n    super(id, head, workspaceState, tags, workspace);\n  }\n\n  async getStatus(): Promise<ComponentStatus> {\n    return this.workspace.getComponentStatus(this);\n  }\n\n  /**\n   * get all issues reported on the component.\n   */\n  getIssues(): IssuesList | null {\n    return this.workspace.getComponentIssues(this);\n  }\n\n  static fromComponent(component: Component, workspace: Workspace) {\n    return new WorkspaceComponent(component.id, component.head, component.state, component.tags, workspace);\n  }\n}\n"]}