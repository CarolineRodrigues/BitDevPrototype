"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

require("core-js/modules/es.array.iterator.js");

require("core-js/modules/es.promise.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.WorkspaceUI = void 0;

function _defineProperty2() {
  const data = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

  _defineProperty2 = function () {
    return data;
  };

  return data;
}

function _component() {
  const data = require("@teambit/component");

  _component = function () {
    return data;
  };

  return data;
}

function _componentTree() {
  const data = require("@teambit/component-tree");

  _componentTree = function () {
    return data;
  };

  return data;
}

function _harmony() {
  const data = require("@teambit/harmony");

  _harmony = function () {
    return data;
  };

  return data;
}

function _reactRouter() {
  const data = _interopRequireDefault(require("@teambit/react-router"));

  _reactRouter = function () {
    return data;
  };

  return data;
}

function _uiFoundationUi() {
  const data = require("@teambit/ui-foundation.ui.menu");

  _uiFoundationUi = function () {
    return data;
  };

  return data;
}

function _sidebar() {
  const data = _interopRequireDefault(require("@teambit/sidebar"));

  _sidebar = function () {
    return data;
  };

  return data;
}

function _ui() {
  const data = require("@teambit/ui");

  _ui = function () {
    return data;
  };

  return data;
}

function _graph() {
  const data = require("@teambit/graph");

  _graph = function () {
    return data;
  };

  return data;
}

function _react() {
  const data = _interopRequireDefault(require("react"));

  _react = function () {
    return data;
  };

  return data;
}

function _commandBar() {
  const data = _interopRequireWildcard(require("@teambit/command-bar"));

  _commandBar = function () {
    return data;
  };

  return data;
}

function _designUiSurfacesMenu() {
  const data = require("@teambit/design.ui.surfaces.menu.link-item");

  _designUiSurfacesMenu = function () {
    return data;
  };

  return data;
}

function _componentUi() {
  const data = require("@teambit/component.ui.component-filters");

  _componentUi = function () {
    return data;
  };

  return data;
}

function _componentUi2() {
  const data = require("@teambit/component.ui.component-drawer");

  _componentUi2 = function () {
    return data;
  };

  return data;
}

function _componentTree2() {
  const data = require("./component-tree.widget");

  _componentTree2 = function () {
    return data;
  };

  return data;
}

function _ui2() {
  const data = require("./ui");

  _ui2 = function () {
    return data;
  };

  return data;
}

function _workspace() {
  const data = require("./workspace.aspect");

  _workspace = function () {
    return data;
  };

  return data;
}

function _workspaceUi() {
  const data = require("./workspace.ui.drawer");

  _workspaceUi = function () {
    return data;
  };

  return data;
}

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

class WorkspaceUI {
  constructor(
  /**
   * route slot.
   */
  routeSlot,
  /**
   * component ui extension.
   */
  componentUi,
  /**
   * menu slot
   */
  menuSlot, menuItemSlot, sidebar, sidebarSlot,
  /**
   * sidebar link slot
   */
  sidebarItemSlot, drawerWidgetSlot, drawerComponentsFiltersSlot, commandBarUI, reactRouterUI) {
    this.routeSlot = routeSlot;
    this.componentUi = componentUi;
    this.menuSlot = menuSlot;
    this.menuItemSlot = menuItemSlot;
    this.sidebar = sidebar;
    this.sidebarSlot = sidebarSlot;
    this.sidebarItemSlot = sidebarItemSlot;
    this.drawerWidgetSlot = drawerWidgetSlot;
    this.drawerComponentsFiltersSlot = drawerComponentsFiltersSlot;
    this.commandBarUI = commandBarUI;
    (0, _defineProperty2().default)(this, "setKeyBindHandler", () => {});
    (0, _defineProperty2().default)(this, "registerMenuItem", menuItems => {
      this.menuItemSlot.register(menuItems);
    });
    (0, _defineProperty2().default)(this, "registerMenuRoutes", routes => {
      this.menuSlot.register(routes);
      return this;
    });
    (0, _defineProperty2().default)(this, "setComponents", components => {
      this.componentSearcher.update(components);
    });
    (0, _defineProperty2().default)(this, "registerSidebarLink", (...links) => {
      this.sidebarItemSlot.register(links);
    });
    (0, _defineProperty2().default)(this, "componentSearcher", void 0);
    (0, _defineProperty2().default)(this, "registerDrawerComponentFilters", filters => {
      this.drawerComponentsFiltersSlot.register(filters);
    });
    (0, _defineProperty2().default)(this, "registerDrawerWidgets", widgets => {
      this.drawerWidgetSlot.register(widgets);
    });
    (0, _defineProperty2().default)(this, "menuItems", [{
      category: 'general',
      title: 'Open command bar',
      keyChar: 'mod+k',
      handler: () => {
        var _this$commandBarUI;

        return (_this$commandBarUI = this.commandBarUI) === null || _this$commandBarUI === void 0 ? void 0 : _this$commandBarUI.run('command-bar.open');
      }
    }, {
      category: 'general',
      title: 'Toggle component list',
      keyChar: 'alt+s',
      handler: () => {
        var _this$commandBarUI2;

        return (_this$commandBarUI2 = this.commandBarUI) === null || _this$commandBarUI2 === void 0 ? void 0 : _this$commandBarUI2.run('sidebar.toggle');
      }
    }]);
    this.componentSearcher = new (_commandBar().ComponentSearcher)(reactRouterUI.navigateTo);
  }

  /**
   * register a route to the workspace.
   */
  registerRoutes(routes) {
    this.routeSlot.register(routes);
    return this;
  }

  registerDrawers(...drawers) {
    this.sidebar.registerDrawer(...drawers);
    return this;
  }

  registerSidebarWidget(componentTreeNode) {
    this.sidebarSlot.register(componentTreeNode);
    return this;
  }

  uiRoot() {
    this.commandBarUI.addSearcher(this.componentSearcher);
    this.registerDrawers((0, _workspaceUi().workspaceDrawer)({
      treeWidgets: this.sidebarSlot,
      drawerWidgetSlot: this.drawerWidgetSlot,
      filtersSlot: this.drawerComponentsFiltersSlot
    }));
    const [setKeyBindHandler] = this.commandBarUI.addCommand({
      id: 'sidebar.toggle',
      // TODO - extract to a component!
      handler: () => {},
      displayName: 'Toggle component list',
      keybinding: 'alt+s'
    });
    this.setKeyBindHandler = setKeyBindHandler;
    return {
      routes: [{
        path: '/',
        children: /*#__PURE__*/_react().default.createElement(_ui2().Workspace, {
          menuSlot: this.menuSlot,
          routeSlot: this.routeSlot,
          sidebar: /*#__PURE__*/_react().default.createElement(this.sidebar.render, {
            itemSlot: this.sidebarItemSlot
          }),
          workspaceUI: this,
          onSidebarTogglerChange: this.setKeyBindHandler
        })
      }]
    };
  }

  static async provider([ui, componentUi, sidebar, componentTree, commandBarUI, reactRouterUI, graphUI], config, [routeSlot, menuSlot, menuItemSlot, sidebarSlot, sidebarItemSlot, drawerWidgetSlot, drawerComponentsFiltersSlot]) {
    componentTree.registerTreeNode(new (_componentTree2().ComponentTreeWidget)());
    sidebarSlot.register(new (_componentTree2().ComponentTreeWidget)());
    graphUI.registerComponentWidget(new (_componentTree2().ComponentTreeWidget)().widget);
    const workspaceUI = new WorkspaceUI(routeSlot, componentUi, menuSlot, menuItemSlot, sidebar, sidebarSlot, sidebarItemSlot, drawerWidgetSlot, drawerComponentsFiltersSlot, commandBarUI, reactRouterUI);
    workspaceUI.registerDrawerComponentFilters([_componentUi().DeprecateFilter, _componentUi().EnvsFilter]);
    workspaceUI.registerDrawerWidgets([/*#__PURE__*/_react().default.createElement(_componentUi2().FilterWidget, {
      key: 'workspace-filter-widget'
    }), /*#__PURE__*/_react().default.createElement(_componentUi2().TreeToggleWidget, {
      key: 'workspace-tree-toggle-widget'
    })]);
    ui.registerRoot(workspaceUI.uiRoot.bind(workspaceUI));
    workspaceUI.registerMenuItem(workspaceUI.menuItems);
    workspaceUI.registerSidebarLink(() => /*#__PURE__*/_react().default.createElement(_designUiSurfacesMenu().MenuLinkItem, {
      exact: true,
      href: "/",
      icon: "comps"
    }, "Gallery"));
    workspaceUI.registerMenuRoutes([{
      exact: true,
      path: '/',
      children: /*#__PURE__*/_react().default.createElement(_uiFoundationUi().Menu, {
        menuItemSlot: workspaceUI.menuItemSlot
      })
    }, {
      path: workspaceUI.componentUi.routePath,
      children: workspaceUI.componentUi.getMenu(_workspace().WorkspaceAspect.id)
    }]);
    workspaceUI.registerRoutes([{
      path: workspaceUI.componentUi.routePath,
      children: workspaceUI.componentUi.getComponentUI(_workspace().WorkspaceAspect.id)
    }]);
    return workspaceUI;
  }

}

exports.WorkspaceUI = WorkspaceUI;
(0, _defineProperty2().default)(WorkspaceUI, "dependencies", [_ui().UIAspect, _component().ComponentAspect, _sidebar().default, _componentTree().ComponentTreeAspect, _commandBar().default, _reactRouter().default, _graph().GraphAspect]);
(0, _defineProperty2().default)(WorkspaceUI, "runtime", _ui().UIRuntime);
(0, _defineProperty2().default)(WorkspaceUI, "slots", [_harmony().Slot.withType(), _harmony().Slot.withType(), _harmony().Slot.withType(), _harmony().Slot.withType(), _harmony().Slot.withType(), _harmony().Slot.withType(), _harmony().Slot.withType()]);
var _default = WorkspaceUI;
exports.default = _default;

_workspace().WorkspaceAspect.addRuntime(WorkspaceUI);

//# sourceMappingURL=workspace.ui.runtime.js.map