{"version":3,"sources":["rewire-row.ts"],"names":["RewireRow","legacyCodemodResults","length","totalComps","totalFiles","reduce","acc","curr","changedFiles","chalk","cyan","toString"],"mappings":";;;;;;;;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAKO,SAASA,SAAT,CAAmB;AAAEC,EAAAA;AAAF,CAAnB,EAA6D;AAClE,MAAI,CAACA,oBAAD,IAAyBA,oBAAoB,CAACC,MAArB,GAA8B,CAA3D,EAA8D,OAAO,EAAP;AAC9D,QAAMC,UAAU,GAAGF,oBAAH,aAAGA,oBAAH,uBAAGA,oBAAoB,CAAEC,MAAzC;AACA,QAAME,UAAU,GAAGH,oBAAoB,CAACI,MAArB,CAA4B,CAACC,GAAD,EAAMC,IAAN,KAAe;AAC5D,WAAOD,GAAG,GAAGC,IAAI,CAACC,YAAL,CAAkBN,MAAxB,IAAkC,CAAzC;AACD,GAFkB,EAEhB,CAFgB,CAAnB;AAIA,SAAQ,WAAUO,iBAAMC,IAAN,CAAWP,UAAU,CAACQ,QAAX,EAAX,CAAkC,4BAA2BF,iBAAMC,IAAN,CAC7EN,UAAU,CAACO,QAAX,EAD6E,CAE7E,UAFF;AAGD","sourcesContent":["import { CodemodResult } from '@teambit/legacy/dist/consumer/component-ops/codemod-components';\nimport chalk from 'chalk';\n\ntype RewireRowProps = {\n  legacyCodemodResults?: CodemodResult[];\n};\nexport function RewireRow({ legacyCodemodResults }: RewireRowProps) {\n  if (!legacyCodemodResults || legacyCodemodResults.length < 1) return '';\n  const totalComps = legacyCodemodResults?.length;\n  const totalFiles = legacyCodemodResults.reduce((acc, curr) => {\n    return acc + curr.changedFiles.length || 0;\n  }, 0);\n\n  return `rewired ${chalk.cyan(totalComps.toString())} components and total of ${chalk.cyan(\n    totalFiles.toString()\n  )} files\\n`;\n}\n"]}