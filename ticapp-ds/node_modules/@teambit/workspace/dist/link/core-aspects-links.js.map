{"version":3,"sources":["core-aspects-links.ts"],"names":["CoreAspectsLinks","coreAspectsLinks","verbose","length","chalk","cyan","title","links","map","link","CoreAspectLinkRow","coreAspectLink","join","VerboseCoreAspectLink","RegularCoreAspectLink","id","aspectId","toString","packagePath","linkDetail","to","target","padding","bold","from"],"mappings":";;;;;;;;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAOO,SAASA,gBAAT,CAA0B;AAAEC,EAAAA,gBAAF;AAAoBC,EAAAA,OAAO,GAAG;AAA9B,CAA1B,EAAwF;AAC7F,MAAI,CAACD,gBAAD,IAAqB,CAACA,gBAAgB,CAACE,MAA3C,EAAmD;AACjD,WAAOC,iBAAMC,IAAN,CAAW,6BAAX,CAAP;AACD;;AACD,QAAMC,KAAK,GAAGF,iBAAMC,IAAN,CAAW,oBAAX,CAAd;;AACA,QAAME,KAAK,GAAGN,gBAAgB,CAACO,GAAjB,CAAsBC,IAAD,IAAUC,iBAAiB,CAAC;AAAEC,IAAAA,cAAc,EAAEF,IAAlB;AAAwBP,IAAAA;AAAxB,GAAD,CAAhD,EAAqFU,IAArF,CAA0F,IAA1F,CAAd;AACA,SAAQ,GAAEN,KAAM,KAAIC,KAAM,EAA1B;AACD;;AAMD,SAASG,iBAAT,CAA2B;AAAEC,EAAAA,cAAF;AAAkBT,EAAAA,OAAO,GAAG;AAA5B,CAA3B,EAAqF;AACnF,MAAIA,OAAJ,EAAa,OAAOW,qBAAqB,CAAC;AAAEF,IAAAA;AAAF,GAAD,CAA5B;AACb,SAAOG,qBAAqB,CAAC;AAAEH,IAAAA;AAAF,GAAD,CAA5B;AACD;;AAKD,SAASG,qBAAT,CAA+B;AAAEH,EAAAA;AAAF,CAA/B,EAA+E;AAC7E,QAAMI,EAAE,GAAGJ,cAAc,CAACK,QAAf,CAAwBC,QAAxB,EAAX;AACA,QAAMC,WAAW,GAAG,0DAAyBP,cAAc,CAACQ,UAAf,CAA0BC,EAAnD,CAApB;AACA,SAAO,wBAAQ;AAAEd,IAAAA,KAAK,EAAES,EAAT;AAAaM,IAAAA,MAAM,EAAEH,WAArB;AAAkCI,IAAAA,OAAO,EAAE;AAA3C,GAAR,CAAP;AACD;;AAKD,SAAST,qBAAT,CAA+B;AAAEF,EAAAA;AAAF,CAA/B,EAA+E;AAC7E,QAAMI,EAAE,GAAGJ,cAAc,CAACK,QAAf,CAAwBC,QAAxB,EAAX;;AACA,QAAMX,KAAK,GAAGF,iBAAMmB,IAAN,CAAWlB,IAAX,CAAgBU,EAAhB,CAAd;;AACA,QAAMN,IAAI,GAAG,+BAAe;AAC1Be,IAAAA,IAAI,EAAEb,cAAc,CAACQ,UAAf,CAA0BK,IADN;AAE1BJ,IAAAA,EAAE,EAAET,cAAc,CAACQ,UAAf,CAA0BC;AAFJ,GAAf,CAAb;AAIA,SAAQ,GAAEd,KAAM,KAAIG,IAAK,EAAzB;AACD","sourcesContent":["import { CoreAspectLinkResult } from '@teambit/dependency-resolver';\nimport chalk from 'chalk';\n\nimport { getPackageNameFromTarget } from './get-package-name-from-target';\nimport { LinkRow, VerboseLinkRow } from './link-row';\n\ntype CoreAspectsLinksProps = {\n  coreAspectsLinks?: CoreAspectLinkResult[];\n  verbose: boolean;\n};\n\nexport function CoreAspectsLinks({ coreAspectsLinks, verbose = false }: CoreAspectsLinksProps) {\n  if (!coreAspectsLinks || !coreAspectsLinks.length) {\n    return chalk.cyan('No core aspects were linked');\n  }\n  const title = chalk.cyan('Core aspects links');\n  const links = coreAspectsLinks.map((link) => CoreAspectLinkRow({ coreAspectLink: link, verbose })).join('\\n');\n  return `${title}\\n${links}`;\n}\n\ntype CoreAspectLinkProps = {\n  coreAspectLink: CoreAspectLinkResult;\n  verbose: boolean;\n};\nfunction CoreAspectLinkRow({ coreAspectLink, verbose = false }: CoreAspectLinkProps) {\n  if (verbose) return VerboseCoreAspectLink({ coreAspectLink });\n  return RegularCoreAspectLink({ coreAspectLink });\n}\n\ntype RegularCoreAspectLinkProps = {\n  coreAspectLink: CoreAspectLinkResult;\n};\nfunction RegularCoreAspectLink({ coreAspectLink }: RegularCoreAspectLinkProps) {\n  const id = coreAspectLink.aspectId.toString();\n  const packagePath = getPackageNameFromTarget(coreAspectLink.linkDetail.to);\n  return LinkRow({ title: id, target: packagePath, padding: 50 });\n}\n\ntype VerboseCoreAspectLinkProps = {\n  coreAspectLink: CoreAspectLinkResult;\n};\nfunction VerboseCoreAspectLink({ coreAspectLink }: VerboseCoreAspectLinkProps) {\n  const id = coreAspectLink.aspectId.toString();\n  const title = chalk.bold.cyan(id);\n  const link = VerboseLinkRow({\n    from: coreAspectLink.linkDetail.from,\n    to: coreAspectLink.linkDetail.to,\n  });\n  return `${title}\\n${link}`;\n}\n"]}