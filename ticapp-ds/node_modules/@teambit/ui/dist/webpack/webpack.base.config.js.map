{"version":3,"sources":["webpack.base.config.ts"],"names":["baseStyleLoadersOptions","injectingLoader","MiniCssExtractPlugin","loader","cssLoaderPath","require","resolve","postCssLoaderPath","postCssConfig","moduleFileExtensions","shouldUseSourceMap","process","env","GENERATE_SOURCEMAP","imageInlineSizeLimit","parseInt","IMAGE_INLINE_SIZE_LIMIT","isEnvProduction","createWebpackConfig","workspaceDir","entryFiles","publicDir","isEnvProductionProfile","argv","includes","stats","children","errorDetails","mode","entry","main","output","path","join","filename","chunkFilename","extensions","map","ext","alias","react","fallback","module","dgram","dns","fs","stream","http2","net","tls","child_process","strictExportPresence","rules","test","fullySpecified","oneOf","stylesRegexps","cssNoModulesRegex","use","cssLoaderOpts","importLoaders","sourceMap","sideEffects","type","parser","dataUrlCondition","maxSize","options","babelrc","configFile","customize","cacheDirectory","cacheCompression","compact","cssModuleRegex","modules","getLocalIdent","getCSSModuleLocalIdent","sassNoModuleRegex","preProcessOptions","resolveUrlLoaderPath","preProcessorPath","sassModuleRegex","lessNoModuleRegex","lessModuleRegex","exclude","plugins","WebpackManifestPlugin","fileName","generate","seed","files","entrypoints","manifestFiles","reduce","manifest","file","name","entrypointFiles","filter","endsWith","webpack","IgnorePlugin","resourceRegExp","contextRegExp","WorkboxWebpackPlugin","GenerateSW","clientsClaim","maximumFileSizeToCacheInBytes","navigateFallback","navigateFallbackDenylist","RegExp","Boolean","performance"],"mappings":"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","sourcesContent":["import { merge } from 'lodash';\nimport webpack, { Configuration } from 'webpack';\nimport MiniCssExtractPlugin from 'mini-css-extract-plugin';\nimport { WebpackManifestPlugin } from 'webpack-manifest-plugin';\nimport WorkboxWebpackPlugin from 'workbox-webpack-plugin';\nimport getCSSModuleLocalIdent from 'react-dev-utils/getCSSModuleLocalIdent';\nimport path from 'path';\nimport * as stylesRegexps from '@teambit/webpack.modules.style-regexps';\nimport { generateStyleLoaders } from '@teambit/webpack.modules.generate-style-loaders';\nimport { postCssConfig } from './postcss.config';\n\nconst baseStyleLoadersOptions = {\n  injectingLoader: MiniCssExtractPlugin.loader,\n  cssLoaderPath: require.resolve('css-loader'),\n  postCssLoaderPath: require.resolve('postcss-loader'),\n  postCssConfig,\n};\n\nconst moduleFileExtensions = [\n  'web.mjs',\n  'mjs',\n  'web.js',\n  'js',\n  'web.ts',\n  'ts',\n  'web.tsx',\n  'tsx',\n  'json',\n  'web.jsx',\n  'jsx',\n];\n\n// Source maps are resource heavy and can cause out of memory issue for large source files.\nconst shouldUseSourceMap = process.env.GENERATE_SOURCEMAP !== 'false';\n\nconst imageInlineSizeLimit = parseInt(process.env.IMAGE_INLINE_SIZE_LIMIT || '10000');\n\nconst isEnvProduction = true;\n\n// This is the production and development configuration.\n// It is focused on developer experience, fast rebuilds, and a minimal bundle.\n// eslint-disable-next-line complexity\nexport default function createWebpackConfig(\n  workspaceDir: string,\n  entryFiles: string[],\n  publicDir = 'public'\n): Configuration {\n  // Variable used for enabling profiling in Production\n  // passed into alias object. Uses a flag if passed into the build command\n  const isEnvProductionProfile = process.argv.includes('--profile');\n\n  // We will provide `paths.publicUrlOrPath` to our app\n  // as %PUBLIC_URL% in `index.html` and `process.env.PUBLIC_URL` in JavaScript.\n  // Omit trailing slash as %PUBLIC_URL%/xyz looks better than %PUBLIC_URL%xyz.\n  // Get environment variables to inject into our app.\n  // const env = getClientEnvironment(publicUrlOrPath.slice(0, -1));\n\n  return {\n    stats: {\n      children: true,\n      errorDetails: true,\n    },\n    mode: 'production',\n    entry: {\n      main: entryFiles,\n    },\n\n    output: {\n      // The build folder.\n      path: path.join(workspaceDir, publicDir), // default value\n\n      filename: 'static/js/[name].[contenthash:8].js',\n      // TODO: remove this when upgrading to webpack 5\n      // futureEmitAssets: true,\n      // There are also additional JS chunk files if you use code splitting.\n      chunkFilename: 'static/js/[name].[contenthash:8].chunk.js',\n      // this defaults to 'window', but by setting it to 'this' then\n      // module chunks which are built will work in web workers as well.\n      // Commented out to use the default (self) as according to tobias with webpack5 self is working with workers as well\n      // globalObject: 'this',\n    },\n\n    resolve: {\n      // These are the reasonable defaults supported by the Node ecosystem.\n      // We also include JSX as a common component filename extension to support\n      // some tools, although we do not recommend using it, see:\n      // https://github.com/facebook/create-react-app/issues/290\n      // `web` extension prefixes have been added for better support\n      // for React Native Web.\n      extensions: moduleFileExtensions.map((ext) => `.${ext}`),\n\n      alias: {\n        // TODO: @uri please remember to remove after publishing evangelist and base-ui\n        react: require.resolve('react'),\n        'react-dom/server': require.resolve('react-dom/server'),\n        'react-dom': require.resolve('react-dom'),\n        // Allows for better profiling with ReactDevTools\n        ...(isEnvProductionProfile && {\n          'react-dom$': 'react-dom/profiling',\n          'scheduler/tracing': 'scheduler/tracing-profiling',\n        }),\n      },\n      fallback: {\n        module: false,\n        path: require.resolve('path-browserify'),\n        dgram: false,\n        dns: false,\n        fs: false,\n        stream: false,\n        http2: false,\n        net: false,\n        tls: false,\n        child_process: false,\n      },\n    },\n    module: {\n      strictExportPresence: true,\n      rules: [\n        {\n          test: /\\.m?js/,\n          resolve: {\n            fullySpecified: false,\n          },\n        },\n        // Disable require.ensure as it's not a standard language feature.\n        // { parser: { requireEnsure: false } },\n        {\n          // \"oneOf\" will traverse all following loaders until one will\n          // match the requirements. When no loader matches it will fall\n          // back to the \"file\" loader at the end of the loader list.\n          oneOf: [\n            // \"postcss\" loader applies autoprefixer to our CSS.\n            // \"css\" loader resolves paths in CSS and adds assets as dependencies.\n            // \"style\" loader turns CSS into JS modules that inject <style> tags.\n            // In production, we use MiniCSSExtractPlugin to extract that CSS\n            // to a file, but in development \"style\" loader enables hot editing\n            // of CSS.\n            // By default we support CSS Modules with the extension .module.css\n            {\n              test: stylesRegexps.cssNoModulesRegex,\n              use: generateStyleLoaders(\n                merge({}, baseStyleLoadersOptions, {\n                  cssLoaderOpts: {\n                    importLoaders: 1,\n                    sourceMap: isEnvProduction || shouldUseSourceMap,\n                  },\n                })\n              ),\n              // Don't consider CSS imports dead code even if the\n              // containing package claims to have no side effects.\n              // Remove this when webpack adds a warning or an error for this.\n              // See https://github.com/webpack/webpack/issues/6571\n              sideEffects: true,\n            },\n            // \"url\" loader works like \"file\" loader except that it embeds assets\n            // smaller than specified limit in bytes as data URLs to avoid requests.\n            // A missing `test` is equivalent to a match.\n            {\n              test: [/\\.bmp$/, /\\.gif$/, /\\.jpe?g$/, /\\.png$/, /\\.svg$/],\n              type: 'asset',\n              parser: {\n                dataUrlCondition: {\n                  maxSize: imageInlineSizeLimit,\n                },\n              },\n            },\n            // Process application JS with Babel.\n            // The preset includes JSX, Flow, TypeScript, and some ESnext features.\n            {\n              test: /\\.(js|mjs|jsx|ts|tsx)$/,\n              loader: require.resolve('babel-loader'),\n              options: {\n                babelrc: false,\n                configFile: false,\n                customize: require.resolve('babel-preset-react-app/webpack-overrides'),\n                // This is a feature of `babel-loader` for webpack (not Babel itself).\n                // It enables caching results in ./node_modules/.cache/babel-loader/\n                // directory for faster rebuilds.\n                cacheDirectory: true,\n                // See #6846 for context on why cacheCompression is disabled\n                cacheCompression: false,\n                compact: isEnvProduction,\n              },\n            },\n            // Process any JS outside of the app with Babel.\n            // Unlike the application JS, we only compile the standard ES features.\n            // Probably not needed in our use case\n            // {\n            //   test: /\\.(js|mjs)$/,\n            //   exclude: /@babel(?:\\/|\\\\{1,2})runtime/,\n            //   loader: require.resolve('babel-loader'),\n            //   options: {\n            //     babelrc: false,\n            //     configFile: false,\n            //     compact: false,\n            //     presets: [[require.resolve('babel-preset-react-app/dependencies'), { helpers: true }]],\n            //     cacheDirectory: true,\n            //     // See #6846 for context on why cacheCompression is disabled\n            //     cacheCompression: false,\n\n            //     // Babel sourcemaps are needed for debugging into node_modules\n            //     // code.  Without the options below, debuggers like VSCode\n            //     // show incorrect code and set breakpoints on the wrong lines.\n            //     sourceMaps: shouldUseSourceMap,\n            //     inputSourceMap: shouldUseSourceMap,\n            //   },\n            // },\n\n            // Adds support for CSS Modules (https://github.com/css-modules/css-modules)\n            // using the extension .module.css\n            {\n              test: stylesRegexps.cssModuleRegex,\n              use: generateStyleLoaders(\n                merge({}, baseStyleLoadersOptions, {\n                  cssLoaderOpts: {\n                    importLoaders: 1,\n                    sourceMap: isEnvProduction || shouldUseSourceMap,\n                    modules: {\n                      getLocalIdent: getCSSModuleLocalIdent,\n                    },\n                  },\n                  shouldUseSourceMap: isEnvProduction || shouldUseSourceMap,\n                })\n              ),\n            },\n            // Opt-in support for SASS (using .scss or .sass extensions).\n            // By default we support SASS Modules with the\n            // extensions .module.scss or .module.sass\n            {\n              test: stylesRegexps.sassNoModuleRegex,\n              use: generateStyleLoaders(\n                merge({}, baseStyleLoadersOptions, {\n                  cssLoaderOpts: {\n                    importLoaders: 3,\n                    sourceMap: isEnvProduction || shouldUseSourceMap,\n                  },\n                  shouldUseSourceMap: isEnvProduction || shouldUseSourceMap,\n                  preProcessOptions: {\n                    resolveUrlLoaderPath: require.resolve('resolve-url-loader'),\n                    preProcessorPath: require.resolve('sass-loader'),\n                  },\n                })\n              ),\n              // Don't consider CSS imports dead code even if the\n              // containing package claims to have no side effects.\n              // Remove this when webpack adds a warning or an error for this.\n              // See https://github.com/webpack/webpack/issues/6571\n              sideEffects: true,\n            },\n            // Adds support for CSS Modules, but using SASS\n            // using the extension .module.scss or .module.sass\n            {\n              test: stylesRegexps.sassModuleRegex,\n              use: generateStyleLoaders(\n                merge({}, baseStyleLoadersOptions, {\n                  cssLoaderOpts: {\n                    importLoaders: 3,\n                    sourceMap: isEnvProduction || shouldUseSourceMap,\n                    modules: {\n                      getLocalIdent: getCSSModuleLocalIdent,\n                    },\n                  },\n                  shouldUseSourceMap: isEnvProduction || shouldUseSourceMap,\n                  preProcessOptions: {\n                    resolveUrlLoaderPath: require.resolve('resolve-url-loader'),\n                    preProcessorPath: require.resolve('sass-loader'),\n                  },\n                })\n              ),\n            },\n            {\n              test: stylesRegexps.lessNoModuleRegex,\n              use: generateStyleLoaders(\n                merge({}, baseStyleLoadersOptions, {\n                  cssLoaderOpts: {\n                    importLoaders: 1,\n                    sourceMap: isEnvProduction || shouldUseSourceMap,\n                  },\n                  shouldUseSourceMap: isEnvProduction || shouldUseSourceMap,\n                  preProcessOptions: {\n                    resolveUrlLoaderPath: require.resolve('resolve-url-loader'),\n                    preProcessorPath: require.resolve('less-loader'),\n                  },\n                })\n              ),\n              // Don't consider CSS imports dead code even if the\n              // containing package claims to have no side effects.\n              // Remove this when webpack adds a warning or an error for this.\n              // See https://github.com/webpack/webpack/issues/6571\n              sideEffects: true,\n            },\n            {\n              test: stylesRegexps.lessModuleRegex,\n              use: generateStyleLoaders(\n                merge({}, baseStyleLoadersOptions, {\n                  cssLoaderOpts: {\n                    importLoaders: 1,\n                    sourceMap: isEnvProduction || shouldUseSourceMap,\n                    modules: {\n                      getLocalIdent: getCSSModuleLocalIdent,\n                    },\n                  },\n                  shouldUseSourceMap: isEnvProduction || shouldUseSourceMap,\n                  preProcessOptions: {\n                    resolveUrlLoaderPath: require.resolve('resolve-url-loader'),\n                    preProcessorPath: require.resolve('less-loader'),\n                  },\n                })\n              ),\n            },\n            // \"file\" loader makes sure those assets get served by WebpackDevServer.\n            // When you `import` an asset, you get its (virtual) filename.\n            // In production, they would get copied to the `build` folder.\n            // This loader doesn't use a \"test\" so it will catch all modules\n            // that fall through the other loaders.\n            {\n              // Exclude `js` files to keep \"css\" loader working as it injects\n              // its runtime that would otherwise be processed through \"file\" loader.\n              // Also exclude `html` and `json` extensions so they get processed\n              // by webpacks internal loaders.\n              exclude: [/\\.(js|mjs|jsx|ts|tsx)$/, /\\.html$/, /\\.json$/, /\\.css$/],\n              type: 'asset/resource',\n            },\n            // ** STOP ** Are you adding a new loader?\n            // Make sure to add the new loader(s) before the \"file\" loader.\n          ],\n        },\n      ],\n    },\n    plugins: [\n      new MiniCssExtractPlugin({\n        // Options similar to the same options in webpackOptions.output\n        // both options are optional\n        filename: 'static/css/[name].[contenthash:8].css',\n        chunkFilename: 'static/css/[name].[contenthash:8].chunk.css',\n      }),\n      // Generate an asset manifest file with the following content:\n      // - \"files\" key: Mapping of all asset filenames to their corresponding\n      //   output file so that tools can pick it up without having to parse\n      //   `index.html`\n      //   can be used to reconstruct the HTML if necessary\n      new WebpackManifestPlugin({\n        fileName: 'asset-manifest.json',\n        generate: (seed, files, entrypoints) => {\n          const manifestFiles = files.reduce((manifest, file) => {\n            manifest[file.name] = file.path;\n            return manifest;\n          }, seed);\n          const entrypointFiles = entrypoints.main.filter((fileName) => !fileName.endsWith('.map'));\n\n          // @ts-ignore - https://github.com/shellscape/webpack-manifest-plugin/issues/276\n          return {\n            files: manifestFiles,\n            entrypoints: entrypointFiles,\n          } as Record<string, string>;\n        },\n      }),\n      // Moment.js is an extremely popular library that bundles large locale files\n      // by default due to how webpack interprets its code. This is a practical\n      // solution that requires the user to opt into importing specific locales.\n      // https://github.com/jmblog/how-to-optimize-momentjs-with-webpack\n      // You can remove this if you don't use Moment.js:\n      new webpack.IgnorePlugin({\n        resourceRegExp: /^\\.\\/locale$/,\n        contextRegExp: /moment$/,\n      }),\n      // Generate a service worker script that will precache, and keep up to date,\n      // the HTML & assets that are part of the webpack build.\n      isEnvProduction &&\n        new WorkboxWebpackPlugin.GenerateSW({\n          clientsClaim: true,\n          maximumFileSizeToCacheInBytes: 5000000,\n          exclude: [/\\.map$/, /asset-manifest\\.json$/],\n          // importWorkboxFrom: 'cdn',\n          navigateFallback: 'public/index.html',\n          navigateFallbackDenylist: [\n            // Exclude URLs starting with /_, as they're likely an API call\n            new RegExp('^/_'),\n            // Exclude any URLs whose last part seems to be a file extension\n            // as they're likely a resource and not a SPA route.\n            // URLs containing a \"?\" character won't be blacklisted as they're likely\n            // a route with query params (e.g. auth callbacks).\n            new RegExp('/[^/?]+\\\\.[^/]+$'),\n          ],\n        }),\n    ].filter(Boolean),\n    // Some libraries import Node modules but don't use them in the browser.\n    // Tell webpack to provide empty mocks for them so importing them works.\n    // Turn off performance processing because we utilize\n    // our own hints via the FileSizeReporter\n    performance: false,\n  };\n}\n"]}