{"version":3,"sources":["ui.main.runtime.ts"],"names":["UiMain","constructor","pubsub","config","graphql","uiRootSlot","express","preStartSlot","onStartSlot","publicDirOverwriteSlot","buildMethodOverwriteSlot","componentExtension","cache","logger","harmony","startPluginSlot","targetHost","targetPort","uiRoot","UiServerStartedEvent","Date","now","publicDir","overwriteFn","getOverwritePublic","hasDir","startsWith","substring","getUiByName","name","roots","toArray","root","find","build","uiRootName","debug","maybeUiRoot","getUi","UnknownUI","possibleUis","ssr","buildOptions","mainEntry","generateRoot","resolveAspects","UIRuntime","browserConfig","path","ssrConfig","filter","x","compiler","compilerRun","run","bind","results","UnknownBuildError","hasErrors","clearConsole","Error","toString","registerStartPlugin","startPlugin","register","initiatePlugins","options","plugins","values","Promise","all","map","plugin","initiate","createRuntime","pattern","dev","port","rebuild","verbose","isHost","setHostPriority","uiServer","UIServer","create","uiRootExtension","ui","startPlugins","addSignalListener","portRange","buildUI","start","pub","UIAspect","id","createUiServerStartedEvent","host","process","on","exit","getPort","selectPort","registerPreStart","preStartFn","registerOnStart","onStartFn","registerBuildUIOverwrite","fn","registerPublicDirOverwrite","getOverwriteBuildFn","buildMethodOverwrite","undefined","overwritePublic","invokePreStart","preStartOpts","promises","invokeOnStart","registerUiRoot","get","uis","length","priority","getUiName","createLink","aspectDefs","rootExtensionName","runtimeName","rootAspect","contents","toObject","filepath","__dirname","fs","existsSync","outputFileSync","from","to","usedPorts","Port","set","concat","overwrite","hash","buildIfChanged","buildIfNoBundle","buildUiHash","runtime","aspects","sort","a","b","aspectPath","aspect","runtimePath","join","force","hashed","console","chalk","cyan","configFile","stdout","write","platform","output","pathExistsSync","publicUrl","provider","cli","loggerMain","proxyGetterSlot","createLogger","StartCmd","UIBuildCmd","MainRuntime","PubsubAspect","CLIAspect","GraphqlAspect","ExpressAspect","ComponentAspect","CacheAspect","LoggerAspect","Slot","withType","addRuntime"],"mappings":"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","sourcesContent":["import type { AspectMain } from '@teambit/aspect';\nimport { ComponentType } from 'react';\nimport { AspectDefinition } from '@teambit/aspect-loader';\nimport { CacheAspect, CacheMain } from '@teambit/cache';\nimport { CLIAspect, CLIMain, MainRuntime } from '@teambit/cli';\nimport type { ComponentMain } from '@teambit/component';\nimport { ComponentAspect } from '@teambit/component';\nimport { ExpressAspect, ExpressMain } from '@teambit/express';\nimport type { GraphqlMain } from '@teambit/graphql';\nimport { GraphqlAspect } from '@teambit/graphql';\nimport chalk from 'chalk';\nimport { Slot, SlotRegistry, Harmony } from '@teambit/harmony';\nimport { Logger, LoggerAspect, LoggerMain } from '@teambit/logger';\nimport PubsubAspect, { PubsubMain } from '@teambit/pubsub';\nimport { sha1 } from '@teambit/legacy/dist/utils';\nimport fs from 'fs-extra';\nimport { Port } from '@teambit/toolbox.network.get-port';\nimport { join, resolve } from 'path';\nimport { promisify } from 'util';\nimport webpack from 'webpack';\nimport { UiServerStartedEvent } from './events';\nimport { createRoot } from './create-root';\nimport { UnknownUI, UnknownBuildError } from './exceptions';\nimport { StartCmd } from './start.cmd';\nimport { UIBuildCmd } from './ui-build.cmd';\nimport { UIRoot } from './ui-root';\nimport { UIServer } from './ui-server';\nimport { UIAspect, UIRuntime } from './ui.aspect';\nimport createWebpackConfig from './webpack/webpack.browser.config';\nimport createSsrWebpackConfig from './webpack/webpack.ssr.config';\nimport { StartPlugin, StartPluginOptions } from './start-plugin';\n\nexport type UIDeps = [PubsubMain, CLIMain, GraphqlMain, ExpressMain, ComponentMain, CacheMain, LoggerMain, AspectMain];\n\nexport type UIRootRegistry = SlotRegistry<UIRoot>;\n\nexport type PreStart = (preStartOpts: PreStartOpts) => Promise<void>;\n\nexport type PreStartOpts = { skipCompilation?: boolean };\n\nexport type OnStart = () => Promise<undefined | ComponentType<{}>>;\n\nexport type StartPluginSlot = SlotRegistry<StartPlugin>;\n\nexport type PublicDirOverwrite = (uiRoot: UIRoot) => Promise<string | undefined>;\n\nexport type BuildMethodOverwrite = (name: string, uiRoot: UIRoot, rebuild?: boolean) => Promise<string>;\n\nexport type PreStartSlot = SlotRegistry<PreStart>;\n\nexport type OnStartSlot = SlotRegistry<OnStart>;\n\nexport type PublicDirOverwriteSlot = SlotRegistry<PublicDirOverwrite>;\n\nexport type BuildMethodOverwriteSlot = SlotRegistry<BuildMethodOverwrite>;\n\nexport type UIConfig = {\n  /**\n   * port for the UI root to use.\n   */\n  port?: number;\n\n  /**\n   * port range for the UI root to use.\n   */\n  portRange: [number, number];\n\n  /**\n   * host for the UI root\n   */\n  host: string;\n\n  /**\n   * directory in workspace to use for public assets.\n   * always relative to the workspace root directory.\n   */\n  publicDir: string;\n\n  /** the url to display when server is listening. Note that bit does not provide proxying to this url */\n  publicUrl?: string;\n};\n\nexport type RuntimeOptions = {\n  /**\n   * determine whether to initiate on verbose mode.\n   */\n  verbose?: boolean;\n\n  /**\n   * name of the UI root to load.\n   */\n  uiRootName?: string;\n\n  /**\n   * component selector pattern to load.\n   */\n  pattern?: string;\n\n  /**\n   * determine whether to start a dev server (defaults to false).\n   */\n  dev?: boolean;\n\n  /**\n   * port of the config.\n   */\n  port?: number;\n\n  /**\n   * determine whether to rebuild the UI before start.\n   */\n  rebuild?: boolean;\n};\n\nexport class UiMain {\n  constructor(\n    /**\n     * Pubsub extension.\n     */\n    private pubsub: PubsubMain,\n\n    private config: UIConfig,\n\n    /**\n     * graphql extension.\n     */\n    private graphql: GraphqlMain,\n\n    /**\n     * slot registry of ui roots.\n     */\n    private uiRootSlot: UIRootRegistry,\n\n    /**\n     * express extension.\n     */\n    private express: ExpressMain,\n\n    /**\n     * pre-start slot\n     */\n    private preStartSlot: PreStartSlot,\n\n    /**\n     * on start slot\n     */\n    private onStartSlot: OnStartSlot,\n\n    /**\n     * Overwrite the public dir Slot\n     */\n    private publicDirOverwriteSlot: PublicDirOverwriteSlot,\n\n    /**\n     * Overwrite the build ui method\n     */\n    private buildMethodOverwriteSlot: BuildMethodOverwriteSlot,\n\n    /**\n     * component extension.\n     */\n    private componentExtension: ComponentMain,\n\n    /**\n     * ui logger instance.\n     */\n    private cache: CacheMain,\n\n    /**\n     * ui logger instance.\n     */\n    private logger: Logger,\n\n    private harmony: Harmony,\n\n    private startPluginSlot: StartPluginSlot\n  ) {}\n\n  async publicDir(uiRoot: UIRoot) {\n    const overwriteFn = this.getOverwritePublic();\n    if (overwriteFn) {\n      const hasDir = await overwriteFn(uiRoot);\n      if (hasDir) return hasDir;\n    }\n\n    if (this.config.publicDir.startsWith('/')) {\n      return this.config.publicDir.substring(1);\n    }\n\n    return this.config.publicDir;\n  }\n\n  private getUiByName(name: string) {\n    const roots = this.uiRootSlot.toArray();\n    const [, root] =\n      roots.find(([, uiRoot]) => {\n        return uiRoot.name === name;\n      }) || [];\n\n    return root;\n  }\n\n  /**\n   * create a build of the given UI root.\n   */\n  async build(uiRootName?: string): Promise<webpack.MultiStats | undefined> {\n    // TODO: change to MultiStats from webpack once they export it in their types\n    this.logger.debug(`build, uiRootName: \"${uiRootName}\"`);\n    const maybeUiRoot = this.getUi(uiRootName);\n\n    if (!maybeUiRoot) throw new UnknownUI(uiRootName, this.possibleUis());\n    const [name, uiRoot] = maybeUiRoot;\n\n    // TODO: @uri refactor all dev server related code to use the bundler extension instead.\n    const ssr = uiRoot.buildOptions?.ssr || false;\n    const mainEntry = await this.generateRoot(await uiRoot.resolveAspects(UIRuntime.name), name);\n\n    const browserConfig = createWebpackConfig(uiRoot.path, [mainEntry], uiRoot.name, await this.publicDir(uiRoot));\n    const ssrConfig = ssr && createSsrWebpackConfig(uiRoot.path, [mainEntry], await this.publicDir(uiRoot));\n\n    const config = [browserConfig, ssrConfig].filter((x) => !!x) as webpack.Configuration[];\n    const compiler = webpack(config);\n    this.logger.debug(`build, uiRootName: \"${uiRootName}\" running webpack`);\n    const compilerRun = promisify(compiler.run.bind(compiler));\n    const results = await compilerRun();\n    this.logger.debug(`build, uiRootName: \"${uiRootName}\" completed webpack`);\n    if (!results) throw new UnknownBuildError();\n    if (results?.hasErrors()) {\n      this.clearConsole();\n      throw new Error(results?.toString());\n    }\n\n    return results;\n  }\n\n  registerStartPlugin(startPlugin: StartPlugin) {\n    this.startPluginSlot.register(startPlugin);\n    return this;\n  }\n\n  private async initiatePlugins(options: StartPluginOptions) {\n    const plugins = this.startPluginSlot.values();\n    await Promise.all(plugins.map((plugin) => plugin.initiate(options)));\n    return plugins;\n  }\n\n  /**\n   * create a Bit UI runtime.\n   */\n  async createRuntime({ uiRootName, pattern, dev, port, rebuild, verbose }: RuntimeOptions) {\n    const maybeUiRoot = this.getUi(uiRootName);\n    if (!maybeUiRoot) throw new UnknownUI(uiRootName, this.possibleUis());\n\n    const [name, uiRoot] = maybeUiRoot;\n\n    const plugins = await this.initiatePlugins({\n      verbose,\n      pattern,\n    });\n\n    if (this.componentExtension.isHost(name)) this.componentExtension.setHostPriority(name);\n\n    const uiServer = UIServer.create({\n      express: this.express,\n      graphql: this.graphql,\n      uiRoot,\n      uiRootExtension: name,\n      ui: this,\n      logger: this.logger,\n      publicDir: await this.publicDir(uiRoot),\n      startPlugins: plugins,\n    });\n\n    // Adding signal listeners to make sure we immediately close the process on sigint / sigterm (otherwise webpack dev server closing will take time)\n    this.addSignalListener();\n    if (dev) {\n      await uiServer.dev({ portRange: port || this.config.portRange });\n    } else {\n      await this.buildUI(name, uiRoot, rebuild);\n      await uiServer.start({ portRange: port || this.config.portRange });\n    }\n\n    this.pubsub.pub(UIAspect.id, this.createUiServerStartedEvent(this.config.host, uiServer.port, uiRoot));\n\n    return uiServer;\n  }\n\n  private addSignalListener() {\n    process.on('SIGTERM', () => {\n      process.exit();\n    });\n\n    process.on('SIGINT', () => {\n      process.exit();\n    });\n  }\n\n  async getPort(port?: number): Promise<number> {\n    if (port) return port;\n    return this.config.port || this.selectPort();\n  }\n\n  /**\n   * Events\n   */\n  private createUiServerStartedEvent = (targetHost, targetPort, uiRoot) => {\n    return new UiServerStartedEvent(Date.now(), targetHost, targetPort, uiRoot);\n  };\n\n  /**\n   * pre-start events are triggered and *completed* before the webserver started.\n   * (the promise is awaited)\n   */\n  registerPreStart(preStartFn: PreStart) {\n    this.preStartSlot.register(preStartFn);\n  }\n\n  /**\n   * bind to ui server start event.\n   */\n  registerOnStart(onStartFn: OnStart) {\n    this.onStartSlot.register(onStartFn);\n    return this;\n  }\n\n  /**\n   * overwrite the build ui function\n   */\n  registerBuildUIOverwrite(fn: BuildMethodOverwrite) {\n    this.buildMethodOverwriteSlot.register(fn);\n    return this;\n  }\n\n  /**\n   * overwrite the build ui function\n   */\n  registerPublicDirOverwrite(fn: PublicDirOverwrite) {\n    this.publicDirOverwriteSlot.register(fn);\n    return this;\n  }\n\n  private getOverwriteBuildFn() {\n    const buildMethodOverwrite = this.buildMethodOverwriteSlot.toArray();\n    if (buildMethodOverwrite[0]) {\n      const [, fn] = buildMethodOverwrite[0];\n      return fn;\n    }\n    return undefined;\n  }\n\n  private getOverwritePublic() {\n    const overwritePublic = this.publicDirOverwriteSlot.toArray();\n    if (overwritePublic[0]) {\n      const [, fn] = overwritePublic[0];\n      return fn;\n    }\n    return undefined;\n  }\n\n  async invokePreStart(preStartOpts: PreStartOpts): Promise<void> {\n    const promises = this.preStartSlot.values().map((fn) => fn(preStartOpts));\n    await Promise.all(promises);\n  }\n\n  async invokeOnStart(): Promise<ComponentType[]> {\n    const promises = this.onStartSlot.values().map((fn) => fn());\n    const startPlugins = await Promise.all(promises);\n    return startPlugins.filter((plugin) => !!plugin) as ComponentType[];\n  }\n\n  /**\n   * register a UI slot.\n   */\n  registerUiRoot(uiRoot: UIRoot) {\n    return this.uiRootSlot.register(uiRoot);\n  }\n\n  /**\n   * get a UI runtime instance.\n   */\n  getUi(uiRootName?: string): [string, UIRoot] | undefined {\n    if (uiRootName) {\n      const root = this.uiRootSlot.get(uiRootName) || this.getUiByName(uiRootName);\n      if (!root) return undefined;\n      return [uiRootName, root];\n    }\n    const uis = this.uiRootSlot.toArray();\n    if (uis.length === 1) return uis[0];\n    return uis.find(([, root]) => root.priority);\n  }\n\n  getUiName(uiRootName?: string): string | undefined {\n    const [, ui] = this.getUi(uiRootName) || [];\n    if (!ui) return undefined;\n\n    return ui.name;\n  }\n\n  private possibleUis() {\n    return this.uiRootSlot.toArray().map(([id]) => id);\n  }\n\n  createLink(aspectDefs: AspectDefinition[], rootExtensionName: string) {\n    return createRoot(aspectDefs, rootExtensionName);\n  }\n\n  /**\n   * generate the root file of the UI runtime.\n   */\n  async generateRoot(\n    aspectDefs: AspectDefinition[],\n    rootExtensionName: string,\n    runtimeName = UIRuntime.name,\n    rootAspect = UIAspect.id\n  ) {\n    const contents = await createRoot(\n      aspectDefs,\n      rootExtensionName,\n      rootAspect,\n      runtimeName,\n      this.harmony.config.toObject()\n    );\n    const filepath = resolve(join(__dirname, `${runtimeName}.root${sha1(contents)}.js`));\n    if (fs.existsSync(filepath)) return filepath;\n    fs.outputFileSync(filepath, contents);\n    return filepath;\n  }\n\n  private async selectPort() {\n    const [from, to] = this.config.portRange;\n    const usedPorts = (await this.cache.get<number[]>(`${from}${to}`)) || [];\n    const port = await Port.getPort(from, to, usedPorts);\n    // this will lock the port for 1 min to avoid race conditions\n    await this.cache.set(`${from}${to}`, usedPorts.concat(port), 5000);\n    return port;\n  }\n\n  private async buildUI(name: string, uiRoot: UIRoot, rebuild?: boolean): Promise<string> {\n    this.logger.debug(`buildUI, name ${name}`);\n    const overwrite = this.getOverwriteBuildFn();\n    if (overwrite) return overwrite(name, uiRoot, rebuild);\n    const hash = await this.buildIfChanged(name, uiRoot, rebuild);\n    await this.buildIfNoBundle(name, uiRoot);\n    return hash;\n  }\n\n  async buildUiHash(uiRoot: UIRoot, runtime = 'ui'): Promise<string> {\n    const aspects = await uiRoot.resolveAspects(runtime);\n    aspects.sort((a, b) => (a.aspectPath > b.aspectPath ? 1 : -1));\n    const hash = aspects.map((aspect) => {\n      return [aspect.aspectPath, aspect.runtimePath].join('');\n    });\n    return sha1(hash.join(''));\n  }\n\n  async buildIfChanged(name: string, uiRoot: UIRoot, force: boolean | undefined): Promise<string> {\n    this.logger.debug(`buildIfChanged, name ${name}`);\n    const hash = await this.buildUiHash(uiRoot);\n    const hashed = await this.cache.get(uiRoot.path);\n    if (hash === hashed && !force) {\n      this.logger.debug(`buildIfChanged, name ${name}, returned from cache`);\n      return hash;\n    }\n    if (!hashed) {\n      this.logger.console(\n        `Building UI assets for '${chalk.cyan(uiRoot.name)}' in target directory: ${chalk.cyan(\n          await this.publicDir(uiRoot)\n        )}. The first time we build the UI it may take a few minutes.`\n      );\n    } else {\n      this.logger.console(\n        `Rebuilding UI assets for '${chalk.cyan(uiRoot.name)} in target directory: ${chalk.cyan(\n          await this.publicDir(uiRoot)\n        )}' as ${uiRoot.configFile} has been changed.`\n      );\n    }\n\n    await this.build(name);\n    await this.cache.set(uiRoot.path, hash);\n    return hash;\n  }\n\n  clearConsole() {\n    process.stdout.write(process.platform === 'win32' ? '\\x1B[2J\\x1B[0f' : '\\x1B[2J\\x1B[3J\\x1B[H');\n  }\n\n  async buildIfNoBundle(name: string, uiRoot: UIRoot) {\n    const config = createWebpackConfig(\n      uiRoot.path,\n      [await this.generateRoot(await uiRoot.resolveAspects(UIRuntime.name), name)],\n      uiRoot.name,\n      await this.publicDir(uiRoot)\n    );\n    if (config.output?.path && fs.pathExistsSync(config.output.path)) return;\n    const hash = await this.buildUiHash(uiRoot);\n    await this.build(name);\n    await this.cache.set(uiRoot.path, hash);\n  }\n\n  get publicUrl() {\n    return this.config.publicUrl;\n  }\n\n  static defaultConfig: UIConfig = {\n    publicDir: 'public/bit',\n    portRange: [3000, 3100],\n    host: 'localhost',\n  };\n\n  static runtime = MainRuntime;\n  static dependencies = [\n    PubsubAspect,\n    CLIAspect,\n    GraphqlAspect,\n    ExpressAspect,\n    ComponentAspect,\n    CacheAspect,\n    LoggerAspect,\n  ];\n\n  static slots = [\n    Slot.withType<UIRoot>(),\n    Slot.withType<PreStart>(),\n    Slot.withType<OnStart>(),\n    Slot.withType<PublicDirOverwriteSlot>(),\n    Slot.withType<BuildMethodOverwriteSlot>(),\n    Slot.withType<StartPlugin>(),\n  ];\n\n  static async provider(\n    [pubsub, cli, graphql, express, componentExtension, cache, loggerMain]: UIDeps,\n    config,\n    [uiRootSlot, preStartSlot, onStartSlot, publicDirOverwriteSlot, buildMethodOverwriteSlot, proxyGetterSlot]: [\n      UIRootRegistry,\n      PreStartSlot,\n      OnStartSlot,\n      PublicDirOverwriteSlot,\n      BuildMethodOverwriteSlot,\n      StartPluginSlot\n    ],\n    harmony: Harmony\n  ) {\n    // aspectExtension.registerRuntime(new RuntimeDefinition('ui', []))\n    const logger = loggerMain.createLogger(UIAspect.id);\n\n    const ui = new UiMain(\n      pubsub,\n      config,\n      graphql,\n      uiRootSlot,\n      express,\n      preStartSlot,\n      onStartSlot,\n      publicDirOverwriteSlot,\n      buildMethodOverwriteSlot,\n      componentExtension,\n      cache,\n      logger,\n      harmony,\n      proxyGetterSlot\n    );\n    cli.register(new StartCmd(ui, logger), new UIBuildCmd(ui));\n    return ui;\n  }\n}\n\nUIAspect.addRuntime(UiMain);\n"]}