{"version":3,"sources":["ui-build.cmd.tsx"],"names":["UIBuildCmd","constructor","ui","report","type","stats","build","UnknownBuildError","toString"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAIO,MAAMA,UAAN,CAAoC;AAQzCC,EAAAA,WAAW;AACT;AACJ;AACA;AACYC,EAAAA,EAJC,EAKT;AAAA,SADQA,EACR,GADQA,EACR;AAAA,kDAZK,iBAYL;AAAA,yDAXY,yCAWZ;AAAA,mDAVM,GAUN;AAAA,mDATM,aASN;AAAA,8DARiB,EAQjB;AAAA,qDAPQ,EAOR;AAAE;;AAEQ,QAANC,MAAM,CAAC,CAACC,IAAD,CAAD,EAAoC;AAC9C;AACA,UAAMC,KAAK,GAAG,MAAM,KAAKH,EAAL,CAAQI,KAAR,CAAcF,IAAd,CAApB;AACA,QAAI,CAACC,KAAL,EAAY,MAAM,KAAIE,+BAAJ,GAAN;AACZ,WAAOF,KAAK,CAACG,QAAN,EAAP;AACD;;AApBwC","sourcesContent":["import { Command } from '@teambit/cli';\nimport { UnknownBuildError } from './exceptions';\n\nimport { UiMain } from './ui.main.runtime';\n\nexport class UIBuildCmd implements Command {\n  name = 'ui-build [type]';\n  description = 'build production assets for deployment.';\n  alias = 'c';\n  group = 'development';\n  shortDescription = '';\n  options = [];\n\n  constructor(\n    /**\n     * access to the extension instance.\n     */\n    private ui: UiMain\n  ) {}\n\n  async report([type]: [string]): Promise<string> {\n    // teambit.workspace/variants should be the one to take care of component patterns.\n    const stats = await this.ui.build(type);\n    if (!stats) throw new UnknownBuildError();\n    return stats.toString();\n  }\n}\n"]}