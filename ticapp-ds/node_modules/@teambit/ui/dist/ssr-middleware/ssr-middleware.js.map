{"version":3,"sources":["ssr-middleware.ts"],"names":["denyList","createSsrMiddleware","root","port","title","logger","runtime","loadRuntime","undefined","render","assets","serverRenderMiddleware","req","res","next","query","url","browser","test","debug","rendering","method","server","request","response","props","rendered","set","send","e","error","entryFilepath","path","join","fs","existsSync","warn","manifestFilepath","parseManifest","imported","filepath","file","readFile","contents","toString","parsed","JSON","parse","getAssets","process","exit","manifest","css","js","entrypoints","filter","x","endsWith","map"],"mappings":"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","sourcesContent":["import type { Assets } from '@teambit/ui-foundation.ui.rendering.html';\nimport { Request, Response, NextFunction } from 'express';\nimport path from 'path';\nimport * as fs from 'fs-extra';\nimport type { Logger } from '@teambit/logger';\nimport type { SsrContent } from '../react-ssr';\nimport { extractBrowserData } from './extract-browser-data';\n\nconst denyList = /^\\/favicon.ico$/;\n\ntype ssrRenderProps = {\n  root: string;\n  port: number;\n  title: string;\n  logger: Logger;\n};\n\ntype ManifestFile = {\n  files?: Record<string, string>;\n  entrypoints?: string[];\n};\n\nexport async function createSsrMiddleware({ root, port, title, logger }: ssrRenderProps) {\n  const runtime = await loadRuntime(root, { logger });\n  if (!runtime) return undefined;\n\n  const { render } = runtime;\n  const assets = { ...runtime.assets, title };\n\n  return async function serverRenderMiddleware(req: Request, res: Response, next: NextFunction) {\n    const { query, url } = req;\n\n    const browser = extractBrowserData(req, port);\n\n    if (denyList.test(url)) {\n      logger.debug(`[ssr] skipping static denyList file ${url}`);\n      next();\n      return;\n    }\n\n    if (query.rendering === 'client') {\n      logger.debug(`[ssr] skipping ${url}`);\n      next();\n      return;\n    }\n\n    logger.debug(`[ssr] ${req.method} ${url}`);\n    const server = { port, request: req, response: res };\n    const props: SsrContent = { assets, browser, server };\n\n    try {\n      const rendered = await render(props);\n      res.set('Cache-Control', 'no-cache');\n      res.send(rendered);\n      logger.debug(`[ssr] success '${url}'`);\n    } catch (e: any) {\n      logger.error(`[ssr] failed at '${url}'`, e);\n      next();\n    }\n  };\n}\n\nasync function loadRuntime(root: string, { logger }: { logger: Logger }) {\n  let render: (...arg: any[]) => any;\n  let assets: Assets | undefined;\n\n  try {\n    const entryFilepath = path.join(root, 'ssr', 'index.js');\n    if (!fs.existsSync(entryFilepath)) {\n      logger.warn(`[ssr] - Skipping setup - failed finding ssr bundle at \"${entryFilepath}\"`);\n      return undefined;\n    }\n\n    const manifestFilepath = path.join(root, 'asset-manifest.json');\n    if (!fs.existsSync(manifestFilepath)) {\n      logger.warn('[ssr] - Skipping setup (cannot find asset manifest file)');\n      return undefined;\n    }\n\n    assets = await parseManifest(manifestFilepath);\n    if (!assets) {\n      logger.warn('[ssr] - Skipping setup (failed parsing assets manifest)');\n      return undefined;\n    }\n\n    const imported = await import(entryFilepath);\n    render = imported?.render;\n\n    if (!render || typeof render !== 'function') {\n      logger.warn('[ssr] - index file does not export a render() function. Skipping setup.');\n      return undefined;\n    }\n  } catch (e: any) {\n    logger.error(e);\n    return undefined;\n  }\n\n  return {\n    render,\n    assets,\n  };\n}\n\nasync function parseManifest(filepath: string, logger?: Logger) {\n  try {\n    const file = await fs.readFile(filepath);\n    logger?.debug('[ssr] - ✓ aread manifest file');\n    const contents = file.toString();\n    const parsed: ManifestFile = JSON.parse(contents);\n    logger?.debug('[ssr] - ✓ prased manifest file', parsed);\n    const assets = getAssets(parsed);\n    logger?.debug('[ssr] - ✓ extracted data from manifest file', assets);\n\n    return assets;\n  } catch (e: any) {\n    logger?.error('[ssr] - error parsing asset manifest', e);\n    process.exit();\n    return undefined;\n  }\n}\n\nfunction getAssets(manifest: ManifestFile) {\n  const assets: Assets = { css: [], js: [] };\n\n  assets.css = manifest.entrypoints?.filter((x) => x.endsWith('css')).map((x) => path.join('/', x));\n  assets.js = manifest.entrypoints?.filter((x) => x.endsWith('js')).map((x) => path.join('/', x));\n\n  return assets;\n}\n"]}