{"version":3,"sources":["jest.worker.ts"],"names":["JestWorker","onTestComplete","onTestCompleteCb","watch","jestConfigPath","testFiles","rootPath","jestModulePath","Promise","resolve","console","warn","jestConfig","require","jestModule","jestConfigWithSpecs","Object","assign","testMatch","config","runInBand","silent","rootDir","watchAll","watchPlugins","__dirname","specFiles","onComplete","results","json","error","withEnv","res","runCLI","catch","err"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAGO,MAAMA,UAAN,CAAiB;AAAA;AAAA;AAAA;;AAGtBC,EAAAA,cAAc,CAACA,cAAD,EAAiB;AAC7B,SAAKC,gBAAL,GAAwBD,cAAxB,CAD6B,CAE7B;AACD;;AAEDE,EAAAA,KAAK,CAACC,cAAD,EAAyBC,SAAzB,EAA8CC,QAA9C,EAAgEC,cAAhE,EAAuG;AAC1G,WAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AAC9B;AACA;AACAC,MAAAA,OAAO,CAACC,IAAR,GAAe,YAAY,CAAE,CAA7B,CAH8B,CAI9B;;;AACA,YAAMC,UAAU,GAAGC,OAAO,CAACT,cAAD,CAA1B,CAL8B,CAM9B;;;AACA,YAAMU,UAAuB,GAAGD,OAAO,CAACN,cAAD,CAAvC;;AAEA,YAAMQ,mBAAmB,GAAGC,MAAM,CAACC,MAAP,CAAcL,UAAd,EAA0B;AACpDM,QAAAA,SAAS,EAAEb;AADyC,OAA1B,CAA5B;AAIA,YAAMc,MAAW,GAAG;AAClB;AACA;AACAC,QAAAA,SAAS,EAAE,IAHO;AAIlBC,QAAAA,MAAM,EAAE,KAJU;AAKlBC,QAAAA,OAAO,EAAEhB,QALS;AAMlBH,QAAAA,KAAK,EAAE,IANW;AAOlBoB,QAAAA,QAAQ,EAAE,IAPQ;AAQlBC,QAAAA,YAAY,EAAE,CACZ,CACG,GAAEC,SAAU,WADf,EAEE;AACEC,UAAAA,SAAS,EAAErB,SADb;AAEEsB,UAAAA,UAAU,EAAGC,OAAD,IAAa;AACvB,gBAAI,CAAC,KAAK1B,gBAAV,EAA4B;;AAC5B,gBAAI;AACF,oBAAM2B,IAAI,GAAG,sBAAM,0BAAUD,OAAV,CAAN,CAAb;AACA,mBAAK1B,gBAAL,CAAsB2B,IAAtB,EAFE,CAGF;AACA;AACD,aALD,CAKE,OAAOC,KAAP,EAAmB,CAAE;AACxB;AAVH,SAFF,CADY;AARI,OAApB;AA2BA,YAAMC,OAAO,GAAGf,MAAM,CAACC,MAAP,CAAcF,mBAAd,EAAmCI,MAAnC,CAAhB,CAxC8B,CAyC9B;;AACA,YAAMa,GAAG,GAAGlB,UAAU,CAACmB,MAAX,CAAkBF,OAAlB,EAA2B,CAAC3B,cAAD,CAA3B,CAAZ,CA1C8B,CA2C9B;;AACA4B,MAAAA,GAAG,CAACE,KAAJ,CAAWC,GAAD,IAASzB,OAAO,CAACoB,KAAR,CAAcK,GAAd,CAAnB;AACA1B,MAAAA,OAAO;AACR,KA9CM,CAAP;AA+CD;;AAxDqB;;;AA2DxB,sBAAO,IAAIT,UAAJ,EAAP","sourcesContent":["import { stringify, parse } from 'flatted';\nimport { expose } from '@teambit/worker';\nimport type jest from 'jest';\n\nexport class JestWorker {\n  private onTestCompleteCb;\n\n  onTestComplete(onTestComplete) {\n    this.onTestCompleteCb = onTestComplete;\n    // return this;\n  }\n\n  watch(jestConfigPath: string, testFiles: string[], rootPath: string, jestModulePath: string): Promise<void> {\n    return new Promise((resolve) => {\n      // TODO: remove this after jest publish new version to npm: https://github.com/facebook/jest/pull/10804\n      // eslint-disable-next-line\n      console.warn = function () {};\n      // eslint-disable-next-line import/no-dynamic-require,global-require\n      const jestConfig = require(jestConfigPath);\n      // eslint-disable-next-line import/no-dynamic-require,global-require\n      const jestModule: typeof jest = require(jestModulePath);\n\n      const jestConfigWithSpecs = Object.assign(jestConfig, {\n        testMatch: testFiles,\n      });\n\n      const config: any = {\n        // useStderr: true,\n        // TODO: check way to enable it\n        runInBand: true,\n        silent: false,\n        rootDir: rootPath,\n        watch: true,\n        watchAll: true,\n        watchPlugins: [\n          [\n            `${__dirname}/watch.js`,\n            {\n              specFiles: testFiles,\n              onComplete: (results) => {\n                if (!this.onTestCompleteCb) return;\n                try {\n                  const json = parse(stringify(results));\n                  this.onTestCompleteCb(json);\n                  // disable eslint because we want to catch error but not print it on worker\n                  // eslint-disable-next-line\n                } catch (error: any) {}\n              },\n            },\n          ],\n        ],\n      };\n\n      const withEnv = Object.assign(jestConfigWithSpecs, config);\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      const res = jestModule.runCLI(withEnv, [jestConfigPath]);\n      // eslint-disable-next-line no-console\n      res.catch((err) => console.error(err));\n      resolve();\n    });\n  }\n}\n\nexpose(new JestWorker());\n"]}