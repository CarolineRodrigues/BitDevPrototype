{"version":3,"sources":["jest.main.runtime.ts"],"names":["WORKER_NAME","JestMain","constructor","jestWorker","logger","createTester","jestConfig","jestModulePath","require","resolve","JestTester","JestAspect","id","provider","worker","loggerAspect","createLogger","declareWorker","MainRuntime","WorkerAspect","LoggerAspect","addRuntime"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAGO,MAAMA,WAAW,GAAG,MAApB;;;AAEA,MAAMC,QAAN,CAAe;AACpBC,EAAAA,WAAW,CAASC,UAAT,EAAwDC,MAAxD,EAAwE;AAAA,SAA/DD,UAA+D,GAA/DA,UAA+D;AAAA,SAAhBC,MAAgB,GAAhBA,MAAgB;AAAE;;AAErFC,EAAAA,YAAY,CAACC,UAAD,EAAkBC,cAAc,GAAGC,OAAO,CAACC,OAAR,CAAgB,MAAhB,CAAnC,EAA4D;AACtE,WAAO,KAAIC,mBAAJ,EAAeC,mBAAWC,EAA1B,EAA8BN,UAA9B,EAA0CC,cAA1C,EAA0D,KAAKJ,UAA/D,EAA2E,KAAKC,MAAhF,CAAP;AACD;;AAKoB,eAARS,QAAQ,CAAC,CAACC,MAAD,EAASC,YAAT,CAAD,EAAmD;AACtE,UAAMX,MAAM,GAAGW,YAAY,CAACC,YAAb,CAA0BL,mBAAWC,EAArC,CAAf;AACA,UAAMT,UAAU,GAAG,MAAMW,MAAM,CAACG,aAAP,CAAiCjB,WAAjC,EAA8CQ,OAAO,CAACC,OAAR,CAAgB,eAAhB,CAA9C,CAAzB;AACA,WAAO,IAAIR,QAAJ,CAAaE,UAAb,EAAyBC,MAAzB,CAAP;AACD;;AAdmB;;;gCAATH,Q,aAOMiB,kB;gCAPNjB,Q,kBAQW,CAACkB,sBAAD,EAAeC,sBAAf,C;;AASxBT,mBAAWU,UAAX,CAAsBpB,QAAtB","sourcesContent":["import { MainRuntime } from '@teambit/cli';\nimport { LoggerAspect, LoggerMain, Logger } from '@teambit/logger';\nimport { WorkerAspect, WorkerMain, HarmonyWorker } from '@teambit/worker';\nimport { JestAspect } from './jest.aspect';\nimport { JestTester } from './jest.tester';\nimport type { JestWorker } from './jest.worker';\n\nexport const WORKER_NAME = 'jest';\n\nexport class JestMain {\n  constructor(private jestWorker: HarmonyWorker<JestWorker>, private logger: Logger) {}\n\n  createTester(jestConfig: any, jestModulePath = require.resolve('jest')) {\n    return new JestTester(JestAspect.id, jestConfig, jestModulePath, this.jestWorker, this.logger);\n  }\n\n  static runtime = MainRuntime;\n  static dependencies = [WorkerAspect, LoggerAspect];\n\n  static async provider([worker, loggerAspect]: [WorkerMain, LoggerMain]) {\n    const logger = loggerAspect.createLogger(JestAspect.id);\n    const jestWorker = await worker.declareWorker<JestWorker>(WORKER_NAME, require.resolve('./jest.worker'));\n    return new JestMain(jestWorker, logger);\n  }\n}\n\nJestAspect.addRuntime(JestMain);\n"]}