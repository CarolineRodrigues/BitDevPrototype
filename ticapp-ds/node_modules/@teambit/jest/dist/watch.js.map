{"version":3,"sources":["watch.ts"],"names":["Watch","constructor","stdin","stdout","config","_stdin","_stdout","_specFiles","specFiles","_onComplete","onComplete","findComponent","specFile","component","toArray","find","specs","paths","map","spec","path","includes","apply","jestHooks","onTestRunComplete","results","module","exports"],"mappings":";;;;;;;;;;;;;;;;AAQA,MAAMA,KAAN,CAAmC;AAejCC,EAAAA,WAAW,CAAC;AACVC,IAAAA,KADU;AAEVC,IAAAA,MAFU;AAGVC,IAAAA;AAHU,GAAD,EAQR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD,SAAKC,MAAL,GAAcH,KAAd;AACA,SAAKI,OAAL,GAAeH,MAAf;AACA,SAAKI,UAAL,GAAkBH,MAAM,CAACI,SAAzB;AACA,SAAKC,WAAL,GAAmBL,MAAM,CAACM,UAA1B;AACD;;AAEOC,EAAAA,aAAa,CAACC,QAAD,EAAmB;AACtC,UAAMC,SAAS,GAAG,KAAKN,UAAL,CAAgBO,OAAhB,GAA0BC,IAA1B,CAA+B,CAAC,GAAGC,KAAH,CAAD,KAAe;AAC9D,YAAMC,KAAK,GAAGD,KAAK,CAACE,GAAN,CAAWC,IAAD,IAAUA,IAAI,CAACC,IAAzB,CAAd;AACA,UAAIH,KAAK,CAACI,QAAN,CAAeT,QAAf,CAAJ,EAA8B,OAAO,IAAP;AAC9B,aAAO,KAAP;AACD,KAJiB,CAAlB;;AAKA,WAAOC,SAAP,aAAOA,SAAP,uBAAOA,SAAS,CAAG,CAAH,CAAhB;AACD;;AAEDS,EAAAA,KAAK,CAACC,SAAD,EAAgC;AACnC;AACA;AACA;AACA;AACA;AAEAA,IAAAA,SAAS,CAACC,iBAAV,CAA6BC,OAAD,IAAa;AACvC,WAAKhB,WAAL,CAAiBgB,OAAjB;AACD,KAFD;AAGD;;AAjDgC;;AAoDnCC,MAAM,CAACC,OAAP,GAAiB3B,KAAjB","sourcesContent":["import { Prompt, WatchPlugin, JestHookSubscriber, UsageData } from 'jest-watcher';\nimport { SpecFiles } from '@teambit/tester';\n\nexport type PluginConfig = {\n  onComplete: (testSuite: any) => void;\n  specFiles: SpecFiles;\n};\n\nclass Watch implements WatchPlugin {\n  _stdin: NodeJS.ReadStream;\n\n  _stdout: NodeJS.WriteStream;\n\n  _prompt: Prompt;\n\n  _testResults: any;\n\n  _usageInfo: UsageData;\n\n  _specFiles: SpecFiles;\n\n  _onComplete: (testSuite: any) => void;\n\n  constructor({\n    stdin,\n    stdout,\n    config,\n  }: {\n    stdin: NodeJS.ReadStream;\n    stdout: NodeJS.WriteStream;\n    config: PluginConfig;\n  }) {\n    this._stdin = stdin;\n    this._stdout = stdout;\n    this._specFiles = config.specFiles;\n    this._onComplete = config.onComplete;\n  }\n\n  private findComponent(specFile: string) {\n    const component = this._specFiles.toArray().find(([, specs]) => {\n      const paths = specs.map((spec) => spec.path);\n      if (paths.includes(specFile)) return true;\n      return false;\n    });\n    return component?.[0];\n  }\n\n  apply(jestHooks: JestHookSubscriber) {\n    // jestHooks.shouldRunTestSuite(async (testSuite) => {\n    //   const component = this.findComponent(testSuite.testPath);\n    //   if ((await component?.isModified()) || (await component?.isNew())) return true;\n    //   return false;\n    // });\n\n    jestHooks.onTestRunComplete((results) => {\n      this._onComplete(results);\n    });\n  }\n}\n\nmodule.exports = Watch;\n"]}