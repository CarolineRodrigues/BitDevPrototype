{"version":3,"sources":["core-exporter.task.ts"],"names":["CoreExporterTask","constructor","env","aspectLoader","execute","context","mainAspect","capsules","capsuleNetwork","seedersCapsules","mainAspectCapsule","find","capsule","component","id","name","distDir","getCompiler","addFolderForAllCoreAspects","addFolderForHarmony","addFolderForLegacy","componentsResults","artifacts","coreAspectsIds","getCoreAspectIds","coreAspectsNamesPackages","map","packageName","capsuleDir","path","createBarrelFilesP","newDirPath","join","fs","ensureDir","barrelContent","generateBarrelFile","writeFile","Promise","all","addFolderForNonAspectCorePackages"],"mappings":"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","sourcesContent":["import path from 'path';\nimport fs from 'fs-extra';\nimport { BuildContext, BuiltTaskResult, BuildTask, TaskLocation } from '@teambit/builder';\nimport { AspectLoaderMain, getCoreAspectName, getCoreAspectPackageName } from '@teambit/aspect-loader';\nimport { Capsule } from '@teambit/isolator';\nimport { Environment } from '@teambit/envs';\n\nexport class CoreExporterTask implements BuildTask {\n  constructor(private env: Environment, private aspectLoader: AspectLoaderMain) {}\n\n  location: TaskLocation = 'start';\n  readonly aspectId = 'teambit.harmony/aspect';\n  readonly name = 'CoreExporter';\n  readonly description = 'export all core aspects via the main aspects';\n\n  async execute(context: BuildContext): Promise<BuiltTaskResult> {\n    const mainAspect = this.aspectLoader.mainAspect;\n    const capsules = context.capsuleNetwork.seedersCapsules;\n    const mainAspectCapsule = capsules.find((capsule) => capsule.component.id.name === mainAspect.name);\n    if (mainAspectCapsule) {\n      const distDir = this.env.getCompiler().distDir;\n      await this.addFolderForAllCoreAspects(mainAspectCapsule, distDir);\n      await this.addFolderForHarmony(mainAspectCapsule, distDir);\n      await this.addFolderForLegacy(mainAspectCapsule, distDir);\n    }\n\n    return {\n      componentsResults: [],\n      artifacts: [],\n    };\n  }\n\n  private addFolderForAllCoreAspects(mainAspectCapsule: Capsule, distDir: string) {\n    const coreAspectsIds = this.aspectLoader.getCoreAspectIds();\n    const coreAspectsNamesPackages = coreAspectsIds.map((id) => {\n      return {\n        name: getCoreAspectName(id),\n        packageName: getCoreAspectPackageName(id),\n      };\n    });\n    const capsuleDir = mainAspectCapsule.path;\n    const createBarrelFilesP = coreAspectsNamesPackages.map(async ({ name, packageName }) => {\n      const newDirPath = path.join(capsuleDir, distDir, name);\n      await fs.ensureDir(newDirPath);\n      const barrelContent = generateBarrelFile(packageName);\n      await fs.writeFile(path.join(newDirPath, 'index.js'), barrelContent);\n    });\n    return Promise.all(createBarrelFilesP);\n  }\n\n  private async addFolderForNonAspectCorePackages(\n    mainAspectCapsule: Capsule,\n    distDir: string,\n    name: string,\n    packageName = `@teambit/${name}`\n  ) {\n    const capsuleDir = mainAspectCapsule.path;\n    const newDirPath = path.join(capsuleDir, distDir, name);\n    await fs.ensureDir(newDirPath);\n    const barrelContent = generateBarrelFile(packageName);\n    await fs.writeFile(path.join(newDirPath, 'index.js'), barrelContent);\n  }\n\n  private async addFolderForHarmony(mainAspectCapsule: Capsule, distDir: string) {\n    const name = 'harmony';\n    await this.addFolderForNonAspectCorePackages(mainAspectCapsule, distDir, name);\n  }\n\n  private async addFolderForLegacy(mainAspectCapsule: Capsule, distDir: string) {\n    const name = 'legacy';\n    await this.addFolderForNonAspectCorePackages(mainAspectCapsule, distDir, name);\n  }\n}\n\nfunction generateBarrelFile(packageName) {\n  return `\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// const aspect = require(\"${packageName}\");\n// module.exports = aspect;\nmodule.exports.path = require.resolve(\"${packageName}\");\n`;\n}\n"]}