"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AutoCompleteInput = AutoCompleteInput;

function _extends2() {
  const data = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

  _extends2 = function () {
    return data;
  };

  return data;
}

function _objectWithoutProperties2() {
  const data = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

  _objectWithoutProperties2 = function () {
    return data;
  };

  return data;
}

function _react() {
  const data = _interopRequireWildcard(require("react"));

  _react = function () {
    return data;
  };

  return data;
}

function _classnames() {
  const data = _interopRequireDefault(require("classnames"));

  _classnames = function () {
    return data;
  };

  return data;
}

function _autocompleteInputModule() {
  const data = _interopRequireDefault(require("./autocomplete-input.module.scss"));

  _autocompleteInputModule = function () {
    return data;
  };

  return data;
}

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function AutoCompleteInput(_ref) {
  let {
    className,
    onEscape,
    onDown,
    onUp,
    onEnter,
    onKeyDown,
    focus
  } = _ref,
      rest = (0, _objectWithoutProperties2().default)(_ref, ["className", "onEscape", "onDown", "onUp", "onEnter", "onKeyDown", "focus"]);
  const inputRef = /*#__PURE__*/(0, _react().createRef)();
  (0, _react().useEffect)(() => {
    var _inputRef$current;

    if (focus) (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();
  }, [focus]);
  const handleKeyDown = (0, _react().useCallback)(e => {
    onKeyDown === null || onKeyDown === void 0 ? void 0 : onKeyDown(e);
    if (e.defaultPrevented) return;
    const handlers = {
      Escape: () => {
        e.preventDefault();
        onEscape === null || onEscape === void 0 ? void 0 : onEscape(e);
      },
      ArrowDown: () => {
        e.preventDefault();
        onDown === null || onDown === void 0 ? void 0 : onDown(e);
      },
      ArrowUp: () => {
        e.preventDefault();
        onUp === null || onUp === void 0 ? void 0 : onUp(e);
      },
      Enter: () => {
        e.preventDefault();
        onEnter === null || onEnter === void 0 ? void 0 : onEnter(e);
      }
    };
    if (e.key in handlers) handlers[e.key]();
  }, [onEscape, onDown, onUp, onEnter]); // @ts-ignore (https://github.com/teambit/bit/issues/4908)

  return /*#__PURE__*/_react().default.createElement("input", (0, _extends2().default)({}, rest, {
    ref: inputRef,
    className: (0, _classnames().default)(_autocompleteInputModule().default.input, className),
    onKeyDown: handleKeyDown
  }));
}

//# sourceMappingURL=autocomplete-input.js.map