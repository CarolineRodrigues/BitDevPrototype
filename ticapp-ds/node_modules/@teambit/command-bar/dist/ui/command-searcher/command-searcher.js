"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

require("core-js/modules/es.regexp.exec.js");

require("core-js/modules/es.string.replace.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CommandSearcher = void 0;

function _defineProperty2() {
  const data = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

  _defineProperty2 = function () {
    return data;
  };

  return data;
}

function _fuse() {
  const data = _interopRequireDefault(require("fuse.js"));

  _fuse = function () {
    return data;
  };

  return data;
}

const searchedKeys = ['displayName'];

class CommandSearcher {
  constructor(commands) {
    (0, _defineProperty2().default)(this, "fuseCommands", new (_fuse().default)([], {
      // weight can be included here.
      // fields loses weight the longer they get, so it seems ok for now.
      keys: searchedKeys
    }));
    this.fuseCommands.setCollection(commands);
  }

  update(commands) {
    this.fuseCommands.setCollection(commands);
  }

  search(term, limit) {
    const unprefixedPattern = term.replace(/^>/, '');
    const searchResults = this.fuseCommands.search(unprefixedPattern, {
      limit
    }); // @ts-ignore this shows error on Circle for some weird reason

    return searchResults.map(x => x.item);
  }

  test(term) {
    return term.startsWith('>');
  }

}

exports.CommandSearcher = CommandSearcher;

//# sourceMappingURL=command-searcher.js.map