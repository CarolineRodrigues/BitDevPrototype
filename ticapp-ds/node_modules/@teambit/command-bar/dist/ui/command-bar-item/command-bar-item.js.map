{"version":3,"sources":["command-bar-item.tsx"],"names":["CommandBarItem","entry","className","active","rest","handler","displayName","name","icon","iconAlt","keybinding","firstKeybinding","Array","isArray","styles","commandBarOption","commandKeys","mutedText"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAOO,SAASA,cAAT,OAAiF;AAAA,MAAzD;AAAEC,IAAAA,KAAF;AAASC,IAAAA,SAAT;AAAoBC,IAAAA;AAApB,GAAyD;AAAA,MAA1BC,IAA0B;AACtF,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,WAAW,EAAEC,IAAxB;AAA8BC,IAAAA,IAA9B;AAAoCC,IAAAA,OAApC;AAA6CC,IAAAA;AAA7C,MAA4DT,KAAlE;AACA,QAAMU,eAAe,GAAGC,KAAK,CAACC,OAAN,CAAcH,UAAd,IAA4BA,UAAU,CAAC,CAAD,CAAtC,GAA4CA,UAApE;AAEA,sBACE,mEACMN,IADN;AAEE,IAAA,SAAS,EAAE,2BAAWF,SAAX,EAAsBY,gCAAOC,gBAA7B,EAA+CZ,MAAM,IAAIW,gCAAOX,MAAhE,CAFb;AAGE,IAAA,WAAW,EAAEE;AAHf,MAKGG,IAAI,iBAAI;AAAK,IAAA,GAAG,EAAEA,IAAV;AAAgB,IAAA,GAAG,EAAEC,OAArB;AAA8B,IAAA,SAAS,EAAEK,gCAAON;AAAhD,IALX,eAME;AAAK,IAAA,SAAS,EAAEM,gCAAOP;AAAvB,KAA8BA,IAA9B,CANF,EAOGI,eAAe,iBACd,+BAAC,6BAAD;AAAa,IAAA,SAAS,EAAE,2BAAWG,gCAAOE,WAAlB,EAA+BC,uBAA/B;AAAxB,KAAoEN,eAApE,CARJ,CADF;AAaD","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\nimport { KeySequence } from '@teambit/ui-foundation.ui.keycap';\nimport { mutedText } from '@teambit/base-ui.text.muted-text';\nimport { CommanderSearchResult } from '../../types';\nimport styles from './command-bar-item.module.scss';\n\nexport type CommandItemProps = {\n  active?: boolean;\n  entry: CommanderSearchResult;\n} & React.HTMLAttributes<HTMLDivElement>;\n\nexport function CommandBarItem({ entry, className, active, ...rest }: CommandItemProps) {\n  const { handler, displayName: name, icon, iconAlt, keybinding } = entry;\n  const firstKeybinding = Array.isArray(keybinding) ? keybinding[0] : keybinding;\n\n  return (\n    <div\n      {...rest}\n      className={classnames(className, styles.commandBarOption, active && styles.active)}\n      onMouseDown={handler}\n    >\n      {icon && <img src={icon} alt={iconAlt} className={styles.icon} />}\n      <div className={styles.name}>{name}</div>\n      {firstKeybinding && (\n        <KeySequence className={classnames(styles.commandKeys, mutedText)}>{firstKeybinding}</KeySequence>\n      )}\n    </div>\n  );\n}\n"]}