{"version":3,"sources":["component-searcher.ts"],"names":["searchedKeys","ComponentSearcher","constructor","navigate","Fuse","keys","components","searchResults","map","c","id","fullName","displayName","name","handler","icon","environment","iconAlt","fuseCommands","setCollection","search","term","limit","x","item","test","startsWith","length"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAMA,MAAMA,YAA6C,GAAG,CAAC,aAAD,EAAgB,MAAhB,CAAtD;;AAEO,MAAMC,iBAAN,CAAkD;AAOvDC,EAAAA,WAAW,CAASC,QAAT,EAA2C;AAAA,SAAlCA,QAAkC,GAAlCA,QAAkC;AAAA,0DAN/B,KAAIC,eAAJ,EAAgC,EAAhC,EAAoC;AACzD;AACA;AACAC,MAAAA,IAAI,EAAEL;AAHmD,KAApC,CAM+B;AAAA,oDAG7C,2BAAYM,UAAD,IAAkC;AACpD,YAAM;AAAEH,QAAAA;AAAF,UAAe,IAArB;AAEA,YAAMI,aAAa,GAAGD,UAAU,CAACE,GAAX,CAAgBC,CAAD;AAAA;;AAAA,eAAQ;AAC3CC,UAAAA,EAAE,EAAED,CAAC,CAACC,EAAF,CAAKC,QADkC;AAE3CC,UAAAA,WAAW,EAAEH,CAAC,CAACC,EAAF,CAAKC,QAFyB;AAG3CE,UAAAA,IAAI,EAAEJ,CAAC,CAACC,EAAF,CAAKG,IAHgC;AAI3CC,UAAAA,OAAO,EAAE,MAAMX,QAAQ,CAAE,IAAGM,CAAC,CAACC,EAAF,CAAKC,QAAS,EAAnB,CAJoB;AAK3CI,UAAAA,IAAI,oBAAEN,CAAC,CAACO,WAAJ,mDAAE,eAAeD,IALsB;AAM3CE,UAAAA,OAAO,qBAAER,CAAC,CAACO,WAAJ,oDAAE,gBAAeN;AANmB,SAAR;AAAA,OAAf,CAAtB;AASA,WAAKQ,YAAL,CAAkBC,aAAlB,CAAgCZ,aAAhC;AACD,KAbQ,CAH6C;AAAE,GAPD,CASvD;;;AAgBAa,EAAAA,MAAM,CAACC,IAAD,EAAeC,KAAf,EAAuD;AAC3D,UAAMf,aAAa,GAAG,KAAKW,YAAL,CAAkBE,MAAlB,CAAyBC,IAAzB,EAA+B;AAAEC,MAAAA;AAAF,KAA/B,CAAtB,CAD2D,CAE3D;;AACA,WAAOf,aAAa,CAACC,GAAd,CAAmBe,CAAD,IAAOA,CAAC,CAACC,IAA3B,CAAP;AACD;;AAEDC,EAAAA,IAAI,CAACJ,IAAD,EAAwB;AAC1B,WAAO,CAACA,IAAI,CAACK,UAAL,CAAgB,GAAhB,CAAD,IAAyBL,IAAI,CAACM,MAAL,GAAc,CAA9C;AACD;;AAjCsD","sourcesContent":["import Fuse from 'fuse.js';\nimport memoizeOne from 'memoize-one';\nimport { ComponentModel } from '@teambit/component';\nimport { SearchProvider, CommanderSearchResult } from '../../types';\n\ntype ComponentSearchResult = CommanderSearchResult & { name: string };\n\nconst searchedKeys: (keyof ComponentSearchResult)[] = ['displayName', 'name'];\n\nexport class ComponentSearcher implements SearchProvider {\n  private fuseCommands = new Fuse<ComponentSearchResult>([], {\n    // weight can be included here.\n    // fields loses weight the longer they get, so it seems ok for now.\n    keys: searchedKeys,\n  });\n\n  constructor(private navigate: (path: string) => void) {}\n\n  // this method can be called on every render. memoize to prevent redundant calls\n  update = memoizeOne((components: ComponentModel[]) => {\n    const { navigate } = this;\n\n    const searchResults = components.map((c) => ({\n      id: c.id.fullName,\n      displayName: c.id.fullName,\n      name: c.id.name,\n      handler: () => navigate(`/${c.id.fullName}`),\n      icon: c.environment?.icon,\n      iconAlt: c.environment?.id,\n    }));\n\n    this.fuseCommands.setCollection(searchResults);\n  });\n\n  search(term: string, limit: number): ComponentSearchResult[] {\n    const searchResults = this.fuseCommands.search(term, { limit });\n    // @ts-ignore this shows error on Circle for some weird reason\n    return searchResults.map((x) => x.item);\n  }\n\n  test(term: string): boolean {\n    return !term.startsWith('>') && term.length > 0;\n  }\n}\n"]}