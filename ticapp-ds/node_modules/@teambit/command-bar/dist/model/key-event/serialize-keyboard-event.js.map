{"version":3,"sources":["serialize-keyboard-event.ts"],"names":["serializeKeyboardEvent","e","serialized","key","val"],"mappings":";;;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEO,SAASA,sBAAT,CAAgCC,CAAhC,EAAqE;AAC1E,QAAMC,UAAU,GAAG,EAAnB,CAD0E,CAG1E;AACA;;AACA,OAAK,MAAMC,GAAX,IAAkBF,CAAlB,EAAqB;AACnB,UAAMG,GAAG,GAAGH,CAAC,CAACE,GAAD,CAAb;;AACA,QAAI,4BAAYC,GAAZ,CAAJ,EAAsB;AACpBF,MAAAA,UAAU,CAACC,GAAD,CAAV,GAAkBC,GAAlB;AACD;AACF;;AAED,SAAOF,UAAP;AACD","sourcesContent":["import isPrimitive from 'is-primitive';\n\nexport function serializeKeyboardEvent(e: KeyboardEvent): KeyboardEventInit {\n  const serialized = {};\n\n  // 'for ... in' includes properties from prototype (which we want)\n  // eslint-disable-next-line no-restricted-syntax, guard-for-in\n  for (const key in e) {\n    const val = e[key];\n    if (isPrimitive(val)) {\n      serialized[key] = val;\n    }\n  }\n\n  return serialized;\n}\n"]}