{"version":3,"sources":["sidebar.ui.runtime.tsx"],"names":["SidebarUI","constructor","drawerSlot","props","registerDrawer","drawer","register","provider","deps","config","UIRuntime","Slot","withType","SidebarAspect","addRuntime"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAGA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAYO,MAAMA,SAAN,CAAgB;AACrBC,EAAAA,WAAW,CAASC,UAAT,EAAiC;AAAA,SAAxBA,UAAwB,GAAxBA,UAAwB;AAAA,oDAalCC,KAAD,IAAkC;AACzC,0BAAO,+BAAC,cAAD;AAAS,QAAA,UAAU,EAAE,KAAKD;AAA1B,SAA0CC,KAA1C,EAAP;AACD,KAf2C;AAAE;AAE9C;AACF;AACA;;;AACEC,EAAAA,cAAc,CAAC,GAAGC,MAAJ,EAA0B;AACtC,SAAKH,UAAL,CAAgBI,QAAhB,CAAyBD,MAAzB;AACA,WAAO,IAAP;AACD;AAED;AACF;AACA;;;AAWuB,eAARE,QAAQ,CAACC,IAAD,EAAOC,MAAP,EAAe,CAACP,UAAD,CAAf,EAA2C;AAC9D,WAAO,IAAIF,SAAJ,CAAcE,UAAd,CAAP;AACD;;AA1BoB;;;gCAAVF,S,aAkBMU,e;gCAlBNV,S,WAoBI,CAACW,gBAAKC,QAAL,EAAD,C;gCApBJZ,S,kBAsBW,E;;AAOxBa,yBAAcC,UAAd,CAAyBd,SAAzB","sourcesContent":["import { ComponentModel } from '@teambit/component';\nimport { Slot, SlotRegistry } from '@teambit/harmony';\nimport { UIRuntime } from '@teambit/ui';\nimport React, { ComponentType } from 'react';\n\nimport type { DrawerType } from '@teambit/ui-foundation.ui.tree.drawer';\nimport { SidebarAspect } from './sidebar.aspect';\nimport { SideBar, SideBarProps } from './ui';\n\nexport type ComponentTypeProps = {\n  component: ComponentModel;\n};\n\nexport type SidebarItem = ComponentType;\n\nexport type SidebarItemSlot = SlotRegistry<SidebarItem[]>;\n\nexport type DrawerSlot = SlotRegistry<DrawerType[]>;\n\nexport class SidebarUI {\n  constructor(private drawerSlot: DrawerSlot) {}\n\n  /**\n   * register a new drawer into the component sidebar.\n   */\n  registerDrawer(...drawer: DrawerType[]) {\n    this.drawerSlot.register(drawer);\n    return this;\n  }\n\n  /**\n   * render the sidebar.\n   */\n  render = (props: Partial<SideBarProps>) => {\n    return <SideBar drawerSlot={this.drawerSlot} {...props}></SideBar>;\n  };\n\n  static runtime = UIRuntime;\n\n  static slots = [Slot.withType<DrawerType>()];\n\n  static dependencies = [];\n\n  static async provider(deps, config, [drawerSlot]: [DrawerSlot]) {\n    return new SidebarUI(drawerSlot);\n  }\n}\n\nSidebarAspect.addRuntime(SidebarUI);\n"]}