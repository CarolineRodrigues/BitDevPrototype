{"version":3,"sources":["format.task.ts"],"names":["FormatTask","constructor","aspectId","name","execute","context","formatter","env","getFormatter","results","check","componentsResults","map","formatResult","component","metadata","errors"],"mappings":";;;;;;;;;AAGO,MAAMA,UAAN,CAAsC;AAC3CC,EAAAA,WAAW,CAAUC,QAAV,EAAqCC,IAAI,GAAG,QAA5C,EAAsD;AAAA,SAA5CD,QAA4C,GAA5CA,QAA4C;AAAA,SAAjBC,IAAiB,GAAjBA,IAAiB;AAAE;;AAEtD,QAAPC,OAAO,CAACC,OAAD,EAAkD;AAC7D,UAAMC,SAAoB,GAAGD,OAAO,CAACE,GAAR,CAAYC,YAAZ,EAA7B,CAD6D,CAE7D;;AACA,UAAMC,OAAO,GAAG,MAAMH,SAAS,CAACI,KAAV,CAAgBL,OAAhB,CAAtB;AACA,UAAMM,iBAAiB,GAAGF,OAAO,CAACA,OAAR,CAAgBG,GAAhB,CAAqBC,YAAD,IAAmC;AAC/E,aAAO;AACLC,QAAAA,SAAS,EAAED,YAAY,CAACC,SADnB;AAELC,QAAAA,QAAQ,EAAE;AACRN,UAAAA,OAAO,EAAEI,YAAY,CAACJ;AADd,SAFL;AAKLO,QAAAA,MAAM,EAAE;AALH,OAAP;AAOD,KARyB,CAA1B;AAUA,WAAO;AACLL,MAAAA;AADK,KAAP;AAGD;;AApB0C","sourcesContent":["import { BuildTask, BuiltTaskResult, BuildContext, ComponentResult } from '@teambit/builder';\nimport { Formatter } from './formatter';\n\nexport class FormatTask implements BuildTask {\n  constructor(readonly aspectId: string, readonly name = 'format') {}\n\n  async execute(context: BuildContext): Promise<BuiltTaskResult> {\n    const formatter: Formatter = context.env.getFormatter();\n    // TODO: add option to select between check and format here\n    const results = await formatter.check(context);\n    const componentsResults = results.results.map((formatResult): ComponentResult => {\n      return {\n        component: formatResult.component,\n        metadata: {\n          results: formatResult.results,\n        },\n        errors: [],\n      };\n    });\n\n    return {\n      componentsResults,\n    };\n  }\n}\n"]}