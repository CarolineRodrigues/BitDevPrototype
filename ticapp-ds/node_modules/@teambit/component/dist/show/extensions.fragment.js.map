{"version":3,"sources":["extensions.fragment.ts"],"names":["ExtensionsFragment","renderList","component","aspects","state","entries","map","entry","id","toString","join","renderRow","title","content","json","serialize"],"mappings":";;;;;;;;;;;AAGO,MAAMA,kBAAN,CAAiD;AAC9CC,EAAAA,UAAU,CAACC,SAAD,EAAuB;AACvC,UAAMC,OAAO,GAAGD,SAAS,CAACE,KAAV,CAAgBD,OAAhB,CAAwBE,OAAxB,CAAgCC,GAAhC,CAAqCC,KAAD,IAAWA,KAAK,CAACC,EAAN,CAASC,QAAT,EAA/C,CAAhB;AACA,WAAON,OAAO,CAACO,IAAR,CAAa,IAAb,CAAP;AACD;;AAEc,QAATC,SAAS,CAACT,SAAD,EAAuB;AACpC,WAAO;AACLU,MAAAA,KAAK,EAAE,YADF;AAELC,MAAAA,OAAO,EAAE,KAAKZ,UAAL,CAAgBC,SAAhB;AAFJ,KAAP;AAID;;AAES,QAAJY,IAAI,CAACZ,SAAD,EAAuB;AAC/B,WAAO;AACLU,MAAAA,KAAK,EAAE,eADF;AAELE,MAAAA,IAAI,EAAEZ,SAAS,CAACE,KAAV,CAAgBD,OAAhB,CAAwBY,SAAxB;AAFD,KAAP;AAID;;AAlBqD","sourcesContent":["import { ShowFragment } from './show-fragment';\nimport { Component } from '../component';\n\nexport class ExtensionsFragment implements ShowFragment {\n  private renderList(component: Component) {\n    const aspects = component.state.aspects.entries.map((entry) => entry.id.toString());\n    return aspects.join('\\n');\n  }\n\n  async renderRow(component: Component) {\n    return {\n      title: 'extensions',\n      content: this.renderList(component),\n    };\n  }\n\n  async json(component: Component) {\n    return {\n      title: 'configuration',\n      json: component.state.aspects.serialize() as any,\n    };\n  }\n}\n"]}