{"version":3,"sources":["aspect-page.tsx"],"names":["GET_COMPONENT","AspectPage","component","ComponentContext","data","variables","id","_legacy","name","aspectList","getHost","get","aspects","length","styles","aspectPage","title","separator","map","aspect","index","aspectBox","icon","config"],"mappings":";;;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;AAEA,MAAMA,aAAa,GAAG,kBAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA,C,CAeA;;AACO,SAASC,UAAT,GAAsB;AAAA;;AAC3B,QAAMC,SAAS,GAAG,yBAAWC,6BAAX,CAAlB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAW,yCAAaJ,aAAb,EAA4B;AAC3CK,IAAAA,SAAS,EAAE;AAAEC,MAAAA,EAAE,EAAEJ,SAAS,CAACI,EAAV,CAAaC,OAAb,CAAqBC;AAA3B;AADgC,GAA5B,CAAjB;AAGA,QAAMC,UAAU,GAAGL,IAAH,aAAGA,IAAH,wCAAGA,IAAI,CAAEM,OAAT,uEAAG,cAAeC,GAAlB,sDAAG,kBAAoBC,OAAvC;;AAEA,MAAIH,UAAU,IAAIA,UAAU,CAACI,MAAX,KAAsB,CAAxC,EAA2C;AACzC,wBACE,+BAAC,oBAAD;AACE,MAAA,KAAK,EAAC,0DADR;AAEE,MAAA,QAAQ,EAAC,oCAFX;AAGE,MAAA,IAAI,EAAG;AAHT,MADF;AAOD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAEC,4BAAOC;AAAvB,kBACE,yDACE,+BAAC,kBAAD;AAAI,IAAA,SAAS,EAAED,4BAAOE;AAAtB,qBADF,eAEE,+BAAC,0BAAD;AAAW,IAAA,SAAS,EAAEF,4BAAOG;AAA7B,IAFF,EAGGR,UAAU,IACTA,UAAU,CAACS,GAAX,CAAe,CAACC,MAAD,EAASC,KAAT,KAAmB;AAChC,wBACE,+BAAC,sBAAD;AACE,MAAA,GAAG,EAAEA,KADP;AAEE,MAAA,SAAS,EAAEN,4BAAOO,SAFpB;AAGE,MAAA,IAAI,EAAEF,MAAM,CAACb,EAHf;AAIE,MAAA,IAAI,EAAEa,MAAM,CAACG,IAJf;AAKE,MAAA,MAAM,EAAEH,MAAM,CAACI,MALjB;AAME,MAAA,IAAI,EAAEJ,MAAM,CAACf;AANf,MADF;AAUD,GAXD,CAJJ,CADF,CADF;AAqBD","sourcesContent":["import { AspectBox } from '@teambit/harmony.ui.aspect-box';\nimport { ComponentContext } from '@teambit/component';\nimport React, { useContext } from 'react';\nimport { useDataQuery } from '@teambit/ui-foundation.ui.hooks.use-data-query';\nimport { gql } from '@apollo/client';\nimport { EmptyBox } from '@teambit/design.ui.empty-box';\nimport { H1 } from '@teambit/documenter.ui.heading';\nimport { Separator } from '@teambit/documenter.ui.separator';\nimport styles from './aspect-page.module.scss';\n\nconst GET_COMPONENT = gql`\n  query ($id: String!) {\n    getHost {\n      get(id: $id) {\n        aspects {\n          id\n          config\n          data\n          icon\n        }\n      }\n    }\n  }\n`;\n\n// TODO: get the docs domain from the community aspect and pass it here as a prop\nexport function AspectPage() {\n  const component = useContext(ComponentContext);\n  const { data } = useDataQuery(GET_COMPONENT, {\n    variables: { id: component.id._legacy.name },\n  });\n  const aspectList = data?.getHost?.get?.aspects;\n\n  if (aspectList && aspectList.length === 0) {\n    return (\n      <EmptyBox\n        title=\"This component is new and doesnâ€™t have any aspects.\"\n        linkText=\"Learn more about component aspects\"\n        link={`https://bit.dev/docs/extending-bit/aspect-overview`}\n      />\n    );\n  }\n\n  return (\n    <div className={styles.aspectPage}>\n      <div>\n        <H1 className={styles.title}>Configuration</H1>\n        <Separator className={styles.separator} />\n        {aspectList &&\n          aspectList.map((aspect, index) => {\n            return (\n              <AspectBox\n                key={index}\n                className={styles.aspectBox}\n                name={aspect.id}\n                icon={aspect.icon}\n                config={aspect.config}\n                data={aspect.data}\n              />\n            );\n          })}\n      </div>\n    </div>\n  );\n}\n"]}