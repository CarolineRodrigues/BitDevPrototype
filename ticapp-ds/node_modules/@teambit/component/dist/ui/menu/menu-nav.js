"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

require("core-js/modules/es.array.iterator.js");

require("core-js/modules/es.array.sort.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MenuNav = MenuNav;

function _extends2() {
  const data = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

  _extends2 = function () {
    return data;
  };

  return data;
}

function _react() {
  const data = _interopRequireDefault(require("react"));

  _react = function () {
    return data;
  };

  return data;
}

function _topBarNav() {
  const data = require("../top-bar-nav");

  _topBarNav = function () {
    return data;
  };

  return data;
}

function _menuModule() {
  const data = _interopRequireDefault(require("./menu.module.scss"));

  _menuModule = function () {
    return data;
  };

  return data;
}

function MenuNav({
  navigationSlot
}) {
  const plugins = navigationSlot.toArray().sort(sortFn);
  return /*#__PURE__*/_react().default.createElement("nav", {
    className: _menuModule().default.navigation
  }, plugins.map(([id, menuItem]) => /*#__PURE__*/_react().default.createElement(_topBarNav().TopBarNav, (0, _extends2().default)({
    key: id
  }, menuItem.props))));
}

function sortFn([, {
  order: first
}], [, {
  order: second
}]) {
  // 0  - equal
  // <0 - first < second
  // >0 - first > second
  return (first !== null && first !== void 0 ? first : 0) - (second !== null && second !== void 0 ? second : 0);
} // // this is the aspect-oriented and serialize-able way to sort plugins.
// const pluginOrder = ['teambit.docs/docs', 'teambit.compositions/compositions', 'teambit.docs/docs'];
// export function toSortedArray<T>(slot: SlotRegistry<T>, order: string[]) {
//   // sort items according to the order
//   const sorted = order.map((x) => [x, slot.get(x)]).filter(([, val]) => !!val) as [string, T][];
//
//   // add all other items
//   const unsorted = slot.toArray().filter(([id]) => order.indexOf(id) < 0);
//
//   return sorted.concat(unsorted);
// }

//# sourceMappingURL=menu-nav.js.map