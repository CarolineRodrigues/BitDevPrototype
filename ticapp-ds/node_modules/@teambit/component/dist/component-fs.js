"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

require("core-js/modules/es.regexp.exec.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

function _anyFs() {
  const data = require("@teambit/any-fs");

  _anyFs = function () {
    return data;
  };

  return data;
}

function _eol() {
  const data = require("@teambit/legacy/dist/utils/eol");

  _eol = function () {
    return data;
  };

  return data;
}

function _path() {
  const data = _interopRequireDefault(require("path"));

  _path = function () {
    return data;
  };

  return data;
}

function _minimatch() {
  const data = _interopRequireDefault(require("minimatch"));

  _minimatch = function () {
    return data;
  };

  return data;
}

/**
 * The virtual component filesystem
 */
class ComponentFS extends _anyFs().MemoryFS {
  constructor(
  /**
   * array of all fs files.
   */
  files) {
    super();
    this.files = files;
  }
  /**
   * hash to represent all contents within this filesystem volume.
   */


  get hash() {
    return '';
  }
  /**
   * filter all component files by regex.
   */


  byRegex(extension) {
    return this.files.filter(file => file.path.match(extension));
  }
  /**
   * filter all files using an array of glob patterns.
   */


  byGlob(patterns) {
    return this.files.filter(file => {
      return patterns.find(pattern => {
        const match = (0, _minimatch().default)(file.relative, pattern);
        return match;
      });
    });
  }

  toObject() {
    return this.files.map(file => {
      return {
        path: file.path,
        contents: file.contents
      };
    });
  }

  static fromVinyls(files) {
    const fs = new ComponentFS(files);
    files.forEach(file => {
      let dirPath = file.relativeDir;
      if (!dirPath.startsWith('/')) dirPath = _path().default.join('/', dirPath);
      fs.mkdirpSync(dirPath);
      fs.writeFileSync(`/${file.relative}`, (0, _eol().auto)(file.contents || ''));
    });
    return fs;
  }

}

exports.default = ComponentFS;

//# sourceMappingURL=component-fs.js.map