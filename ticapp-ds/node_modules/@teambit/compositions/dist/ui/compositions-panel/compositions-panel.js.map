{"version":3,"sources":["compositions-panel.tsx"],"names":["CompositionsPanel","url","compositions","onSelectComposition","onSelect","active","className","rest","handleSelect","selected","map","composition","identifier","styles","linkWrapper","panelLink","box","name","displayName","right","icon"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAGA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;AASO,SAASA,iBAAT,OAOoB;AAAA,MAPO;AAChCC,IAAAA,GADgC;AAEhCC,IAAAA,YAFgC;AAGhCC,IAAAA,mBAAmB,EAAEC,QAHW;AAIhCC,IAAAA,MAJgC;AAKhCC,IAAAA;AALgC,GAOP;AAAA,MADtBC,IACsB;AACzB,QAAMC,YAAY,GAAG,0BAClBC,QAAD,IAA2B;AACzBL,IAAAA,QAAQ,IAAIA,QAAQ,CAACK,QAAD,CAApB;AACD,GAHkB,EAInB,CAACL,QAAD,CAJmB,CAArB;AAOA,sBACE,kEAAQG,IAAR;AAAc,IAAA,SAAS,EAAE,2BAAWD,SAAX;AAAzB,MACGJ,YAAY,CAACQ,GAAb,CAAkBC,WAAD,IAAiB;AACjC;AACA,wBACE;AACE,MAAA,GAAG,EAAEA,WAAW,CAACC,UADnB;AAEE,MAAA,SAAS,EAAE,2BAAWC,mCAAOC,WAAlB,EAA+BH,WAAW,KAAKN,MAAhB,IAA0BQ,mCAAOR,MAAhE;AAFb,oBAIE;AAAG,MAAA,SAAS,EAAEQ,mCAAOE,SAArB;AAAgC,MAAA,OAAO,EAAE,MAAMP,YAAY,CAACG,WAAD;AAA3D,oBACE;AAAM,MAAA,SAAS,EAAEE,mCAAOG;AAAxB,MADF,eAEE;AAAM,MAAA,SAAS,EAAEH,mCAAOI;AAAxB,OAA+BN,WAAW,CAACO,WAA3C,CAFF,CAJF,eAQE;AAAK,MAAA,SAAS,EAAEL,mCAAOM;AAAvB,oBACE;AACE,MAAA,SAAS,EAAEN,mCAAOE,SADpB;AAEE,MAAA,MAAM,EAAC,QAFT;AAGE,MAAA,GAAG,EAAC,qBAHN;AAIE,MAAA,IAAI,EAAG,GAAEd,GAAI,IAAGU,WAAW,CAACC,UAAW;AAJzC,oBAME,+BAAC,0BAAD;AAAM,MAAA,SAAS,EAAEC,mCAAOO,IAAxB;AAA8B,MAAA,EAAE,EAAC;AAAjC,MANF,CADF,CARF,CADF;AAqBD,GAvBA,CADH,CADF;AA4BD","sourcesContent":["import { Icon } from '@teambit/evangelist.elements.icon';\nimport classNames from 'classnames';\nimport React, { useCallback } from 'react';\n\nimport { Composition } from '../../composition';\nimport styles from './compositions-panel.module.scss';\n\nexport type CompositionsPanelProps = {\n  compositions: Composition[];\n  onSelectComposition: (composition: Composition) => void;\n  active?: Composition;\n  url: string;\n} & React.HTMLAttributes<HTMLUListElement>;\n\nexport function CompositionsPanel({\n  url,\n  compositions,\n  onSelectComposition: onSelect,\n  active,\n  className,\n  ...rest\n}: CompositionsPanelProps) {\n  const handleSelect = useCallback(\n    (selected: Composition) => {\n      onSelect && onSelect(selected);\n    },\n    [onSelect]\n  );\n\n  return (\n    <ul {...rest} className={classNames(className)}>\n      {compositions.map((composition) => {\n        // TODO - move to composition panel node\n        return (\n          <li\n            key={composition.identifier}\n            className={classNames(styles.linkWrapper, composition === active && styles.active)}\n          >\n            <a className={styles.panelLink} onClick={() => handleSelect(composition)}>\n              <span className={styles.box}></span>\n              <span className={styles.name}>{composition.displayName}</span>\n            </a>\n            <div className={styles.right}>\n              <a\n                className={styles.panelLink}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href={`${url}&${composition.identifier}`}\n              >\n                <Icon className={styles.icon} of=\"open-tab\" />\n              </a>\n            </div>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n"]}