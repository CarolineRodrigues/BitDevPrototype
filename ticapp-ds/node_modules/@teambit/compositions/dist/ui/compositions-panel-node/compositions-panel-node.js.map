{"version":3,"sources":["compositions-panel-node.tsx"],"names":["CompositionsPanelNode","name","onClick","isActive","rest","styles","linkWrapper","active","panelLink"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAQO,SAASA,qBAAT,OAAiG;AAAA,MAAlE;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,GAAkE;AAAA,MAApCC,IAAoC;AACtG,sBACE,qCAAQA,IAAR,eACE;AAAK,IAAA,SAAS,EAAE,2BAAWC,uCAAOC,WAAlB,EAA+B;AAAE,OAACD,uCAAOE,MAAR,GAAiBJ;AAAnB,KAA/B;AAAhB,kBACE;AAAG,IAAA,SAAS,EAAEE,uCAAOG,SAArB;AAAgC,IAAA,OAAO,EAAEN;AAAzC,KACGD,IADH,CADF,CADF,CADF;AASD","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\n\nimport styles from './compositions-panel-node.module.scss';\n\nexport type CompositionsPanelNodeProps = {\n  name: string;\n  onClick: (event: React.MouseEvent<HTMLAnchorElement>) => void;\n  isActive: boolean;\n} & React.HTMLAttributes<HTMLLIElement>;\n\nexport function CompositionsPanelNode({ name, onClick, isActive, ...rest }: CompositionsPanelNodeProps) {\n  return (\n    <li {...rest}>\n      <div className={classNames(styles.linkWrapper, { [styles.active]: isActive })}>\n        <a className={styles.panelLink} onClick={onClick}>\n          {name}\n        </a>\n      </div>\n    </li>\n  );\n}\n"]}