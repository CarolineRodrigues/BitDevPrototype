{"version":3,"sources":["compositions.tsx"],"names":["Compositions","menuBarWidgets","emptyState","component","ComponentContext","selected","selectComposition","compositions","selectedRef","current","properties","id","prevId","identifier","next","find","c","isMobile","showSidebar","length","isSidebarOpen","setSidebarOpenness","sidebarOpenness","Layout","row","left","compositionUrl","currentCompositionUrl","compositionParams","setCompositionParams","queryParams","queryString","stringify","styles","compositionsPage","menuBar","openInNewTab","splitter","e","stopPropagation","x","collapser","right","tabsContainer","tabs","tabContent","compost","CompositionContent","env","environment","EmptyStateTemplate","get","host","noCompositionsPage","title","separator","buildStatus","buildStatusMessage","compositionsIframe"],"mappingssB;AAAEC,EAAAA,cAAF;AAAkBC,EAAAA;AAAlB,CAAtB,EAAwE;AAC7E,QAAMC,SAAS,GAAG,yBAAWC,6BAAX,CAAlB;AACA,QAAM,CAACC,QAAD,EAAWC,iBAAX,IAAgC,uBAAS,uBAAKH,SAAS,CAACI,YAAf,CAAT,CAAtC;AACA,QAAMC,WAAW,GAAG,qBAAOH,QAAP,CAApB;AACAG,EAAAA,WAAW,CAACC,OAAZ,GAAsBJ,QAAtB;AAEA,QAAMK,UAAU,GAAG,8BAAQP,SAAS,CAACQ,EAAlB,CAAnB,CAN6E,CAQ7E;AACA;;AACA,0BAAU,MAAM;AAAA;;AACd,UAAMC,MAAM,2BAAGJ,WAAW,CAACC,OAAf,yDAAG,qBAAqBI,UAApC;AACA,UAAMC,IAAI,GAAGX,SAAS,CAACI,YAAV,CAAuBQ,IAAvB,CAA6BC,CAAD,IAAOA,CAAC,CAACH,UAAF,KAAiBD,MAApD,KAA+DT,SAAS,CAACI,YAAV,CAAuB,CAAvB,CAA5E;AAEAD,IAAAA,iBAAiB,CAACQ,IAAD,CAAjB;AACD,GALD,EAKG,CAACX,SAAD,CALH;AAMA,QAAMc,QAAQ,GAAG,yCAAjB;AACA,QAAMC,WAAW,GAAG,CAACD,QAAD,IAAad,SAAS,CAACI,YAAV,CAAuBY,MAAvB,GAAgC,CAAjE;AACA,QAAM,CAACC,aAAD,EAAgBC,kBAAhB,IAAsC,uBAASH,WAAT,CAA5C;AAEA,QAAMI,eAAe,GAAGF,aAAa,GAAGG,kCAAOC,GAAV,GAAgBD,kCAAOE,IAA5D;AAEA,QAAMC,cAAc,GAAG,+BAAavB,SAAb,EAAwB,cAAxB,CAAvB;AACA,QAAMwB,qBAAqB,GAAG,+BAAaxB,SAAb,EAAwB,cAAxB,EAAwCE,QAAxC,aAAwCA,QAAxC,uBAAwCA,QAAQ,CAAEQ,UAAlD,CAA9B;AAEA,QAAM,CAACe,iBAAD,EAAoBC,oBAApB,IAA4C,uBAA8B,EAA9B,CAAlD;AACA,QAAMC,WAAW,GAAG,sBAAQ,MAAMC,uBAAYC,SAAZ,CAAsBJ,iBAAtB,CAAd,EAAwD,CAACA,iBAAD,CAAxD,CAApB,CA1B6E,CA4B7E;;AACA,0BAAU,MAAMP,kBAAkB,CAACH,WAAD,CAAlC,EAAiD,CAACA,WAAD,CAAjD;AAEA,sBACE,+BAAC,iDAAD;AAA4B,IAAA,WAAW,EAAEU,iBAAzC;AAA4D,IAAA,cAAc,EAAEC;AAA5E,kBACE,+BAAC,oCAAD;AAAW,IAAA,MAAM,EAAEP,eAAnB;AAAoC,IAAA,IAAI,EAAC,KAAzC;AAA+C,IAAA,SAAS,EAAEW,8BAAOC;AAAjE,kBACE,+BAAC,+BAAD;AAAM,IAAA,SAAS,EAAED,8BAAOR;AAAxB,kBACE,+BAAC,qCAAD;AAAqB,IAAA,cAAc,EAAExB,cAArC;AAAqD,IAAA,SAAS,EAAEgC,8BAAOE;AAAvE,kBACE,+BAAC,2BAAD;AAAY,IAAA,QAAQ,MAApB;AAAqB,IAAA,IAAI,EAAER,qBAA3B;AAAkD,IAAA,SAAS,EAAEM,8BAAOG;AAApE,kBACE,+BAAC,6BAAD;AAAc,IAAA,IAAI,EAAC;AAAnB,IADF,CADF,CADF,eAME,+BAAC,kBAAD;AACE,IAAA,UAAU,EAAElC,UADd;AAEE,IAAA,SAAS,EAAEC,SAFb;AAGE,IAAA,QAAQ,EAAEE,QAHZ;AAIE,IAAA,WAAW,EAAEyB;AAJf,IANF,CADF,eAcE,+BAAC,yCAAD;AAAe,IAAA,SAAS,EAAEG,8BAAOI;AAAjC,kBACE,+BAAC,kCAAD;AACE,IAAA,SAAS,EAAC,MADZ;AAEE,IAAA,MAAM,EAAEjB,aAFV;AAGE,IAAA,WAAW,EAAGkB,CAAD,IAAOA,CAAC,CAACC,eAAF,EAHtB,CAG2C;AAH3C;AAIE,IAAA,OAAO,EAAE,MAAMlB,kBAAkB,CAAEmB,CAAD,IAAO,CAACA,CAAT,CAJnC;AAKE,IAAA,cAAc,EAAG,GAAEpB,aAAa,GAAG,MAAH,GAAY,MAAO,oBALrD;AAME,IAAA,SAAS,EAAEa,8BAAOQ;AANpB,IADF,CAdF,eAwBE,+BAAC,+BAAD;AAAM,IAAA,SAAS,EAAER,8BAAOS;AAAxB,kBACE,+BAAC,+BAAD,qBACE,+BAAC,sBAAD;AAAc,IAAA,SAAS,EAAET,8BAAOU;AAAhC,kBACE,+BAAC,iBAAD;AAAS,IAAA,SAAS,EAAEV,8BAAOW;AAA3B,kBACE,+BAAC,aAAD,uBADF,eAEE,+BAAC,aAAD,qBAFF,CADF,eAKE,+BAAC,kBAAD;AAAU,IAAA,SAAS,EAAEX,8BAAOY;AAA5B,kBACE,+BAAC,sCAAD;AACE,IAAA,mBAAmB,EAAEvC,iBADvB;AAEE,IAAA,GAAG,EAAEoB,cAFP;AAGE,IAAA,YAAY,EAAEvB,SAAS,CAACI,YAH1B;AAIE,IAAA,MAAM,EAAEF,QAJV;AAKE,IAAA,SAAS,EAAE4B,8BAAOa;AALpB,IADF,CALF,eAcE,+BAAC,kBAAD;AAAU,IAAA,SAAS,EAAEb,8BAAOY;AAA5B,KACGnC,UAAU,IAAIA,UAAU,CAACS,MAAX,GAAoB,CAAlC,gBAAsC,+BAAC,yBAAD;AAAW,IAAA,IAAI,EAAET,UAAjB;AAA6B,IAAA,YAAY;AAAzC,IAAtC,gBAAqF,2CADxF,CAdF,CADF,CADF,CAxBF,CADF,CADF;AAmDD;;AASD,SAASqC,kBAAT,CAA4B;AAAE5C,EAAAA,SAAF;AAAaE,EAAAA,QAAb;AAAuByB,EAAAA,WAAvB;AAAoC5B,EAAAA;AAApC,CAA5B,EAAuG;AAAA;;AACrG,QAAM8C,GAAG,4BAAG7C,SAAS,CAAC8C,WAAb,0DAAG,sBAAuBtC,EAAnC;AACA,QAAMuC,kBAAkB,GAAGhD,UAAH,aAAGA,UAAH,uBAAGA,UAAU,CAAEiD,GAAZ,CAAgBH,GAAG,IAAI,EAAvB,CAA3B,CAFqG,CAE9C;;AAEvD,MAAI7C,SAAS,CAACI,YAAV,CAAuBY,MAAvB,KAAkC,CAAlC,IAAuChB,SAAS,CAACiD,IAAV,KAAmB,6BAA1D,IAA2FF,kBAA/F,EAAmH;AACjH,wBACE;AAAK,MAAA,SAAS,EAAEjB,8BAAOoB;AAAvB,oBACE,yDACE,+BAAC,mBAAD;AAAI,MAAA,SAAS,EAAEpB,8BAAOqB;AAAtB,sBADF,eAEE,+BAAC,sBAAD;AAAW,MAAA,gBAAgB,MAA3B;AAA4B,MAAA,SAAS,EAAErB,8BAAOsB;AAA9C,MAFF,eAGE,+BAAC,sBAAD;AACE,MAAA,KAAK,EAAC,MADR;AAEE,MAAA,KAAK,EAAC;AAFR,oBAKE,+BAAC,kBAAD,qBACE,+BAAC,kBAAD,OADF,CALF,CAHF,CADF,CADF;AAiBD;;AAED,MAAI,CAAApD,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEqD,WAAX,MAA2B,SAA3B,IAAwC,CAAArD,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEiD,IAAX,MAAoB,qBAAhE,EACE,oBACE,+BAAC,qCAAD;AAAmB,IAAA,SAAS,EAAEnB,8BAAOwB,kBAArC;AAAyD,IAAA,MAAM,EAAC,YAAhE;AAA6E,IAAA,KAAK,EAAC;AAAnF,iCADF;AAKF,MAAI,CAAAtD,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEqD,WAAX,MAA2B,QAA3B,IAAuC,CAAArD,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEiD,IAAX,MAAoB,qBAA/D,EACE,oBACE,+BAAC,qCAAD;AACE,IAAA,SAAS,EAAEnB,8BAAOwB,kBADpB;AAEE,IAAA,MAAM,EAAC,SAFT;AAGE,IAAA,KAAK,EAAC;AAHR,IADF,CA/BmG,CAuCrG;;AACA,MAAItD,SAAS,CAACI,YAAV,CAAuBY,MAAvB,KAAkC,CAAtC,EAAyC;AACvC,wBACE,+BAAC,oBAAD;AACE,MAAA,KAAK,EAAC,+CADR;AAEE,MAAA,QAAQ,EAAC,kCAFX;AAGE,MAAA,IAAI,EAAG;AAHT,MADF;AAOD;;AAED,sBACE,+BAAC,0BAAD;AACE,IAAA,SAAS,EAAEc,8BAAOyB,kBADpB;AAEE,IAAA,SAAS,EAAEvD,SAFb;AAGE,IAAA,WAAW,EAAEE,QAHf;AAIE,IAAA,WAAW,EAAEyB;AAJf,IADF;AAQD","sourcesContent":["import React, { useContext, useEffect, useState, useMemo, useRef, ReactNode } from 'react';\nimport head from 'lodash.head';\nimport queryString from 'query-string';\nimport { ThemeContext } from '@teambit/documenter.theme.theme-context';\nimport { SplitPane, Pane, Layout } from '@teambit/base-ui.surfaces.split-pane.split-pane';\nimport { HoverSplitter } from '@teambit/base-ui.surfaces.split-pane.hover-splitter';\nimport { ComponentContext, ComponentModel } from '@teambit/component';\nimport { PropTable } from '@teambit/documenter.ui.property-table';\nimport { Tab, TabContainer, TabList, TabPanel } from '@teambit/panels';\nimport { useDocs } from '@teambit/docs.ui.queries.get-docs';\nimport { Collapser } from '@teambit/ui-foundation.ui.buttons.collapser';\nimport { EmptyBox } from '@teambit/design.ui.empty-box';\nimport { toPreviewUrl } from '@teambit/preview.ui.component-preview';\nimport { useIsMobile } from '@teambit/ui-foundation.ui.hooks.use-is-mobile';\nimport { CompositionsMenuBar } from '@teambit/compositions.ui.compositions-menu-bar';\nimport { CompositionContextProvider } from '@teambit/compositions.ui.hooks.use-composition';\nimport { MDXLayout } from '@teambit/mdx.ui.mdx-layout';\nimport { Separator } from '@teambit/design.ui.separator';\nimport { H1 } from '@teambit/documenter.ui.heading';\nimport { AlertCard } from '@teambit/design.ui.alert-card';\nimport { NativeLink } from '@teambit/base-ui.routing.native-link';\nimport { OptionButton } from '@teambit/design.ui.input.option-button';\nimport { StatusMessageCard } from '@teambit/design.ui.surfaces.status-message-card';\nimport { EmptyStateSlot } from './compositions.ui.runtime';\nimport { Composition } from './composition';\nimport styles from './compositions.module.scss';\nimport { ComponentComposition } from './ui';\nimport { CompositionsPanel } from './ui/compositions-panel/compositions-panel';\nimport type { CompositionsMenuSlot } from './compositions.ui.runtime';\n\nexport type MenuBarWidget = {\n  location: 'start' | 'end';\n  content: ReactNode;\n};\nexport type CompositionsProp = { menuBarWidgets?: CompositionsMenuSlot; emptyState?: EmptyStateSlot };\n\nexport function Compositions({ menuBarWidgets, emptyState }: CompositionsProp) {\n  const component = useContext(ComponentContext);\n  const [selected, selectComposition] = useState(head(component.compositions));\n  const selectedRef = useRef(selected);\n  selectedRef.current = selected;\n\n  const properties = useDocs(component.id);\n\n  // reset selected composition when component changes.\n  // this does trigger renderer, but perf seems to be ok\n  useEffect(() => {\n    const prevId = selectedRef.current?.identifier;\n    const next = component.compositions.find((c) => c.identifier === prevId) || component.compositions[0];\n\n    selectComposition(next);\n  }, [component]);\n  const isMobile = useIsMobile();\n  const showSidebar = !isMobile && component.compositions.length > 0;\n  const [isSidebarOpen, setSidebarOpenness] = useState(showSidebar);\n\n  const sidebarOpenness = isSidebarOpen ? Layout.row : Layout.left;\n\n  const compositionUrl = toPreviewUrl(component, 'compositions');\n  const currentCompositionUrl = toPreviewUrl(component, 'compositions', selected?.identifier);\n\n  const [compositionParams, setCompositionParams] = useState<Record<string, any>>({});\n  const queryParams = useMemo(() => queryString.stringify(compositionParams), [compositionParams]);\n\n  // collapse sidebar when empty, reopen when not\n  useEffect(() => setSidebarOpenness(showSidebar), [showSidebar]);\n\n  return (\n    <CompositionContextProvider queryParams={compositionParams} setQueryParams={setCompositionParams}>\n      <SplitPane layout={sidebarOpenness} size=\"85%\" className={styles.compositionsPage}>\n        <Pane className={styles.left}>\n          <CompositionsMenuBar menuBarWidgets={menuBarWidgets} className={styles.menuBar}>\n            <NativeLink external href={currentCompositionUrl} className={styles.openInNewTab}>\n              <OptionButton icon=\"open-tab\" />\n            </NativeLink>\n          </CompositionsMenuBar>\n          <CompositionContent\n            emptyState={emptyState}\n            component={component}\n            selected={selected}\n            queryParams={queryParams}\n          />\n        </Pane>\n        <HoverSplitter className={styles.splitter}>\n          <Collapser\n            placement=\"left\"\n            isOpen={isSidebarOpen}\n            onMouseDown={(e) => e.stopPropagation()} // avoid split-pane drag\n            onClick={() => setSidebarOpenness((x) => !x)}\n            tooltipContent={`${isSidebarOpen ? 'Hide' : 'Show'} side compositions`}\n            className={styles.collapser}\n          />\n        </HoverSplitter>\n        <Pane className={styles.right}>\n          <ThemeContext>\n            <TabContainer className={styles.tabsContainer}>\n              <TabList className={styles.tabs}>\n                <Tab>compositions</Tab>\n                <Tab>properties</Tab>\n              </TabList>\n              <TabPanel className={styles.tabContent}>\n                <CompositionsPanel\n                  onSelectComposition={selectComposition}\n                  url={compositionUrl}\n                  compositions={component.compositions}\n                  active={selected}\n                  className={styles.compost}\n                />\n              </TabPanel>\n              <TabPanel className={styles.tabContent}>\n                {properties && properties.length > 0 ? <PropTable rows={properties} showListView /> : <div />}\n              </TabPanel>\n            </TabContainer>\n          </ThemeContext>\n        </Pane>\n      </SplitPane>\n    </CompositionContextProvider>\n  );\n}\n\ntype CompositionContentProps = {\n  component: ComponentModel;\n  selected?: Composition;\n  queryParams?: string | string[];\n  emptyState?: EmptyStateSlot;\n};\n\nfunction CompositionContent({ component, selected, queryParams, emptyState }: CompositionContentProps) {\n  const env = component.environment?.id;\n  const EmptyStateTemplate = emptyState?.get(env || ''); // || defaultTemplate;\n\n  if (component.compositions.length === 0 && component.host === 'teambit.workspace/workspace' && EmptyStateTemplate) {\n    return (\n      <div className={styles.noCompositionsPage}>\n        <div>\n          <H1 className={styles.title}>Compositions</H1>\n          <Separator isPresentational className={styles.separator} />\n          <AlertCard\n            level=\"info\"\n            title=\"There are no\n              compositions for this Component. Learn how to add compositions:\"\n          >\n            <MDXLayout>\n              <EmptyStateTemplate />\n            </MDXLayout>\n          </AlertCard>\n        </div>\n      </div>\n    );\n  }\n\n  if (component?.buildStatus === 'pending' && component?.host === 'teambit.scope/scope')\n    return (\n      <StatusMessageCard className={styles.buildStatusMessage} status=\"PROCESSING\" title=\"component preview pending\">\n        this might take some time\n      </StatusMessageCard>\n    );\n  if (component?.buildStatus === 'failed' && component?.host === 'teambit.scope/scope')\n    return (\n      <StatusMessageCard\n        className={styles.buildStatusMessage}\n        status=\"FAILURE\"\n        title=\"failed to get component preview \"\n      ></StatusMessageCard>\n    );\n\n  // TODO: get the docs domain from the community aspect and pass it here as a prop\n  if (component.compositions.length === 0) {\n    return (\n      <EmptyBox\n        title=\"There are no compositions for this component.\"\n        linkText=\"Learn how to create compositions\"\n        link={`https://bit.dev/docs/dev-services-overview/compositions/compositions-overview`}\n      />\n    );\n  }\n\n  return (\n    <ComponentComposition\n      className={styles.compositionsIframe}\n      component={component}\n      composition={selected}\n      queryParams={queryParams}\n    />\n  );\n}\n"]}