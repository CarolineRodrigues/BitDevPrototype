"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

require("core-js/modules/es.array.iterator.js");

require("core-js/modules/es.promise.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SchemaCommand = void 0;

function _defineProperty2() {
  const data = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

  _defineProperty2 = function () {
    return data;
  };

  return data;
}

function _scope() {
  const data = require("@teambit/scope");

  _scope = function () {
    return data;
  };

  return data;
}

class SchemaCommand {
  constructor(schema, component) {
    this.schema = schema;
    this.component = component;
    (0, _defineProperty2().default)(this, "name", 'schema <id>');
    (0, _defineProperty2().default)(this, "description", 'shows the API schema of a certain component.');
    (0, _defineProperty2().default)(this, "group", 'component');
    (0, _defineProperty2().default)(this, "options", [['j', 'json', 'return the component data in json format']]);
  }

  async report([idStr]) {
    const host = this.component.getHost();
    const id = await host.resolveComponentId(idStr);
    const component = await host.get(id);
    if (!component) throw new (_scope().ComponentNotFound)(id);
    const schema = await this.schema.getSchema(component);
    return schema.toString();
  }

}

exports.SchemaCommand = SchemaCommand;

//# sourceMappingURL=schema.cmd.js.map