{"version":3,"sources":["schema.graphql.ts"],"names":["schemaSchema","schema","typeDefs","resolvers","ComponentHost","getSchema","host","id","componentId","resolveComponentId","component","get","empty","exports","docs"],"mappings":";;;;;;;;;;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAIO,SAASA,YAAT,CAAsBC,MAAtB,EAA0C;AAC/C,SAAO;AACLC,IAAAA,QAAQ,EAAE,0BAAI;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KATS;AAULC,IAAAA,SAAS,EAAE;AACTC,MAAAA,aAAa,EAAE;AACbC,QAAAA,SAAS,EAAE,OAAOC,IAAP,EAA+B;AAAEC,UAAAA;AAAF,SAA/B,KAA0D;AACnE,gBAAMC,WAAW,GAAG,MAAMF,IAAI,CAACG,kBAAL,CAAwBF,EAAxB,CAA1B;AACA,gBAAMG,SAAS,GAAG,MAAMJ,IAAI,CAACK,GAAL,CAASH,WAAT,CAAxB;AACA,gBAAMI,KAAK,GAAG;AACZC,YAAAA,OAAO,EAAE;AADG,WAAd;AAIA,cAAI,CAACH,SAAL,EAAgB,OAAOE,KAAP;AAChB,gBAAME,IAAI,GAAG,MAAMb,MAAM,CAACI,SAAP,CAAiBK,SAAjB,CAAnB;AACA,cAAI,CAACI,IAAL,EAAW,OAAOF,KAAP;AAEX,iBAAOE,IAAP;AACD;AAbY;AADN;AAVN,GAAP;AA4BD","sourcesContent":["import { ComponentFactory } from '@teambit/component';\nimport gql from 'graphql-tag';\n\nimport { SchemaMain } from './schema.main.runtime';\n\nexport function schemaSchema(schema: SchemaMain) {\n  return {\n    typeDefs: gql`\n      extend type ComponentHost {\n        getSchema(id: String!): SchemaDocs\n      }\n\n      type SchemaDocs {\n        exports: [String]\n      }\n    `,\n    resolvers: {\n      ComponentHost: {\n        getSchema: async (host: ComponentFactory, { id }: { id: string }) => {\n          const componentId = await host.resolveComponentId(id);\n          const component = await host.get(componentId);\n          const empty = {\n            exports: [],\n          };\n\n          if (!component) return empty;\n          const docs = await schema.getSchema(component);\n          if (!docs) return empty;\n\n          return docs;\n        },\n      },\n    },\n  };\n}\n"]}