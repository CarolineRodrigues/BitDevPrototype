{"version":3,"sources":["html-docs-app.ts"],"names":["htmlDocsRoot","args","Provider","componentId","docs","compositions","rest","reactCompositions","key","value"],"mappings":";;;;;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEe,SAASA,YAAT,CAAsB,GAAGC,IAAzB,EAAoD;AACjE,QAAM,CAACC,QAAD,EAAWC,WAAX,EAAwBC,IAAxB,EAA8BC,YAA9B,EAA4C,GAAGC,IAA/C,IAAuDL,IAA7D,CADiE,CAGjE;AACA;;AACA,QAAMM,iBAAiB,GAAG,uBAAUF,YAAV,EAAwB,CAACG,GAAD,EAAMC,KAAN,KAAgB,CAACD,GAAD,EAAM,gCAAYC,KAAZ,CAAN,CAAxC,CAA1B;AAEA,SAAO,wBAASP,QAAT,EAAmBC,WAAnB,EAAgCC,IAAhC,EAAsCG,iBAAtC,EAAyD,GAAGD,IAA5D,CAAP;AACD","sourcesContent":["import mapObject from 'map-obj';\nimport DocsRoot, { ReactDocsRootParams } from '@teambit/react.ui.docs-app';\nimport { htmlToReact } from './html-to-react';\n\nexport default function htmlDocsRoot(...args: ReactDocsRootParams) {\n  const [Provider, componentId, docs, compositions, ...rest] = args;\n\n  // should be mapObject<Record<string, any>, Record<string, () => any>>\n  // @ts-ignore TODO fix\n  const reactCompositions = mapObject(compositions, (key, value) => [key, htmlToReact(value as HTMLElement)]);\n\n  return DocsRoot(Provider, componentId, docs, reactCompositions, ...rest);\n}\n"]}