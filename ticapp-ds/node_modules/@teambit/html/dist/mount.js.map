{"version":3,"sources":["mount.ts"],"names":["withProviders","ensureRootElementInBody","root","document","createElement","id","body","appendChild","getRoot","getElementById","mountHtmlComposition","composition"],"mappings":";;;;;;;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAFA;AACA;AAIA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACO,SAASA,aAAT,GAAyB;AAC9B,SAAQ,aAAR;AACD;;AAED,SAASC,uBAAT,GAAmC;AACjC,QAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAb;AACAF,EAAAA,IAAI,CAACG,EAAL,GAAU,MAAV;AACAF,EAAAA,QAAQ,CAACG,IAAT,CAAcC,WAAd,CAA0BL,IAA1B;AACA,SAAOA,IAAP;AACD;;AAED,MAAMM,OAAO,GAAG,MAAML,QAAQ,CAACM,cAAT,CAAwB,MAAxB,KAAmCR,uBAAuB,EAAhF;;AAEe,SAASS,oBAAT,CAA8BC,WAA9B,EAA4D;AACzE,QAAMT,IAAI,GAAGM,OAAO,EAApB;AACA,kDAAsBN,IAAtB,EAA4BS,WAA5B;AACD","sourcesContent":["// import { RenderingContext } from '@teambit/preview';\n// import { StandaloneNotFoundPage } from '@teambit/design.ui.pages.standalone-not-found-page';\nimport { RenderHtmlComposition } from './render-composition';\nimport { HtmlComposition } from './interfaces';\n\n// TODO implement wrapping for providers with html env\n// function wrap(Component: ComponentType, WrapperComponent?: ComponentType): ComponentType {\n//   function Wrapper({ children }: { children?: ReactNode }) {\n\n//   return Wrapper;\n// }\n\n/**\n * HOC to wrap and mount all registered providers into the DOM.\n * TODO implement for regular html providers/wrappers with wrap function above\n */\nexport function withProviders() {\n  return `<div></div>`;\n}\n\nfunction ensureRootElementInBody() {\n  const root = document.createElement('div');\n  root.id = 'root';\n  document.body.appendChild(root);\n  return root;\n}\n\nconst getRoot = () => document.getElementById('root') || ensureRootElementInBody();\n\nexport default function mountHtmlComposition(composition: HtmlComposition) {\n  const root = getRoot();\n  RenderHtmlComposition(root, composition);\n}\n"]}