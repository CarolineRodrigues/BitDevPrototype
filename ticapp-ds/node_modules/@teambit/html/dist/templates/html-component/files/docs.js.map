{"version":3,"sources":["docs.ts"],"names":["docsFile","context","name","namePascalCase","Name","relativePath","content"],"mappings":";;;;;;;AAEO,MAAMA,QAAQ,GAAIC,OAAD,IAA+B;AACrD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,cAAc,EAAEC;AAAxB,MAAiCH,OAAvC;AAEA,SAAO;AACLI,IAAAA,YAAY,EAAG,GAAEH,IAAK,WADjB;AAELI,IAAAA,OAAO,EAAG;AACd,kBAAkBF,IAAK;AACvB;AACA;AACA;AACA,WAAWA,IAAK,cAAaF,IAAK;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAEE,IAAK;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAEA,IAAK;AACP;AACA;AA1BS,GAAP;AA4BD,CA/BM","sourcesContent":["import { ComponentContext } from '@teambit/generator';\n\nexport const docsFile = (context: ComponentContext) => {\n  const { name, namePascalCase: Name } = context;\n\n  return {\n    relativePath: `${name}.docs.mdx`,\n    content: `---\ndescription: 'A ${Name} component.'\nlabels: ['label1', 'label2', 'label3']\n---\n\nimport { ${Name} } from './${name}';\n\n## Vanilla JS Component for rendering text\n\nA basic div that renders some text\n\n### Component usage\n\\`\\`\\`js\n${Name}(\"Some basic composition text\");\n\\`\\`\\`\nThis outputs html as a string, which you can convert to a dom fragment, which can then be placed directly on the dom,\nusing our helper function [RenderTemplate](https://bit.dev/teambit/html/modules/render-template)\n\n### Using props to customize the text\n\nModify the text to see it change live:\n\\`\\`\\`js live\n${Name}(\"Some basic composition text\");\n\\`\\`\\`\n`,\n  };\n};\n"]}