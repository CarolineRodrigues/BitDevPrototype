{"version":3,"sources":["dev-dependencies.fragment.ts"],"names":["DevDependenciesFragment","constructor","depResolver","renderDevDependencies","component","deps","getDependencies","renderRow","title","content"],"mappings":";;;;;;;;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEO,MAAMA,uBAAN,CAAsD;AAC3DC,EAAAA,WAAW,CAASC,WAAT,EAA8C;AAAA,SAArCA,WAAqC,GAArCA,WAAqC;AAAE;;AAEhC,QAArBC,qBAAqB,CAACC,SAAD,EAAuB;AAChD,UAAMC,IAAI,GAAG,MAAM,KAAKH,WAAL,CAAiBI,eAAjB,CAAiCF,SAAjC,CAAnB;AACA,WAAO,kDAAqBC,IAArB,EAA2B,KAA3B,CAAP;AACD;;AAEc,QAATE,SAAS,CAACH,SAAD,EAAuB;AACpC,WAAO;AACLI,MAAAA,KAAK,EAAE,kBADF;AAELC,MAAAA,OAAO,EAAE,MAAM,KAAKN,qBAAL,CAA2BC,SAA3B;AAFV,KAAP;AAID;;AAb0D","sourcesContent":["import { ShowFragment, Component } from '@teambit/component';\nimport { DependencyResolverMain } from '../dependency-resolver.main.runtime';\nimport { serializeByLifecycle } from './serialize-by-lifecycle';\n\nexport class DevDependenciesFragment implements ShowFragment {\n  constructor(private depResolver: DependencyResolverMain) {}\n\n  async renderDevDependencies(component: Component) {\n    const deps = await this.depResolver.getDependencies(component);\n    return serializeByLifecycle(deps, 'dev');\n  }\n\n  async renderRow(component: Component) {\n    return {\n      title: 'dev dependencies',\n      content: await this.renderDevDependencies(component),\n    };\n  }\n}\n"]}