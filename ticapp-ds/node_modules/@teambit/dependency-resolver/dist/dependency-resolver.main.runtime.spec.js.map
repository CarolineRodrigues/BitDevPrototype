{"version":3,"sources":["dependency-resolver.main.runtime.spec.ts"],"names":["jest","mock","Http","getNetworkConfig","fn","describe","packageManagerSlot","get","it","depResolver","DependencyResolverMain","mockReturnValue","globalConfig","fetchTimeout","fetchRetries","fetchRetryFactor","fetchRetryMintimeout","fetchRetryMaxtimeout","networkConcurrency","maxSockets","Promise","resolve","expect","toEqual","pmConfig","config","resolveRemoteVersion","spec","version","policy","dependencies","peerDependencies","setStatusLine","consoleSuccess","getSync","outdatedPkgs","getOutdatedPkgsFromPolicies","rootDir","variantPoliciesByPatterns","devDependencies","componentPoliciesById","component1","toStrictEqual","currentRange","latestRange","name","source","variantPattern","targetField","componentId"],"mappings":"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","sourcesContent":["// @ts-ignore\njest.mock('@teambit/legacy/dist/scope/network/http', () => ({\n  Http: {\n    // @ts-ignore\n    getNetworkConfig: jest.fn(),\n  },\n}));\n\n/* eslint-disable import/first */\nimport { Http } from '@teambit/legacy/dist/scope/network/http';\nimport { DependencyResolverMain } from './dependency-resolver.main.runtime';\n\ndescribe('DepenendencyResolverMain.getNetworkConfig()', () => {\n  const packageManagerSlot = {\n    // @ts-ignore\n    get: jest.fn(),\n  };\n  it('should return settings from global config', async () => {\n    const depResolver = new DependencyResolverMain(\n      {} as any,\n      {} as any,\n      {} as any,\n      {} as any,\n      {} as any,\n      {} as any,\n      {} as any,\n      {} as any,\n      {} as any,\n      packageManagerSlot as any,\n      {} as any,\n      {} as any,\n      {} as any\n    );\n    packageManagerSlot.get.mockReturnValue({});\n    const globalConfig = {\n      fetchTimeout: 1,\n      fetchRetries: 2,\n      fetchRetryFactor: 3,\n      fetchRetryMintimeout: 4,\n      fetchRetryMaxtimeout: 5,\n      networkConcurrency: 6,\n      maxSockets: 7,\n    };\n    // @ts-ignore\n    Http.getNetworkConfig.mockReturnValue(Promise.resolve(globalConfig));\n    expect(await depResolver.getNetworkConfig()).toEqual(globalConfig);\n  });\n  it('should return settings from package manager config', async () => {\n    const depResolver = new DependencyResolverMain(\n      {} as any,\n      {} as any,\n      {} as any,\n      {} as any,\n      {} as any,\n      {} as any,\n      {} as any,\n      {} as any,\n      {} as any,\n      packageManagerSlot as any,\n      {} as any,\n      {} as any,\n      {} as any\n    );\n    const pmConfig = {\n      fetchTimeout: 11,\n      fetchRetries: 22,\n      fetchRetryFactor: 33,\n      fetchRetryMintimeout: 44,\n      fetchRetryMaxtimeout: 55,\n      networkConcurrency: 66,\n      maxSockets: 77,\n    };\n    packageManagerSlot.get.mockReturnValue({\n      getNetworkConfig: () => pmConfig,\n    });\n    // @ts-ignore\n    Http.getNetworkConfig.mockReturnValue(Promise.resolve({}));\n    expect(await depResolver.getNetworkConfig()).toEqual(pmConfig);\n  });\n  it('should return settings from aspect config', async () => {\n    const config = {\n      fetchTimeout: 111,\n      fetchRetries: 222,\n      fetchRetryFactor: 333,\n      fetchRetryMintimeout: 444,\n      fetchRetryMaxtimeout: 555,\n      networkConcurrency: 666,\n      maxSockets: 777,\n    } as any;\n    packageManagerSlot.get.mockReturnValue({});\n    // @ts-ignore\n    Http.getNetworkConfig.mockReturnValue(Promise.resolve({}));\n    const depResolver = new DependencyResolverMain(\n      config,\n      {} as any,\n      {} as any,\n      {} as any,\n      {} as any,\n      {} as any,\n      {} as any,\n      {} as any,\n      {} as any,\n      packageManagerSlot as any,\n      {} as any,\n      {} as any,\n      {} as any\n    );\n    expect(await depResolver.getNetworkConfig()).toEqual(config);\n  });\n  it('should merge settings from global config, package manager config, and aspect config', async () => {\n    const globalConfig = {\n      fetchTimeout: 1,\n      fetchRetries: 2,\n    };\n    const pmConfig = {\n      fetchRetryFactor: 33,\n      fetchRetryMintimeout: 44,\n    };\n    const config = {\n      fetchRetryMaxtimeout: 555,\n      networkConcurrency: 666,\n      maxSockets: 777,\n    } as any;\n    // @ts-ignore\n    Http.getNetworkConfig.mockReturnValue(Promise.resolve(globalConfig));\n    packageManagerSlot.get.mockReturnValue({\n      getNetworkConfig: () => pmConfig,\n    });\n    const depResolver = new DependencyResolverMain(\n      config,\n      {} as any,\n      {} as any,\n      {} as any,\n      {} as any,\n      {} as any,\n      {} as any,\n      {} as any,\n      {} as any,\n      packageManagerSlot as any,\n      {} as any,\n      {} as any,\n      {} as any\n    );\n    expect(await depResolver.getNetworkConfig()).toEqual({\n      fetchTimeout: 1,\n      fetchRetries: 2,\n      fetchRetryFactor: 33,\n      fetchRetryMintimeout: 44,\n      fetchRetryMaxtimeout: 555,\n      networkConcurrency: 666,\n      maxSockets: 777,\n    });\n  });\n});\n\ndescribe('DepenendencyResolverMain.getOutdatedPkgsFromPolicies()', () => {\n  const packageManagerSlot = {\n    // @ts-ignore\n    get: () => ({\n      resolveRemoteVersion: (spec: string) => ({\n        version: {\n          'root-runtime-dep1@latest': '2.0.0',\n          'root-peer-dep1@latest': '2.0.0',\n          'variant1-runtime-dep1@latest': '2.0.0',\n          'variant1-runtime-dep3@latest': '2.0.0',\n          'variant1-dev-dep1@latest': '2.0.0',\n          'variant1-dev-dep3@latest': '2.0.0',\n          'variant1-peer-dep1@latest': '2.0.0',\n          'variant1-peer-dep3@latest': '2.0.0',\n          'component1-runtime-dep1@latest': '2.0.0',\n          'component1-runtime-dep3@latest': '2.0.0',\n          'component1-dev-dep1@latest': '2.0.0',\n          'component1-dev-dep3@latest': '2.0.0',\n          'component1-peer-dep1@latest': '2.0.0',\n          'component1-peer-dep3@latest': '2.0.0',\n        }[spec],\n      }),\n    }),\n  };\n  const depResolver = new DependencyResolverMain(\n    {\n      policy: {\n        dependencies: {\n          'root-runtime-dep1': '1.0.0',\n          'root-runtime-dep2': '1.0.0',\n        },\n        peerDependencies: {\n          'root-peer-dep1': '1.0.0',\n          'root-peer-dep2': '1.0.0',\n        },\n      },\n    } as any,\n    {} as any,\n    {} as any,\n    {} as any,\n    {\n      // @ts-ignore\n      setStatusLine: jest.fn(),\n      // @ts-ignore\n      consoleSuccess: jest.fn(),\n    } as any,\n    {} as any,\n    {} as any,\n    {\n      getSync: () => false,\n    } as any,\n    {} as any,\n    packageManagerSlot as any,\n    {} as any,\n    {} as any,\n    {} as any\n  );\n  it('should return outdated dependencies', async () => {\n    const outdatedPkgs = await depResolver.getOutdatedPkgsFromPolicies({\n      rootDir: '',\n      variantPoliciesByPatterns: {\n        '{variant1/*}': {\n          dependencies: {\n            'variant1-runtime-dep1': '1.0.0',\n            'variant1-runtime-dep2': '1.0.0',\n            'variant1-runtime-dep3': '-',\n          },\n          devDependencies: {\n            'variant1-dev-dep1': '1.0.0',\n            'variant1-dev-dep2': '1.0.0',\n            'variant1-dev-dep3': '-',\n          },\n          peerDependencies: {\n            'variant1-peer-dep1': '1.0.0',\n            'variant1-peer-dep2': '1.0.0',\n            'variant1-peer-dep3': '-',\n          },\n        },\n      },\n      componentPoliciesById: {\n        component1: {\n          dependencies: {\n            'component1-runtime-dep1': '1.0.0',\n            'component1-runtime-dep2': '1.0.0',\n            'component1-runtime-dep3': '-',\n          },\n          devDependencies: {\n            'component1-dev-dep1': '1.0.0',\n            'component1-dev-dep2': '1.0.0',\n            'component1-dev-dep3': '-',\n          },\n          peerDependencies: {\n            'component1-peer-dep1': '1.0.0',\n            'component1-peer-dep2': '1.0.0',\n            'component1-peer-dep3': '-',\n          },\n        },\n      },\n    });\n    // @ts-ignore\n    expect(outdatedPkgs).toStrictEqual([\n      {\n        currentRange: '1.0.0',\n        latestRange: '2.0.0',\n        name: 'root-runtime-dep1',\n        source: 'rootPolicy',\n        variantPattern: null,\n        targetField: 'dependencies',\n      },\n      {\n        currentRange: '1.0.0',\n        latestRange: '2.0.0',\n        name: 'root-peer-dep1',\n        source: 'rootPolicy',\n        variantPattern: null,\n        targetField: 'peerDependencies',\n      },\n      {\n        currentRange: '1.0.0',\n        latestRange: '2.0.0',\n        name: 'variant1-runtime-dep1',\n        source: 'variants',\n        variantPattern: '{variant1/*}',\n        targetField: 'dependencies',\n      },\n      {\n        currentRange: '1.0.0',\n        latestRange: '2.0.0',\n        name: 'variant1-dev-dep1',\n        source: 'variants',\n        variantPattern: '{variant1/*}',\n        targetField: 'devDependencies',\n      },\n      {\n        currentRange: '1.0.0',\n        latestRange: '2.0.0',\n        name: 'variant1-peer-dep1',\n        source: 'variants',\n        variantPattern: '{variant1/*}',\n        targetField: 'peerDependencies',\n      },\n      {\n        currentRange: '1.0.0',\n        latestRange: '2.0.0',\n        name: 'component1-runtime-dep1',\n        source: 'component',\n        componentId: 'component1',\n        targetField: 'dependencies',\n      },\n      {\n        currentRange: '1.0.0',\n        latestRange: '2.0.0',\n        name: 'component1-dev-dep1',\n        source: 'component',\n        componentId: 'component1',\n        targetField: 'devDependencies',\n      },\n      {\n        currentRange: '1.0.0',\n        latestRange: '2.0.0',\n        name: 'component1-peer-dep1',\n        source: 'component',\n        componentId: 'component1',\n        targetField: 'peerDependencies',\n      },\n    ]);\n  });\n});\n"]}