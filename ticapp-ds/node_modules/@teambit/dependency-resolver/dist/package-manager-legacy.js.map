{"version":3,"sources":["package-manager-legacy.ts"],"names":["PackageManager","constructor","packageManagerName","logger","EventEmitter","name","checkIfFileExistsInCapsule","capsule","file","pathToFile","wrkDir","fs","promises","access","e","removeLockFilesInCapsule","safeUnlink","toRemove","unlink","capsulesInstall","capsules","opts","packageManager","longProcessLogger","createLongProcessLogger","length","componentId","component","id","toString","logProgress","execOptions","cwd","getExecCall","Error","installProc","info","stdout","on","d","stderr","warn","console","log","error","linkBitLegacyInCapsule","end","runInstallInFolder","folder","child","stdio","Promise","resolve","reject","exitStatus","bitLegacyPath","path","join","getLocalBitLegacyPath","pathOutsideNodeModules","__dirname","endsWith","sep","localBitLegacyPath","mkdirSync","removeSync"],"mappings":"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","sourcesContent":["/* eslint-disable no-empty */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { Capsule } from '@teambit/isolator';\nimport { Logger } from '@teambit/logger';\nimport { pipeOutput } from '@teambit/legacy/dist/utils/child_process';\nimport createSymlinkOrCopy from '@teambit/legacy/dist/utils/fs/create-symlink-or-copy';\nimport { EventEmitter } from 'events';\nimport execa from 'execa';\nimport fs from 'fs-extra';\nimport mapSeries from 'p-map-series';\nimport path, { join } from 'path';\n\nexport default class PackageManager {\n  private emitter = new EventEmitter();\n  constructor(readonly packageManagerName: string, readonly logger: Logger) {}\n\n  get name() {\n    return this.packageManagerName;\n  }\n  async checkIfFileExistsInCapsule(capsule: Capsule, file: string) {\n    const pathToFile = join(capsule.wrkDir, file);\n    try {\n      await capsule.fs.promises.access(pathToFile);\n      return true;\n    } catch (e: any) {}\n    return false;\n  }\n\n  async removeLockFilesInCapsule(capsule: Capsule) {\n    async function safeUnlink(toRemove: string) {\n      try {\n        await capsule.fs.promises.unlink(join(capsule.wrkDir, toRemove));\n      } catch (e: any) {}\n    }\n    await safeUnlink('yarn.lock');\n    await safeUnlink('package-lock.json');\n  }\n  async capsulesInstall(capsules: Capsule[], opts: {} = {}) {\n    const packageManager = this.packageManagerName;\n    const longProcessLogger = this.logger.createLongProcessLogger('installing capsules', capsules.length);\n    if (packageManager === 'npm' || packageManager === 'yarn' || packageManager === 'pnpm') {\n      // Don't run them in parallel (Promise.all), the package-manager doesn't handle it well.\n      await mapSeries(capsules, async (capsule) => {\n        const componentId = capsule.component.id.toString();\n        longProcessLogger.logProgress(componentId);\n        // TODO: remove this hack once harmony supports ownExtensionName\n        const execOptions = { cwd: capsule.wrkDir };\n        const getExecCall = () => {\n          switch (packageManager) {\n            case 'npm':\n              return execa('npm', ['install', '--no-package-lock'], execOptions);\n            case 'yarn':\n              return execa('yarn', [], execOptions);\n            case 'pnpm':\n              return execa('pnpm', ['install'], execOptions);\n            default:\n              throw new Error(`unsupported package manager ${packageManager}`);\n          }\n        };\n        const installProc = getExecCall();\n        this.logger.info(`${componentId}, ${packageManager === 'npm' ? '$ npm install --no-package-lock' : '$ yarn'}`); // TODO: better\n        installProc.stdout!.on('data', (d) => this.logger.info(`${componentId}, ${d.toString()}`));\n        installProc.stderr!.on('data', (d) => this.logger.warn(`${componentId}, ${d.toString()}`));\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        installProc.on('error', (e) => {\n          console.log('error:', e); // eslint-disable-line no-console\n          this.logger.error(`${componentId}, ${e}`);\n        });\n        await installProc;\n        linkBitLegacyInCapsule(capsule);\n      });\n    } else {\n      throw new Error(`unsupported package manager ${packageManager}`);\n    }\n    longProcessLogger.end();\n    return null;\n  }\n\n  async runInstallInFolder(folder: string, opts: {} = {}): Promise<void> {\n    const packageManager = this.packageManagerName;\n    if (packageManager === 'yarn') {\n      const child = execa('yarn', [], { cwd: folder, stdio: 'pipe' });\n      pipeOutput(child);\n      await child;\n      return;\n    }\n    if (packageManager === 'npm') {\n      const child = execa('npm', ['install'], { cwd: folder, stdio: 'pipe' });\n      this.logger.info(`${folder} $ npm install`);\n      await new Promise((resolve, reject) => {\n        // @ts-ignore\n        child.stdout.on('data', (d) => this.logger.info(`${folder} ${d.toString()}`));\n        // @ts-ignore\n        child.stderr.on('data', (d) => this.logger.warn(`${folder} ${d.toString()}`));\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        child.on('error', (e) => {\n          reject(e);\n        });\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        child.on('close', (exitStatus) => {\n          if (exitStatus) {\n            reject(new Error(`${folder}`));\n          } else {\n            resolve(null);\n          }\n        });\n      });\n      return;\n    }\n    throw new Error(`unsupported package manager ${packageManager}`);\n  }\n}\n\nfunction linkBitLegacyInCapsule(capsule) {\n  const bitLegacyPath = path.join(capsule.wrkDir, './node_modules/@teambit/legacy');\n  const getLocalBitLegacyPath = () => {\n    const pathOutsideNodeModules = path.join(__dirname, '../..');\n    if (pathOutsideNodeModules.endsWith(`${path.sep}dist`)) {\n      return pathOutsideNodeModules;\n    }\n    throw new Error('unable to link @teambit/legacy to the capsule, the location of @teambit/legacy is unknown');\n  };\n  const localBitLegacyPath = getLocalBitLegacyPath();\n  // if there are no deps, sometimes the node_modules folder is not created\n  // and we need it in order to perform the linking\n  try {\n    capsule.fs.mkdirSync('node_modules');\n  } catch (e: any) {\n    // fail silently - we only need to create it if it doesn't already exist\n  }\n  // we use fs directly here rather than the capsule.fs because there are some edge cases\n  // that the capusle fs does not deal with well (eg. identifying and deleting\n  // a symlink rather than the what the symlink links to)\n  fs.removeSync(bitLegacyPath);\n  createSymlinkOrCopy(localBitLegacyPath, bitLegacyPath);\n}\n"]}