"use strict";

function _getAllPolicyPkgs() {
  const data = require("./get-all-policy-pkgs");

  _getAllPolicyPkgs = function () {
    return data;
  };

  return data;
}

function _policy() {
  const data = require("./policy");

  _policy = function () {
    return data;
  };

  return data;
}

describe('getAllPolicyPkgs()', () => {
  it('should read the version from a version object', () => {
    const outdatedPkgs = (0, _getAllPolicyPkgs().getAllPolicyPkgs)({
      rootPolicy: new (_policy().WorkspacePolicy)([]),
      variantPoliciesByPatterns: {
        comp: {
          dependencies: {
            foo: {
              version: '1',
              resolveFromEnv: true
            }
          },
          devDependencies: {},
          peerDependencies: {}
        }
      },
      componentPoliciesById: {}
    }); // @ts-ignore

    expect(outdatedPkgs).toStrictEqual([{
      currentRange: '1',
      name: 'foo',
      source: 'variants',
      targetField: 'dependencies',
      variantPattern: 'comp'
    }]);
  });
});

//# sourceMappingURL=get-all-policy-pkgs.spec.js.map