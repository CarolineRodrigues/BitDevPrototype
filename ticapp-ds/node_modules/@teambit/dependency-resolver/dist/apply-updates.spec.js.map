{"version":3,"sources":["apply-updates.spec.ts"],"names":["describe","it","updatedWorkspacePolicyEntries","name","latestRange","source","targetField","variantPoliciesByPatterns","componentPoliciesById","expect","toStrictEqual","dependencyId","value","version","lifecycleType","updateExisting","variant1","dependencies","resolveFromEnv","devDependencies","peerDependencies","variant2","variant3","variantPattern","component1","componentId"],"mappings":"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","sourcesContent":["import { applyUpdates } from './apply-updates';\n\ndescribe('applyUpdates()', () => {\n  it('should apply updates on root dependencies', () => {\n    const { updatedWorkspacePolicyEntries } = applyUpdates(\n      [\n        {\n          name: 'lodash',\n          latestRange: '2.0.0',\n          source: 'rootPolicy',\n          targetField: 'dependencies' as const,\n        },\n        {\n          name: 'react-dom',\n          latestRange: '2.0.0',\n          source: 'rootPolicy',\n          targetField: 'peerDependencies' as const,\n        },\n      ],\n      {\n        variantPoliciesByPatterns: {},\n        componentPoliciesById: {},\n      }\n    );\n    // @ts-ignore\n    expect(updatedWorkspacePolicyEntries).toStrictEqual(\n      [\n        {\n          dependencyId: 'lodash',\n          value: {\n            version: '2.0.0',\n          },\n          lifecycleType: 'runtime',\n        },\n        {\n          dependencyId: 'react-dom',\n          value: {\n            version: '2.0.0',\n          },\n          lifecycleType: 'peer',\n        },\n      ],\n      { updateExisting: true }\n    );\n  });\n  it('should apply updates on variant dependencies', () => {\n    const variantPoliciesByPatterns = {\n      variant1: {\n        dependencies: {\n          'variant1-runtime-dep1': { version: '1.0.0', resolveFromEnv: true },\n          'variant1-runtime-dep2': '1.0.0',\n        },\n        devDependencies: {\n          'variant1-dev-dep1': '1.0.0',\n          'variant1-dev-dep2': '1.0.0',\n        },\n        peerDependencies: {\n          'variant1-peer-dep1': '1.0.0',\n          'variant1-peer-dep2': '1.0.0',\n        },\n      },\n      variant2: {\n        dependencies: {\n          'variant2-runtime-dep1': '1.0.0',\n          'variant2-runtime-dep2': '1.0.0',\n        },\n        devDependencies: {\n          'variant2-dev-dep1': '1.0.0',\n          'variant2-dev-dep2': '1.0.0',\n        },\n        peerDependencies: {\n          'variant2-peer-dep1': '1.0.0',\n          'variant2-peer-dep2': '1.0.0',\n        },\n      },\n      variant3: {\n        dependencies: {\n          'variant3-runtime-dep1': '1.0.0',\n          'variant3-runtime-dep2': '1.0.0',\n        },\n        devDependencies: {\n          'variant3-dev-dep1': '1.0.0',\n          'variant3-dev-dep2': '1.0.0',\n        },\n        peerDependencies: {\n          'variant3-peer-dep1': '1.0.0',\n          'variant3-peer-dep2': '1.0.0',\n        },\n      },\n    };\n    applyUpdates(\n      [\n        {\n          name: 'variant1-runtime-dep1',\n          latestRange: '2.0.0',\n          source: 'variants',\n          variantPattern: 'variant1',\n          targetField: 'dependencies',\n        },\n        {\n          name: 'variant2-dev-dep1',\n          latestRange: '2.0.0',\n          source: 'variants',\n          variantPattern: 'variant2',\n          targetField: 'devDependencies',\n        },\n        {\n          name: 'variant3-peer-dep1',\n          latestRange: '2.0.0',\n          source: 'variants',\n          variantPattern: 'variant3',\n          targetField: 'peerDependencies',\n        },\n      ],\n      {\n        variantPoliciesByPatterns,\n        componentPoliciesById: {},\n      }\n    );\n    // @ts-ignore\n    expect(variantPoliciesByPatterns.variant1).toStrictEqual({\n      dependencies: {\n        'variant1-runtime-dep1': { version: '2.0.0', resolveFromEnv: true },\n        'variant1-runtime-dep2': '1.0.0',\n      },\n      devDependencies: {\n        'variant1-dev-dep1': '1.0.0',\n        'variant1-dev-dep2': '1.0.0',\n      },\n      peerDependencies: {\n        'variant1-peer-dep1': '1.0.0',\n        'variant1-peer-dep2': '1.0.0',\n      },\n    });\n    // @ts-ignore\n    expect(variantPoliciesByPatterns.variant2).toStrictEqual({\n      dependencies: {\n        'variant2-runtime-dep1': '1.0.0',\n        'variant2-runtime-dep2': '1.0.0',\n      },\n      devDependencies: {\n        'variant2-dev-dep1': '2.0.0',\n        'variant2-dev-dep2': '1.0.0',\n      },\n      peerDependencies: {\n        'variant2-peer-dep1': '1.0.0',\n        'variant2-peer-dep2': '1.0.0',\n      },\n    });\n    // @ts-ignore\n    expect(variantPoliciesByPatterns.variant3).toStrictEqual({\n      dependencies: {\n        'variant3-runtime-dep1': '1.0.0',\n        'variant3-runtime-dep2': '1.0.0',\n      },\n      devDependencies: {\n        'variant3-dev-dep1': '1.0.0',\n        'variant3-dev-dep2': '1.0.0',\n      },\n      peerDependencies: {\n        'variant3-peer-dep1': '2.0.0',\n        'variant3-peer-dep2': '1.0.0',\n      },\n    });\n  });\n  it('should apply updates on component dependencies', () => {\n    const componentPoliciesById = {\n      component1: {\n        dependencies: {\n          'component1-runtime-dep1': { version: '1.0.0', resolveFromEnv: true },\n          'component1-runtime-dep2': '1.0.0',\n        },\n        devDependencies: {\n          'component1-dev-dep1': '1.0.0',\n          'component1-dev-dep2': '1.0.0',\n        },\n        peerDependencies: {\n          'component1-peer-dep1': '1.0.0',\n          'component1-peer-dep2': '1.0.0',\n        },\n      },\n    };\n    applyUpdates(\n      [\n        {\n          name: 'component1-runtime-dep1',\n          latestRange: '2.0.0',\n          source: 'component',\n          componentId: 'component1',\n          targetField: 'dependencies',\n        },\n        {\n          name: 'component1-dev-dep1',\n          latestRange: '2.0.0',\n          source: 'component',\n          componentId: 'component1',\n          targetField: 'devDependencies',\n        },\n        {\n          name: 'component1-peer-dep1',\n          latestRange: '2.0.0',\n          source: 'component',\n          componentId: 'component1',\n          targetField: 'peerDependencies',\n        },\n      ],\n      {\n        variantPoliciesByPatterns: {},\n        componentPoliciesById,\n      }\n    );\n    // @ts-ignore\n    expect(componentPoliciesById).toStrictEqual({\n      component1: {\n        dependencies: {\n          'component1-runtime-dep1': { version: '2.0.0', resolveFromEnv: true },\n          'component1-runtime-dep2': '1.0.0',\n        },\n        devDependencies: {\n          'component1-dev-dep1': '2.0.0',\n          'component1-dev-dep2': '1.0.0',\n        },\n        peerDependencies: {\n          'component1-peer-dep1': '2.0.0',\n          'component1-peer-dep2': '1.0.0',\n        },\n      },\n    });\n  });\n});\n"]}