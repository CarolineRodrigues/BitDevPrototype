{"version":3,"sources":["hoist-dependencies.spec.ts"],"names":["DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX","generateItemsFromArrays","dependentComponentNamePrefix","ranges","lifecycleTypes","size","Array","isArray","length","items","i","item","range","origin","lifecycleType","push","generateItems","numOfItems","RUNTIME_DEP_LIFECYCLE_TYPE","fill","expectAllComponentsDependenciesMapToBeEmpty","dedupedDependencies","componentDependenciesMap","to","be","empty","expectComponentDependenciesMapToBeEmpty","dependentName","get","undefined","expectComponentDependenciesMapToHave","dependecyKeyName","dependencyName","dependencyVersion","comp","Error","have","property","expectRootToHave","rootDependencies","expectRootToNotHaveDependency","dependencies","not","devDependencies","peerDependencies","expectPeerIssuesToBeEmpty","issus","peerConflicts","describe","index","dependentComponentName","preservedVersion","depKeyName","KEY_NAME_BY_LIFECYCLE_TYPE","beforeEach","Map","metadata","preservedLifecycleType","set","componentItems","it","PEER_DEP_LIFECYCLE_TYPE","equal","dependencyName1","dependencyName2","items1","items2","lengthOf","packageName","conflictedComponents","DEV_DEP_LIFECYCLE_TYPE"],"mappings":"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","sourcesContent":["import { expect } from 'chai';\n\nimport {\n  DEV_DEP_LIFECYCLE_TYPE,\n  KEY_NAME_BY_LIFECYCLE_TYPE,\n  PEER_DEP_LIFECYCLE_TYPE,\n  RUNTIME_DEP_LIFECYCLE_TYPE,\n} from '../../dependencies/constants';\nimport { DependencyLifecycleType, SemverVersion } from '../../dependencies';\nimport { DedupedDependencies } from './dedupe-dependencies';\nimport { hoistDependencies } from './hoist-dependencies';\nimport { PackageNameIndex, PackageNameIndexComponentItem, PackageNameIndexItemMetadata } from './index-by-dep-id';\n\nconst DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX = 'dependent-component';\n\nconst generateItemsFromArrays = (\n  dependentComponentNamePrefix = 'dependent-component',\n  ranges: SemverVersion | SemverVersion[],\n  lifecycleTypes: DependencyLifecycleType | DependencyLifecycleType[]\n): PackageNameIndexComponentItem[] => {\n  let size = 1;\n  if (Array.isArray(ranges)) {\n    size = ranges.length;\n  } else if (Array.isArray(lifecycleTypes)) {\n    size = lifecycleTypes.length;\n  }\n  const items: PackageNameIndexComponentItem[] = [];\n  for (let i = 0; i <= size - 1; i += 1) {\n    const item: PackageNameIndexComponentItem = {\n      range: Array.isArray(ranges) ? ranges[i] : ranges,\n      origin: `${dependentComponentNamePrefix}-${i}`,\n      lifecycleType: Array.isArray(lifecycleTypes) ? lifecycleTypes[i] : lifecycleTypes,\n    };\n    items.push(item);\n  }\n  return items;\n};\n\nconst generateItems = (\n  numOfItems = 3,\n  dependentComponentNamePrefix = DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX,\n  range: SemverVersion = '1.0.0',\n  lifecycleType: DependencyLifecycleType = RUNTIME_DEP_LIFECYCLE_TYPE\n): PackageNameIndexComponentItem[] => {\n  const ranges = Array(numOfItems).fill(range);\n  const lifecycleTypes = Array(numOfItems).fill(lifecycleType);\n  return generateItemsFromArrays(dependentComponentNamePrefix, ranges, lifecycleTypes);\n};\n\nconst expectAllComponentsDependenciesMapToBeEmpty = (dedupedDependencies: DedupedDependencies) => {\n  expect(dedupedDependencies.componentDependenciesMap).to.be.empty;\n};\n\nconst expectComponentDependenciesMapToBeEmpty = (dependentName: string, dedupedDependencies: DedupedDependencies) => {\n  expect(dedupedDependencies.componentDependenciesMap.get(dependentName)).to.be.undefined;\n};\n\nconst expectComponentDependenciesMapToHave = (\n  dedupedDependencies: DedupedDependencies,\n  dependentName: string,\n  dependecyKeyName: string,\n  dependencyName: string,\n  dependencyVersion: SemverVersion\n) => {\n  const comp = dedupedDependencies.componentDependenciesMap.get(dependentName);\n  if (!comp) {\n    throw new Error(`component ${dependentName} does not found on dedupedDependencies components map`);\n  }\n  expect(comp[dependecyKeyName]).to.have.property(dependencyName, dependencyVersion);\n};\n\nconst expectRootToHave = (\n  dedupedDependencies: DedupedDependencies,\n  dependecyKeyName: string,\n  dependencyName: string,\n  dependencyVersion: SemverVersion\n) => {\n  expect(dedupedDependencies.rootDependencies[dependecyKeyName]).to.have.property(dependencyName, dependencyVersion);\n};\n\nconst expectRootToNotHaveDependency = (dedupedDependencies: DedupedDependencies, dependencyName: string) => {\n  expect(dedupedDependencies.rootDependencies.dependencies).to.not.have.property(dependencyName);\n  expect(dedupedDependencies.rootDependencies.devDependencies).to.not.have.property(dependencyName);\n  expect(dedupedDependencies.rootDependencies.peerDependencies).to.not.have.property(dependencyName);\n};\n\nconst expectPeerIssuesToBeEmpty = (dedupedDependencies: DedupedDependencies) => {\n  expect(dedupedDependencies.issus?.peerConflicts).to.be.empty;\n};\n\ndescribe('hoistDependencies', () => {\n  let index: PackageNameIndex;\n  const dependentComponentName = 'dependent-component';\n  let dedupedDependencies: DedupedDependencies;\n  describe('preserved dependency', () => {\n    describe('some component versions are intersect and some not', () => {\n      const dependencyName = 'package-dependency';\n      const preservedVersion = '^4.0.0';\n      const depKeyName = KEY_NAME_BY_LIFECYCLE_TYPE[RUNTIME_DEP_LIFECYCLE_TYPE];\n      beforeEach(() => {\n        index = new Map();\n        const metadata: PackageNameIndexItemMetadata = {\n          preservedLifecycleType: RUNTIME_DEP_LIFECYCLE_TYPE,\n          preservedVersion,\n        };\n        const items = generateItemsFromArrays(undefined, ['4.0.1', '5.0.0'], RUNTIME_DEP_LIFECYCLE_TYPE);\n        index.set(dependencyName, { metadata, componentItems: items });\n        dedupedDependencies = hoistDependencies(index);\n      });\n      it('the root manifest should have the preserved version', () => {\n        expectRootToHave(dedupedDependencies, depKeyName, dependencyName, preservedVersion);\n      });\n\n      it('the component dependencies which intersects with the preserved should be empty', () => {\n        expectComponentDependenciesMapToBeEmpty(`${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-0`, dedupedDependencies);\n      });\n      it('the component dependencies which not intersects with the preserved to have a proper version', () => {\n        expectComponentDependenciesMapToHave(\n          dedupedDependencies,\n          `${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-1`,\n          depKeyName,\n          dependencyName,\n          '5.0.0'\n        );\n      });\n    });\n  });\n\n  describe('dependency that appears only once', () => {\n    describe('item is exact version', () => {\n      const dependencyName = 'package-dependency';\n      const dependencyVersion = '1.0.0';\n      beforeEach(() => {\n        index = new Map();\n        const item: PackageNameIndexComponentItem = {\n          range: dependencyVersion,\n          origin: dependentComponentName,\n          lifecycleType: RUNTIME_DEP_LIFECYCLE_TYPE,\n        };\n        index.set(dependencyName, { metadata: {}, componentItems: [item] });\n        dedupedDependencies = hoistDependencies(index);\n      });\n      it('the component dependencies should be empty', () => {\n        expectAllComponentsDependenciesMapToBeEmpty(dedupedDependencies);\n      });\n      it('should hoist the dependency to the root', () => {\n        expectRootToHave(\n          dedupedDependencies,\n          KEY_NAME_BY_LIFECYCLE_TYPE[RUNTIME_DEP_LIFECYCLE_TYPE],\n          dependencyName,\n          dependencyVersion\n        );\n      });\n    });\n    describe('item is range', () => {\n      const dependencyName = 'package-dependency';\n      const dependencyVersion = '^1.0.0';\n      beforeEach(() => {\n        index = new Map();\n        const item: PackageNameIndexComponentItem = {\n          range: dependencyVersion,\n          origin: dependentComponentName,\n          lifecycleType: RUNTIME_DEP_LIFECYCLE_TYPE,\n        };\n        index.set(dependencyName, { metadata: {}, componentItems: [item] });\n        dedupedDependencies = hoistDependencies(index);\n      });\n      it('the component dependencies should be empty', () => {\n        expectAllComponentsDependenciesMapToBeEmpty(dedupedDependencies);\n      });\n      it('should hoist the dependency to the root', () => {\n        expectRootToHave(\n          dedupedDependencies,\n          KEY_NAME_BY_LIFECYCLE_TYPE[RUNTIME_DEP_LIFECYCLE_TYPE],\n          dependencyName,\n          dependencyVersion\n        );\n      });\n    });\n    describe('item is peer dependency with one version only', () => {\n      const dependencyName = 'package-dependency';\n      const dependencyVersion = '1.0.0';\n      const depKeyName = KEY_NAME_BY_LIFECYCLE_TYPE[PEER_DEP_LIFECYCLE_TYPE];\n\n      beforeEach(() => {\n        index = new Map();\n        const item: PackageNameIndexComponentItem = {\n          range: dependencyVersion,\n          origin: dependentComponentName,\n          lifecycleType: PEER_DEP_LIFECYCLE_TYPE,\n        };\n        index.set(dependencyName, { metadata: {}, componentItems: [item] });\n        dedupedDependencies = hoistDependencies(index);\n      });\n      it('the component dependencies should be empty', () => {\n        expectAllComponentsDependenciesMapToBeEmpty(dedupedDependencies);\n      });\n      it('should not hoist the dependency to the root', () => {\n        // Behavior was changed to hoist peers as well in case they are appear only with one version\n        // expectRootToNotHaveDependency(dedupedDependencies, dependencyName);\n        expectRootToHave(dedupedDependencies, depKeyName, dependencyName, '1.0.0');\n      });\n    });\n  });\n\n  describe('dependency that appears only as peer (in many components)', () => {\n    const dependencyName = 'package-dependency';\n    describe('when there are no conflicts between versions', () => {\n      beforeEach(() => {\n        index = new Map();\n        const items = generateItems(3, undefined, undefined, PEER_DEP_LIFECYCLE_TYPE);\n        index.set(dependencyName, { metadata: {}, componentItems: items });\n        dedupedDependencies = hoistDependencies(index);\n      });\n      it('should have the peers in each component', () => {\n        expect(dedupedDependencies.componentDependenciesMap.size).to.equal(3);\n      });\n      it('should not hoist the dependency to the root', () => {\n        expectRootToNotHaveDependency(dedupedDependencies, dependencyName);\n      });\n      it('should not report about peer conflicts', () => {\n        expectPeerIssuesToBeEmpty(dedupedDependencies);\n      });\n    });\n    describe('when there conflicts between versions for few dependencies', () => {\n      const dependencyName1 = 'package-dependency-1';\n      const dependencyName2 = 'package-dependency-2';\n\n      beforeEach(() => {\n        index = new Map();\n        const items1 = generateItemsFromArrays(undefined, ['4.0.0', '5.0.0'], PEER_DEP_LIFECYCLE_TYPE);\n        const items2 = generateItemsFromArrays(undefined, ['^4.0.0', '^5.0.0'], PEER_DEP_LIFECYCLE_TYPE);\n        index.set(dependencyName1, { metadata: {}, componentItems: items1 });\n        index.set(dependencyName2, { metadata: {}, componentItems: items2 });\n        dedupedDependencies = hoistDependencies(index);\n      });\n      it('should have the peers in each component', () => {\n        expect(dedupedDependencies.componentDependenciesMap.size).to.equal(2);\n      });\n      it('should not hoist the dependency to the root', () => {\n        expectRootToNotHaveDependency(dedupedDependencies, dependencyName);\n      });\n      it('should report about peer conflicts', () => {\n        expect(dedupedDependencies.issus?.peerConflicts).to.have.lengthOf(2);\n        expect(dedupedDependencies.issus?.peerConflicts[0].packageName).to.equal(dependencyName1);\n        expect(dedupedDependencies.issus?.peerConflicts[0].conflictedComponents).to.have.lengthOf(2);\n        expect(dedupedDependencies.issus?.peerConflicts[1].packageName).to.equal(dependencyName2);\n        expect(dedupedDependencies.issus?.peerConflicts[1].conflictedComponents).to.have.lengthOf(2);\n      });\n    });\n  });\n\n  describe('dependency that appears only with exact versions', () => {\n    const dependencyName = 'package-dependency';\n    const depKeyName = KEY_NAME_BY_LIFECYCLE_TYPE[DEV_DEP_LIFECYCLE_TYPE];\n    beforeEach(() => {\n      index = new Map();\n      const items = generateItemsFromArrays(\n        undefined,\n        ['4.0.0', '5.0.0', '4.0.0', '5.0.0', '4.0.1', '4.0.0'],\n        DEV_DEP_LIFECYCLE_TYPE\n      );\n      index.set(dependencyName, { metadata: {}, componentItems: items });\n      dedupedDependencies = hoistDependencies(index);\n    });\n    it('should hoist the most common version to the root', () => {\n      expectRootToHave(dedupedDependencies, depKeyName, dependencyName, '4.0.0');\n    });\n    it('should not put the most common version in the components that has it', () => {\n      expectComponentDependenciesMapToBeEmpty(`${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-0`, dedupedDependencies);\n      expectComponentDependenciesMapToBeEmpty(`${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-2`, dedupedDependencies);\n      expectComponentDependenciesMapToBeEmpty(`${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-5`, dedupedDependencies);\n    });\n    it('should put other versions in the components', () => {\n      expectComponentDependenciesMapToHave(\n        dedupedDependencies,\n        `${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-1`,\n        depKeyName,\n        dependencyName,\n        '5.0.0'\n      );\n      expectComponentDependenciesMapToHave(\n        dedupedDependencies,\n        `${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-3`,\n        depKeyName,\n        dependencyName,\n        '5.0.0'\n      );\n    });\n  });\n\n  describe('dependency that appears only with ranges', () => {\n    const dependencyName = 'package-dependency';\n    const depKeyName = KEY_NAME_BY_LIFECYCLE_TYPE[DEV_DEP_LIFECYCLE_TYPE];\n    beforeEach(() => {\n      index = new Map();\n      const items = generateItemsFromArrays(\n        undefined,\n        ['^4.0.0', '^5.0.0', '^4.0.0', '^5.0.0', '^5.0.1', '^4.0.1', '^4.0.4'],\n        DEV_DEP_LIFECYCLE_TYPE\n      );\n      index.set(dependencyName, { metadata: {}, componentItems: items });\n      dedupedDependencies = hoistDependencies(index);\n    });\n    it('should hoist the best range to the root', () => {\n      expectRootToHave(dedupedDependencies, depKeyName, dependencyName, '^4.0.4');\n    });\n    it('should not put the dependency in components that matches the best range', () => {\n      expectComponentDependenciesMapToBeEmpty(`${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-0`, dedupedDependencies);\n      expectComponentDependenciesMapToBeEmpty(`${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-2`, dedupedDependencies);\n      expectComponentDependenciesMapToBeEmpty(`${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-5`, dedupedDependencies);\n      expectComponentDependenciesMapToBeEmpty(`${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-6`, dedupedDependencies);\n    });\n    it('should put other ranges in the components', () => {\n      expectComponentDependenciesMapToHave(\n        dedupedDependencies,\n        `${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-1`,\n        depKeyName,\n        dependencyName,\n        '^5.0.0'\n      );\n      expectComponentDependenciesMapToHave(\n        dedupedDependencies,\n        `${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-3`,\n        depKeyName,\n        dependencyName,\n        '^5.0.0'\n      );\n      expectComponentDependenciesMapToHave(\n        dedupedDependencies,\n        `${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-4`,\n        depKeyName,\n        dependencyName,\n        '^5.0.1'\n      );\n    });\n  });\n\n  describe('dependency that appears with both ranges and exact versions', () => {\n    const dependencyName = 'package-dependency';\n    const depKeyName = KEY_NAME_BY_LIFECYCLE_TYPE[DEV_DEP_LIFECYCLE_TYPE];\n    describe('when there is a version which satisfy more components than the best range', () => {\n      beforeEach(() => {\n        index = new Map();\n        const items = generateItemsFromArrays(\n          undefined,\n          ['^4.0.0', '5.0.0', '5.0.0', '5.0.0', '^4.0.4'],\n          DEV_DEP_LIFECYCLE_TYPE\n        );\n        index.set(dependencyName, { metadata: {}, componentItems: items });\n        dedupedDependencies = hoistDependencies(index);\n      });\n      it('should hoist the best version to the root', () => {\n        expectRootToHave(dedupedDependencies, depKeyName, dependencyName, '5.0.0');\n      });\n      it('should not put the dependency in components that matches the best version', () => {\n        expectComponentDependenciesMapToBeEmpty(`${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-1`, dedupedDependencies);\n        expectComponentDependenciesMapToBeEmpty(`${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-2`, dedupedDependencies);\n        expectComponentDependenciesMapToBeEmpty(`${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-3`, dedupedDependencies);\n      });\n      it('should put other ranges in the components', () => {\n        expectComponentDependenciesMapToHave(\n          dedupedDependencies,\n          `${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-0`,\n          depKeyName,\n          dependencyName,\n          '^4.0.0'\n        );\n        expectComponentDependenciesMapToHave(\n          dedupedDependencies,\n          `${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-4`,\n          depKeyName,\n          dependencyName,\n          '^4.0.4'\n        );\n      });\n    });\n    describe('when there is a best range which satisfy more components than the most common version', () => {\n      beforeEach(() => {\n        index = new Map();\n        const items = generateItemsFromArrays(\n          undefined,\n          ['^4.0.0', '^4.0.2', '5.0.0', '5.0.0', '^4.0.4'],\n          DEV_DEP_LIFECYCLE_TYPE\n        );\n        index.set(dependencyName, { metadata: {}, componentItems: items });\n        dedupedDependencies = hoistDependencies(index);\n      });\n      it('should hoist the best range to the root', () => {\n        expectRootToHave(dedupedDependencies, depKeyName, dependencyName, '^4.0.4');\n      });\n      it('should not put the dependency in components that matches the best range', () => {\n        expectComponentDependenciesMapToBeEmpty(`${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-0`, dedupedDependencies);\n        expectComponentDependenciesMapToBeEmpty(`${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-1`, dedupedDependencies);\n        expectComponentDependenciesMapToBeEmpty(`${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-4`, dedupedDependencies);\n      });\n      it('should put other ranges in the components', () => {\n        expectComponentDependenciesMapToHave(\n          dedupedDependencies,\n          `${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-2`,\n          depKeyName,\n          dependencyName,\n          '5.0.0'\n        );\n        expectComponentDependenciesMapToHave(\n          dedupedDependencies,\n          `${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-3`,\n          depKeyName,\n          dependencyName,\n          '5.0.0'\n        );\n      });\n    });\n    describe('when there is a best range which is not the best alone but combine with version its the best', () => {\n      // there is best version which matches 4 components (5.0.0)\n      // there is best range which intersect 4 ranges (^4.0.5)\n      // there is range that intersects 2 components and version that match 3 components (should return this version -\n      // that practically matches 5 components. (^6.0.2(3) + 6.0.4(2))\n      beforeEach(() => {\n        index = new Map();\n        const items = generateItemsFromArrays(\n          undefined,\n          [\n            '^4.0.0',\n            '^4.0.2',\n            '5.0.0',\n            '5.0.0',\n            '^4.0.4',\n            '^4.0.5',\n            '5.0.0',\n            '5.0.0',\n            '^6.0.0',\n            '^6.0.1',\n            '^6.0.2',\n            '6.0.4',\n            '6.0.4',\n          ],\n          DEV_DEP_LIFECYCLE_TYPE\n        );\n        index.set(dependencyName, { metadata: {}, componentItems: items });\n        dedupedDependencies = hoistDependencies(index);\n      });\n      it('should hoist the best range to the root', () => {\n        expectRootToHave(dedupedDependencies, depKeyName, dependencyName, '6.0.4');\n      });\n      it('should not put the dependency in components that matches the best range or the combined version', () => {\n        expectComponentDependenciesMapToBeEmpty(`${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-8`, dedupedDependencies);\n        expectComponentDependenciesMapToBeEmpty(`${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-9`, dedupedDependencies);\n        expectComponentDependenciesMapToBeEmpty(`${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-10`, dedupedDependencies);\n        expectComponentDependenciesMapToBeEmpty(`${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-11`, dedupedDependencies);\n        expectComponentDependenciesMapToBeEmpty(`${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-12`, dedupedDependencies);\n      });\n      it('should put other ranges in the components', () => {\n        expectComponentDependenciesMapToHave(\n          dedupedDependencies,\n          `${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-0`,\n          depKeyName,\n          dependencyName,\n          '^4.0.0'\n        );\n        expectComponentDependenciesMapToHave(\n          dedupedDependencies,\n          `${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-1`,\n          depKeyName,\n          dependencyName,\n          '^4.0.2'\n        );\n        expectComponentDependenciesMapToHave(\n          dedupedDependencies,\n          `${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-2`,\n          depKeyName,\n          dependencyName,\n          '5.0.0'\n        );\n        expectComponentDependenciesMapToHave(\n          dedupedDependencies,\n          `${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-3`,\n          depKeyName,\n          dependencyName,\n          '5.0.0'\n        );\n        expectComponentDependenciesMapToHave(\n          dedupedDependencies,\n          `${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-4`,\n          depKeyName,\n          dependencyName,\n          '^4.0.4'\n        );\n        expectComponentDependenciesMapToHave(\n          dedupedDependencies,\n          `${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-5`,\n          depKeyName,\n          dependencyName,\n          '^4.0.5'\n        );\n        expectComponentDependenciesMapToHave(\n          dedupedDependencies,\n          `${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-6`,\n          depKeyName,\n          dependencyName,\n          '5.0.0'\n        );\n        expectComponentDependenciesMapToHave(\n          dedupedDependencies,\n          `${DEFAULT_DEPENDENT_COMPONENT_NAME_PREFIX}-7`,\n          depKeyName,\n          dependencyName,\n          '5.0.0'\n        );\n      });\n    });\n  });\n});\n"]}