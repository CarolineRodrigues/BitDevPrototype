{"version":3,"sources":["manifest.ts"],"names":["Manifest","constructor","name","version","dependencies","toJson","options","devDependencies","peerDependencies","copyPeerToRuntime","manifest"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAGA;AAkBO,MAAMA,QAAN,CAAe;AACpBC,EAAAA,WAAW,CAAQC,IAAR,EAA6BC,OAA7B,EAAqDC,YAArD,EAA+F;AAAA,SAAvFF,IAAuF,GAAvFA,IAAuF;AAAA,SAAlEC,OAAkE,GAAlEA,OAAkE;AAAA,SAA1CC,YAA0C,GAA1CA,YAA0C;AAAE,GADxF,CAGpB;AACA;AACA;AACA;;;AAEAC,EAAAA,MAAM,CAACC,OAA8B,GAAG,EAAlC,EAA2D;AAC/D,QAAIF,YAAY,GAAG,KAAKA,YAAL,CAAkBA,YAAlB,IAAkC,EAArD;AACA,UAAMG,eAAe,GAAG,KAAKH,YAAL,CAAkBG,eAAlB,IAAqC,EAA7D;AACA,UAAMC,gBAAgB,GAAG,KAAKJ,YAAL,CAAkBI,gBAAlB,IAAsC,EAA/D;;AACA,QAAIF,OAAO,CAACG,iBAAZ,EAA+B;AAC7BL,MAAAA,YAAY,mCAAQI,gBAAR,GAA6BJ,YAA7B,CAAZ;AACD;;AACD,UAAMM,QAAQ,GAAG;AACfR,MAAAA,IAAI,EAAE,KAAKA,IADI;AAEfC,MAAAA,OAAO,EAAE,KAAKA,OAAL,CAAaA,OAFP;AAGfC,MAAAA,YAHe;AAIfG,MAAAA,eAJe;AAKfC,MAAAA;AALe,KAAjB,CAP+D,CAc/D;AACA;AACA;AACA;AACA;AACA;;AACA,WAAOE,QAAP;AACD;;AA7BmB","sourcesContent":["import { SemVer } from 'semver';\nimport { PackageName, SemverVersion } from '../dependencies';\n\n// export type ManifestDependenciesKeys = 'dependencies' | 'devDependencies' | 'peerDependencies';\n\nexport type ManifestDependenciesKeys = {\n  dependencies: 'dependencies';\n  devDependencies: 'devDependencies';\n  peerDependencies: 'peerDependencies';\n};\n\nexport type ManifestDependenciesKeysNames = keyof ManifestDependenciesKeys;\n\nexport type ManifestDependenciesObject = Partial<Record<ManifestDependenciesKeysNames, DepObjectValue>>;\n\nexport type DepObjectValue = Record<PackageName, SemverVersion>;\n\nexport interface ManifestToJsonOptions {\n  copyPeerToRuntime?: boolean;\n}\n\nexport class Manifest {\n  constructor(public name: string, public version: SemVer, public dependencies: ManifestDependenciesObject) {}\n\n  // Should be implemented on sub classes\n  // get dir(): string {\n  //   throw new GeneralError('not implemented');\n  // }\n\n  toJson(options: ManifestToJsonOptions = {}): Record<string, any> {\n    let dependencies = this.dependencies.dependencies || {};\n    const devDependencies = this.dependencies.devDependencies || {};\n    const peerDependencies = this.dependencies.peerDependencies || {};\n    if (options.copyPeerToRuntime) {\n      dependencies = { ...peerDependencies, ...dependencies };\n    }\n    const manifest = {\n      name: this.name,\n      version: this.version.version,\n      dependencies,\n      devDependencies,\n      peerDependencies,\n    };\n    // if (options.includeDir) {\n    //   return {\n    //     rootDir: this.dir,\n    //     manifest,\n    //   };\n    // }\n    return manifest;\n  }\n}\n"]}