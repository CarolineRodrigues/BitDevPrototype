{"version":3,"sources":["update-dependency-version.spec.ts"],"names":["describe","it","dependency","getPackageName","lifecycle","version","setVersion","jest","fn","rootPolicy","getDepVersion","pkgName","undefined","variationPolicy","expect","toHaveBeenCalledWith"],"mappings":";;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAGAA,QAAQ,CAAC,2BAAD,EAA8B,YAAY;AAChDC,EAAAA,EAAE,CAAC,2EAAD,EAA8E,YAAY;AAC1F,UAAMC,UAAU,GAAG;AACjBC,MAAAA,cAAc,EAAE,MAAM,KADL;AAEjBC,MAAAA,SAAS,EAAE,KAFM;AAGjBC,MAAAA,OAAO,EAAE,OAHQ;AAIjB;AACAC,MAAAA,UAAU,EAAEC,IAAI,CAACC,EAAL;AALK,KAAnB,CAD0F,CAOhF;;AACV,UAAMC,UAAU,GAAG;AACjB;AACAC,MAAAA,aAAa,EAAEH,IAAI,CAACC,EAAL,CAAQ,CAACG,OAAD,EAAkBP,SAAlB,KACrBA,SAAS,KAAK,SAAd,GAA0B,OAA1B,GAAoCQ,SADvB;AAFE,KAAnB,CAR0F,CAahF;;AACV,UAAMC,eAAe,GAAG;AACtBH,MAAAA,aAAa,EAAE,MAAME;AADC,KAAxB,CAd0F,CAgBhF;;AACV,4DAAwBV,UAAxB,EAAoCO,UAApC,EAAgDI,eAAhD,EAjB0F,CAkB1F;AACA;AACA;;AACAC,IAAAA,MAAM,CAACL,UAAU,CAACC,aAAZ,CAAN,CAAiCK,oBAAjC,CAAsD,KAAtD,EAA6D,SAA7D;AACAD,IAAAA,MAAM,CAACZ,UAAU,CAACI,UAAZ,CAAN,CAA8BS,oBAA9B,CAAmD,OAAnD;AACD,GAvBC,CAAF;AAwBD,CAzBO,CAAR","sourcesContent":["import { updateDependencyVersion } from './update-dependency-version';\nimport { DependencyLifecycleType } from '../dependencies';\n\ndescribe('updateDependencyVersion()', function () {\n  it('should pick version from root policy, when no variation policy is present', function () {\n    const dependency = {\n      getPackageName: () => 'foo',\n      lifecycle: 'dev',\n      version: '1.0.0',\n      // @ts-ignore\n      setVersion: jest.fn(),\n    } as any; // eslint-disable-line\n    const rootPolicy = {\n      // @ts-ignore\n      getDepVersion: jest.fn((pkgName: string, lifecycle: DependencyLifecycleType) =>\n        lifecycle === 'runtime' ? '2.0.0' : undefined\n      ),\n    } as any; // eslint-disable-line\n    const variationPolicy = {\n      getDepVersion: () => undefined,\n    } as any; // eslint-disable-line\n    updateDependencyVersion(dependency, rootPolicy, variationPolicy);\n    // The lifecycle type is changed to runtime\n    // root policies don't have a separate property for dev dependencies\n    // both runtime and dev dependencies are specified through \"dependencies\"\n    expect(rootPolicy.getDepVersion).toHaveBeenCalledWith('foo', 'runtime');\n    expect(dependency.setVersion).toHaveBeenCalledWith('2.0.0');\n  });\n});\n"]}