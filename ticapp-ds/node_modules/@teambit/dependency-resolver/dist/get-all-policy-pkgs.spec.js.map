{"version":3,"sources":["get-all-policy-pkgs.spec.ts"],"names":["describe","it","outdatedPkgs","rootPolicy","WorkspacePolicy","variantPoliciesByPatterns","comp","dependencies","foo","version","resolveFromEnv","devDependencies","peerDependencies","componentPoliciesById","expect","toStrictEqual","currentRange","name","source","targetField","variantPattern"],"mappings":";;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEAA,QAAQ,CAAC,oBAAD,EAAuB,MAAM;AACnCC,EAAAA,EAAE,CAAC,+CAAD,EAAkD,MAAM;AACxD,UAAMC,YAAY,GAAG,0CAAiB;AACpCC,MAAAA,UAAU,EAAE,KAAIC,yBAAJ,EAAoB,EAApB,CADwB;AAEpCC,MAAAA,yBAAyB,EAAE;AACzBC,QAAAA,IAAI,EAAE;AACJC,UAAAA,YAAY,EAAE;AACZC,YAAAA,GAAG,EAAE;AACHC,cAAAA,OAAO,EAAE,GADN;AAEHC,cAAAA,cAAc,EAAE;AAFb;AADO,WADV;AAOJC,UAAAA,eAAe,EAAE,EAPb;AAQJC,UAAAA,gBAAgB,EAAE;AARd;AADmB,OAFS;AAcpCC,MAAAA,qBAAqB,EAAE;AAda,KAAjB,CAArB,CADwD,CAiBxD;;AACAC,IAAAA,MAAM,CAACZ,YAAD,CAAN,CAAqBa,aAArB,CAAmC,CACjC;AACEC,MAAAA,YAAY,EAAE,GADhB;AAEEC,MAAAA,IAAI,EAAE,KAFR;AAGEC,MAAAA,MAAM,EAAE,UAHV;AAIEC,MAAAA,WAAW,EAAE,cAJf;AAKEC,MAAAA,cAAc,EAAE;AALlB,KADiC,CAAnC;AASD,GA3BC,CAAF;AA4BD,CA7BO,CAAR","sourcesContent":["import { getAllPolicyPkgs } from './get-all-policy-pkgs';\nimport { WorkspacePolicy } from './policy';\n\ndescribe('getAllPolicyPkgs()', () => {\n  it('should read the version from a version object', () => {\n    const outdatedPkgs = getAllPolicyPkgs({\n      rootPolicy: new WorkspacePolicy([]),\n      variantPoliciesByPatterns: {\n        comp: {\n          dependencies: {\n            foo: {\n              version: '1',\n              resolveFromEnv: true,\n            },\n          },\n          devDependencies: {},\n          peerDependencies: {},\n        },\n      },\n      componentPoliciesById: {},\n    });\n    // @ts-ignore\n    expect(outdatedPkgs).toStrictEqual([\n      {\n        currentRange: '1',\n        name: 'foo',\n        source: 'variants',\n        targetField: 'dependencies',\n        variantPattern: 'comp',\n      },\n    ]);\n  });\n});\n"]}