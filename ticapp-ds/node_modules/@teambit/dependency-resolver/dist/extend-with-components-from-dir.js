"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

require("core-js/modules/es.array.iterator.js");

require("core-js/modules/es.promise.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.extendWithComponentsFromDir = extendWithComponentsFromDir;

function _fsExtra() {
  const data = _interopRequireDefault(require("fs-extra"));

  _fsExtra = function () {
    return data;
  };

  return data;
}

function _path() {
  const data = _interopRequireDefault(require("path"));

  _path = function () {
    return data;
  };

  return data;
}

/**
 * Currently, the same capsule directory is used multiple times during installation.
 * The issue is that the state between installations is not preserved,
 * so the node_modules directory gets broken on each sunseqent install.
 * This function is for finding all components in the root of the capsule and reading their manifests.
 * This way the package manager will have all the necessary information to keep the node_modules directory
 * in the correct state.
 */
async function extendWithComponentsFromDir(rootDir, manifestsByPaths) {
  const files = await _fsExtra().default.readdir(rootDir, {
    withFileTypes: true
  });
  return Promise.all(files.filter(file => file.isDirectory() && file.name !== 'node_modules').map(dir => _path().default.join(rootDir, dir.name)).filter(dirPath => !manifestsByPaths[dirPath]).map(async dirPath => {
    try {
      manifestsByPaths[dirPath] = await _fsExtra().default.readJson(_path().default.join(dirPath, 'package.json'));
    } catch (err) {
      if (err.code !== 'ENOENT') throw err;
    }
  }));
}

//# sourceMappingURL=extend-with-components-from-dir.js.map