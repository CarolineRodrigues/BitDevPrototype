{"version":3,"sources":["globals.cmd.ts"],"names":["GlobalsCmd","report","list","json","leftCol","Object","keys","padMax","Math","max","map","c","length","values","key","keyPadded","chalk","green","join","title","CACHE_GLOBALS_ENV","CACHE_ROOT","DEBUG_LOG","GLOBAL_SCOPE","GLOBAL_CONFIG"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAJA;AAMO,MAAMA,UAAN,CAAoC;AAAA;AAAA,kDAClC,SADkC;AAAA,yDAE1B,kBAF0B;AAAA,mDAGjC,WAHiC;AAAA,mDAIjC,EAJiC;AAAA,qDAK/B,CAAC,CAAC,GAAD,EAAM,MAAN,EAAc,aAAd,CAAD,CAL+B;AAAA;;AAO7B,QAANC,MAAM,GAAG;AACb,UAAMC,IAAI,GAAG,MAAM,KAAKC,IAAL,EAAnB;AACA,UAAMC,OAAO,GAAGC,MAAM,CAACC,IAAP,CAAYJ,IAAZ,CAAhB;AACA,UAAMK,MAAM,GAAGC,IAAI,CAACC,GAAL,CAAS,GAAGL,OAAO,CAACM,GAAR,CAAaC,CAAD,IAAOA,CAAC,CAACC,MAArB,CAAZ,IAA4C,CAA3D;AACA,UAAMC,MAAM,GAAGR,MAAM,CAACC,IAAP,CAAYJ,IAAZ,EACZQ,GADY,CACPI,GAAD,IAAS;AACZ,YAAMC,SAAS,GAAG,yBAASD,GAAT,EAAcP,MAAd,EAAsB,GAAtB,CAAlB;AACA,aAAQ,GAAES,iBAAMC,KAAN,CAAYF,SAAZ,CAAuB,IAAGb,IAAI,CAACY,GAAD,CAAM,EAA9C;AACD,KAJY,EAKZI,IALY,CAKP,IALO,CAAf;AAOA,UAAMC,KAAK,GAAI,8EAA6EC,8BAAkB,gBAA9G;AAEA,WAAQ,GAAED,KAAM,OAAMN,MAAO,EAA7B;AACD;;AAES,QAAJV,IAAI,GAAG;AACX,WAAO;AACL,oBAAckB,uBADT;AAEL,kBAAYC,sBAFP;AAGL,0BAAoBC,yBAHf;AAIL,oBAAcC;AAJT,KAAP;AAMD;;AA9BwC","sourcesContent":["// eslint-disable-next-line max-classes-per-file\nimport { Command, CommandOptions } from '@teambit/cli';\nimport chalk from 'chalk';\nimport padRight from 'pad-right';\nimport { CACHE_ROOT, DEBUG_LOG, GLOBAL_SCOPE, GLOBAL_CONFIG, CACHE_GLOBALS_ENV } from '@teambit/legacy/dist/constants';\n\nexport class GlobalsCmd implements Command {\n  name = 'globals';\n  description = `list all globals`;\n  group = 'workspace';\n  alias = '';\n  options = [['j', 'json', 'json format']] as CommandOptions;\n\n  async report() {\n    const list = await this.json();\n    const leftCol = Object.keys(list);\n    const padMax = Math.max(...leftCol.map((c) => c.length)) + 1;\n    const values = Object.keys(list)\n      .map((key) => {\n        const keyPadded = padRight(key, padMax, ' ');\n        return `${chalk.green(keyPadded)} ${list[key]}`;\n      })\n      .join('\\n');\n\n    const title = `the following globals are used by Bit. to change the global root dir, use \"${CACHE_GLOBALS_ENV}\" env variable`;\n\n    return `${title}\\n\\n${values}`;\n  }\n\n  async json() {\n    return {\n      'Global Dir': CACHE_ROOT,\n      'Log file': DEBUG_LOG,\n      'Global Scope Dir': GLOBAL_SCOPE,\n      'Config Dir': GLOBAL_CONFIG,\n    };\n  }\n}\n"]}