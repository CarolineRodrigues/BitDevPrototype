{"version":3,"sources":["global-config.main.runtime.ts"],"names":["GlobalConfigMain","get","key","getSync","list","listSync","set","val","setSync","del","delSync","provider","cli","register","GlobalsCmd","globalConfig","MainRuntime","CLIAspect","GlobalConfigAspect","addRuntime"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAWA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEO,MAAMA,gBAAN,CAAuB;AAKnB,QAAHC,GAAG,CAACC,GAAD,EAA2C;AAClD,WAAO,yBAAIA,GAAJ,CAAP;AACD;;AAEDC,EAAAA,OAAO,CAACD,GAAD,EAAkC;AACvC,WAAO,6BAAQA,GAAR,CAAP;AACD;;AAEDE,EAAAA,IAAI,GAAoC;AACtC,WAAO,2BAAP;AACD;;AACDC,EAAAA,QAAQ,GAA2B;AACjC,WAAO,+BAAP;AACD;;AAEQ,QAAHC,GAAG,CAACJ,GAAD,EAAcK,GAAd,EAAkD;AACzD,WAAO,yBAAIL,GAAJ,EAASK,GAAT,CAAP;AACD;;AACDC,EAAAA,OAAO,CAACN,GAAD,EAAcK,GAAd,EAAyC;AAC9C,WAAO,6BAAQL,GAAR,EAAaK,GAAb,CAAP;AACD;;AAEQ,QAAHE,GAAG,CAACP,GAAD,EAAqC;AAC5C,WAAO,yBAAIA,GAAJ,CAAP;AACD;;AAEDQ,EAAAA,OAAO,CAACR,GAAD,EAA4B;AACjC,WAAO,6BAAQA,GAAR,CAAP;AACD;;AAEoB,eAARS,QAAQ,CAAC,CAACC,GAAD,CAAD,EAAmB;AACtCA,IAAAA,GAAG,CAACC,QAAJ,CAAa,KAAIC,qBAAJ,GAAb;AACA,UAAMC,YAAY,GAAG,IAAIf,gBAAJ,EAArB;AACA,WAAOe,YAAP;AACD;;AAvC2B;;;gCAAjBf,gB,aACMgB,kB;gCADNhB,gB,kBAEW,CAACiB,gBAAD,C;gCAFXjB,gB,WAGI,E;;AAuCjBkB,oCAAmBC,UAAnB,CAA8BnB,gBAA9B","sourcesContent":["import { CLIAspect, CLIMain, MainRuntime } from '@teambit/cli';\nimport {\n  del,\n  delSync,\n  get,\n  getSync,\n  list,\n  listSync,\n  set,\n  setSync,\n} from '@teambit/legacy/dist/api/consumer/lib/global-config';\nimport { GlobalConfig } from '@teambit/legacy/dist/global-config';\nimport { GlobalConfigAspect } from './global-config.aspect';\nimport { GlobalsCmd } from './globals.cmd';\n\nexport class GlobalConfigMain {\n  static runtime = MainRuntime;\n  static dependencies = [CLIAspect];\n  static slots = [];\n\n  async get(key: string): Promise<string | undefined> {\n    return get(key);\n  }\n\n  getSync(key: string): string | undefined {\n    return getSync(key);\n  }\n\n  list(): Promise<Record<string, string>> {\n    return list();\n  }\n  listSync(): Record<string, string> {\n    return listSync();\n  }\n\n  async set(key: string, val: string): Promise<GlobalConfig> {\n    return set(key, val);\n  }\n  setSync(key: string, val: string): GlobalConfig {\n    return setSync(key, val);\n  }\n\n  async del(key: string): Promise<GlobalConfig> {\n    return del(key);\n  }\n\n  delSync(key: string): GlobalConfig {\n    return delSync(key);\n  }\n\n  static async provider([cli]: [CLIMain]) {\n    cli.register(new GlobalsCmd());\n    const globalConfig = new GlobalConfigMain();\n    return globalConfig;\n  }\n}\n\nGlobalConfigAspect.addRuntime(GlobalConfigMain);\n"]}