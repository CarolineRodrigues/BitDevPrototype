{"version":3,"sources":["babel.main.runtime.ts"],"names":["BabelMain","constructor","logger","compiler","createCompiler","options","babelModule","babel","BabelCompiler","BabelAspect","id","getPackageJsonProps","main","provider","loggerExt","createLogger","MainRuntime","LoggerAspect","CompilerAspect","addRuntime"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;AAEO,MAAMA,SAAN,CAAgB;AACrBC,EAAAA,WAAW,CAASC,MAAT,EAAiCC,QAAjC,EAAyD;AAAA,SAAhDD,MAAgD,GAAhDA,MAAgD;AAAA,SAAxBC,QAAwB,GAAxBA,QAAwB;AAAE;;AAEtEC,EAAAA,cAAc,CAACC,OAAD,EAAgCC,WAAW,GAAGC,KAAK,EAAnD,EAAoE;AAChF,WAAO,KAAIC,uBAAJ,EAAkBC,qBAAYC,EAA9B,EAAkC,KAAKR,MAAvC,EAA+C,KAAKC,QAApD,EAA8DE,OAA9D,EAAuEC,WAAvE,CAAP;AACD;;AAEDK,EAAAA,mBAAmB,GAAG;AACpB,WAAO;AACLC,MAAAA,IAAI,EAAE;AADD,KAAP;AAGD;;AAKoB,eAARC,QAAQ,CAAC,CAACC,SAAD,EAAYX,QAAZ,CAAD,EAAoD;AACvE,UAAMD,MAAM,GAAGY,SAAS,CAACC,YAAV,CAAuBN,qBAAYC,EAAnC,CAAf;AACA,WAAO,IAAIV,SAAJ,CAAcE,MAAd,EAAsBC,QAAtB,CAAP;AACD;;AAnBoB;;;gCAAVH,S,aAaMgB,kB;gCAbNhB,S,kBAcW,CAACiB,sBAAD,EAAeC,0BAAf,C;;AAQxBT,qBAAYU,UAAZ,CAAuBnB,SAAvB","sourcesContent":["import { MainRuntime } from '@teambit/cli';\nimport { CompilerAspect, CompilerMain } from '@teambit/compiler';\nimport { Logger, LoggerAspect, LoggerMain } from '@teambit/logger';\nimport * as babel from '@babel/core';\nimport { BabelCompilerOptions } from './compiler-options';\nimport { BabelAspect } from './babel.aspect';\nimport { BabelCompiler } from './babel.compiler';\n\nexport class BabelMain {\n  constructor(private logger: Logger, private compiler: CompilerMain) {}\n\n  createCompiler(options: BabelCompilerOptions, babelModule = babel): BabelCompiler {\n    return new BabelCompiler(BabelAspect.id, this.logger, this.compiler, options, babelModule);\n  }\n\n  getPackageJsonProps() {\n    return {\n      main: 'dist/{main}.js',\n    };\n  }\n\n  static runtime = MainRuntime;\n  static dependencies = [LoggerAspect, CompilerAspect];\n\n  static async provider([loggerExt, compiler]: [LoggerMain, CompilerMain]) {\n    const logger = loggerExt.createLogger(BabelAspect.id);\n    return new BabelMain(logger, compiler);\n  }\n}\n\nBabelAspect.addRuntime(BabelMain);\n"]}