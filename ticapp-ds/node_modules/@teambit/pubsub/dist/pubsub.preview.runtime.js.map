{"version":3,"sources":["pubsub.preview.runtime.ts"],"names":["PubsubPreview","EventEmitter2","retries","PubSubNoParentError","timeout","methods","pub","handleMessageFromParent","promise","then","parentPubsub","_parentPubsub","catch","e","code","ErrorCode","ConnectionTimeout","connectToParentPubSub","topic","message","events","emit","sub","callback","emitter","on","unSub","off","event","err","console","error","inIframe","isBrowser","window","self","top","provider","pubsubPreview","PreviewRuntime","PubsubAspect","addRuntime"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAIA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAGA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAZA;AACA;AACA;AAiBO,MAAMA,aAAN,CAAoB;AAAA;AAAA;AAAA,oDAER,KAAIC,6BAAJ,GAFQ;AAAA,mEA8BO,CAACC,OAAO,GAAG,EAAX,KAAsD;AACpF,UAAIA,OAAO,IAAI,CAAf,EAAkB,MAAM,KAAIC,oCAAJ,GAAN;AAElB,aAAO,+BAA+B;AACpCC,QAAAA,OAAO,EAAE,GAD2B;AAEpCC,QAAAA,OAAO,EAAE;AACPC,UAAAA,GAAG,EAAE,KAAKC;AADH;AAF2B,OAA/B,EAMJC,OANI,CAMIC,IANJ,CAMUC,YAAD,IAAmB,KAAKC,aAAL,GAAqBD,YANjD,EAOJE,KAPI,CAOGC,CAAD,IAAY;AACjB,YAAIA,CAAC,CAACC,IAAF,KAAWC,oBAAUC,iBAAzB,EAA4C,MAAMH,CAAN;AAE5C,eAAO,KAAKI,qBAAL,CAA2Bf,OAAO,GAAG,CAArC,CAAP;AACD,OAXI,CAAP;AAYD,KA7CwB;AAAA,qEA+CS,CAACgB,KAAD,EAAgBC,OAAhB,KAA+C;AAC/E,WAAKC,MAAL,CAAYC,IAAZ,CAAiBH,KAAjB,EAAwBC,OAAxB;AACD,KAjDwB;AAAA;;AAIlBG,EAAAA,GAAG,CAACJ,KAAD,EAAgBK,QAAhB,EAAoC;AAC5C,UAAMC,OAAO,GAAG,KAAKJ,MAArB;AACAI,IAAAA,OAAO,CAACC,EAAR,CAAWP,KAAX,EAAkBK,QAAlB;;AAEA,UAAMG,KAAK,GAAG,MAAM;AAClBF,MAAAA,OAAO,CAACG,GAAR,CAAYT,KAAZ,EAAmBK,QAAnB;AACD,KAFD;;AAGA,WAAOG,KAAP;AACD;;AAEMpB,EAAAA,GAAG,CAACY,KAAD,EAAgBU,KAAhB,EAA0C;AAAA;;AAClD,SAAKR,MAAL,CAAYC,IAAZ,CAAiBH,KAAjB,EAAwBU,KAAxB;AACA,gCAAKjB,aAAL,4EAAoBL,GAApB,CAAwBY,KAAxB,EAA+BU,KAA/B,EAAsChB,KAAtC,CAA6CiB,GAAD,IAAS;AACnD;AACAC,MAAAA,OAAO,CAACC,KAAR,CAAc,kBAAd,EAAkCF,GAAlC;AACD,KAHD;AAID;;AAEOG,EAAAA,QAAQ,GAAG;AACjB,QAAI;AACF,aAAOC,+BAAaC,MAAM,CAACC,IAAP,KAAgBD,MAAM,CAACE,GAA3C;AACD,KAFD,CAEE,OAAOvB,CAAP,EAAe;AACf,aAAO,KAAP;AACD;AACF;;AAyBoB,eAARwB,QAAQ,GAA2B;AAC9C,UAAMC,aAAa,GAAG,IAAItC,aAAJ,EAAtB;;AAEA,QAAIsC,aAAa,CAACN,QAAd,EAAJ,EAA8B;AAC5BM,MAAAA,aAAa,CAACrB,qBAAd,GAAsCL,KAAtC,CAA6CiB,GAAD,IAAS;AACnD;AACA,YAAIA,GAAG,YAAY1B,oCAAnB,EAAwC,OAFW,CAInD;;AACA2B,QAAAA,OAAO,CAACC,KAAR,CAAc,kBAAd,EAAkCF,GAAlC;AACD,OAND;AAOD;;AAED,WAAOS,aAAP;AACD;;AAnEwB;;;gCAAdtC,a,aAmDMuC,yB;;AAmBnBC,uBAAaC,UAAb,CAAwBzC,aAAxB","sourcesContent":["/**\n * Please Notice: This file will run in the preview iframe.\n */\n\nimport { PreviewRuntime } from '@teambit/preview';\nimport { isBrowser } from '@teambit/ui-foundation.ui.is-browser';\n\nimport { EventEmitter2 } from 'eventemitter2';\nimport { connectToParent, ErrorCode } from 'penpal';\n\nimport { BitBaseEvent } from './bit-base-event';\nimport { PubSubNoParentError } from './no-parent-error';\nimport { PubsubAspect } from './pubsub.aspect';\nimport { Callback } from './types';\n\ntype ParentMethods = {\n  pub: (topic: string, event: BitBaseEvent<any>) => Promise<any>;\n};\n\nexport class PubsubPreview {\n  private _parentPubsub?: ParentMethods;\n  private events = new EventEmitter2();\n\n  public sub(topic: string, callback: Callback) {\n    const emitter = this.events;\n    emitter.on(topic, callback);\n\n    const unSub = () => {\n      emitter.off(topic, callback);\n    };\n    return unSub;\n  }\n\n  public pub(topic: string, event: BitBaseEvent<any>) {\n    this.events.emit(topic, event);\n    this._parentPubsub?.pub(topic, event).catch((err) => {\n      // eslint-disable-next-line no-console\n      console.error('[Pubsub.preview]', err);\n    });\n  }\n\n  private inIframe() {\n    try {\n      return isBrowser && window.self !== window.top;\n    } catch (e: any) {\n      return false;\n    }\n  }\n\n  private connectToParentPubSub = (retries = 10): Promise<ParentMethods | undefined> => {\n    if (retries <= 0) throw new PubSubNoParentError();\n\n    return connectToParent<ParentMethods>({\n      timeout: 300,\n      methods: {\n        pub: this.handleMessageFromParent,\n      },\n    })\n      .promise.then((parentPubsub) => (this._parentPubsub = parentPubsub))\n      .catch((e: any) => {\n        if (e.code !== ErrorCode.ConnectionTimeout) throw e;\n\n        return this.connectToParentPubSub(retries - 1);\n      });\n  };\n\n  private handleMessageFromParent = (topic: string, message: BitBaseEvent<any>) => {\n    this.events.emit(topic, message);\n  };\n\n  static runtime = PreviewRuntime;\n\n  static async provider(): Promise<PubsubPreview> {\n    const pubsubPreview = new PubsubPreview();\n\n    if (pubsubPreview.inIframe()) {\n      pubsubPreview.connectToParentPubSub().catch((err) => {\n        // parent window is not required to accept connections\n        if (err instanceof PubSubNoParentError) return;\n\n        // eslint-disable-next-line no-console\n        console.error('[Pubsub.preview]', err);\n      });\n    }\n\n    return pubsubPreview;\n  }\n}\n\nPubsubAspect.addRuntime(PubsubPreview);\n"]}