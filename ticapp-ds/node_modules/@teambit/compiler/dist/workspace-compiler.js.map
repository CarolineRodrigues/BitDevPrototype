{"version":3,"sources":["workspace-compiler.ts"],"names":["ComponentCompiler","constructor","pubsub","workspace","component","compilerInstance","compilerId","logger","dists","compileErrors","compile","noThrow","options","dataToPersist","deleteDistDir","DataToPersist","removePath","RemovePath","distDir","addBasePath","path","persistAllToFS","compilers","canTranspileFile","find","c","transpileFile","canTranspileComponent","transpileComponent","Promise","all","filesystem","files","map","file","compileOneFile","initiator","compileAllFiles","Error","toString","throwOnCompileErrors","addManyFiles","buildResults","distFile","state","_consumer","compiler","loader","succeed","pub","CompilerAspect","id","ComponentCompilationOnDoneEvent","length","forEach","errorItem","error","formatError","err","join","CompilerErrorEvent","console","message","packageName","packageDir","distDirName","DEFAULT_DIST_DIRNAME","componentDir","filePath","relative","isFileSupported","compileResults","contents","push","base","result","Dist","outputPath","Buffer","from","outputText","shouldCopyNonSupportedFiles","filesToCompile","outputDir","getComponentPackagePath","WorkspaceCompiler","envs","aspectLoader","ui","registerOnComponentChange","onComponentChange","bind","registerOnComponentAdd","registerOnPreWatch","onPreWatch","registerPreStart","onPreStart","registerOnAspectLoadErrorSlot","onAspectLoadFail","preStartOpts","skipCompilation","compileComponents","changed","verbose","CompilationInitiator","PreStart","code","AspectLoadFail","ComponentChanged","results","components","watchOpts","preCompile","start","Date","now","_legacy","PreWatch","end","consoleSuccess","componentsIds","ConsumerNotFound","isLegacy","componentIds","getIdsToCompile","getMany","componentsCompilers","environment","getEnv","env","getCompiler","componentMap","getComponentDir","compilerName","name","resultOnWorkspace","componentCompiler","resolveMultipleComponentIds","getNewAndModifiedIds","getAllComponentIds"],"mappings":"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","sourcesContent":["/* eslint-disable max-classes-per-file */\nimport mapSeries from 'p-map-series';\nimport { Component, ComponentID } from '@teambit/component';\nimport { EnvsMain } from '@teambit/envs';\nimport type { PubsubMain } from '@teambit/pubsub';\nimport { SerializableResults, Workspace, WatchOptions } from '@teambit/workspace';\nimport path from 'path';\nimport { BitId } from '@teambit/legacy-bit-id';\nimport { Logger } from '@teambit/logger';\nimport loader from '@teambit/legacy/dist/cli/loader';\nimport { DEFAULT_DIST_DIRNAME } from '@teambit/legacy/dist/constants';\nimport { AbstractVinyl, Dist } from '@teambit/legacy/dist/consumer/component/sources';\nimport DataToPersist from '@teambit/legacy/dist/consumer/component/sources/data-to-persist';\nimport { AspectLoaderMain } from '@teambit/aspect-loader';\nimport { ConsumerNotFound } from '@teambit/legacy/dist/consumer/exceptions';\nimport componentIdToPackageName from '@teambit/legacy/dist/utils/bit/component-id-to-package-name';\nimport RemovePath from '@teambit/legacy/dist/consumer/component/sources/remove-path';\nimport { UiMain } from '@teambit/ui';\nimport type { PreStartOpts } from '@teambit/ui';\nimport { PathOsBasedAbsolute, PathOsBasedRelative } from '@teambit/legacy/dist/utils/path';\nimport { MultiCompiler } from '@teambit/multi-compiler';\nimport { CompilerAspect } from './compiler.aspect';\nimport { CompilerErrorEvent, ComponentCompilationOnDoneEvent } from './events';\nimport { Compiler, CompilationInitiator } from './types';\n\nexport type BuildResult = { component: string; buildResults: string[] | null | undefined };\n\nexport type CompileOptions = {\n  changed?: boolean; // compile only new and modified components\n  verbose?: boolean; // show more data, such as, dist paths\n  /**\n   * whether the dist root dir should be deleted before writing new dists.\n   * defaults to true for `bit compile` and false everywhere else, such as `bit watch` and `bit\n   * start` to avoid webpack \"EINTR\" error.\n   */\n  deleteDistDir?: boolean;\n  initiator: CompilationInitiator; // describes where the compilation is coming from\n};\n\nexport type CompileError = { path: string; error: Error };\n\nexport class ComponentCompiler {\n  constructor(\n    private pubsub: PubsubMain,\n    private workspace: Workspace,\n    private component: Component,\n    private compilerInstance: Compiler,\n    private compilerId: string,\n    private logger: Logger,\n    private dists: Dist[] = [],\n    private compileErrors: CompileError[] = []\n  ) {}\n\n  async compile(noThrow = true, options: CompileOptions): Promise<BuildResult> {\n    let dataToPersist;\n    const deleteDistDir = options.deleteDistDir ?? this.compilerInstance.deleteDistDir;\n    // delete dist folder before transpilation (because some compilers (like ngPackagr) can generate files there during the compilation process)\n    if (deleteDistDir) {\n      dataToPersist = new DataToPersist();\n      dataToPersist.removePath(new RemovePath(this.distDir));\n      dataToPersist.addBasePath(this.workspace.path);\n      await dataToPersist.persistAllToFS();\n    }\n\n    const compilers: Compiler[] = (this.compilerInstance as MultiCompiler).compilers\n      ? (this.compilerInstance as MultiCompiler).compilers\n      : [this.compilerInstance];\n    const canTranspileFile = compilers.find((c) => c.transpileFile);\n    const canTranspileComponent = compilers.find((c) => c.transpileComponent);\n\n    if (canTranspileFile) {\n      await Promise.all(\n        this.component.filesystem.files.map((file: AbstractVinyl) => this.compileOneFile(file, options.initiator))\n      );\n    }\n\n    if (canTranspileComponent) {\n      await this.compileAllFiles(this.component, options.initiator);\n    }\n\n    if (!canTranspileFile && !canTranspileComponent) {\n      throw new Error(\n        `compiler ${this.compilerId.toString()} doesn't implement either \"transpileFile\" or \"transpileComponent\" methods`\n      );\n    }\n    this.throwOnCompileErrors(noThrow);\n\n    // writing the dists with `component.setDists(dists); component.dists.writeDists` is tricky\n    // as it uses other base-paths and doesn't respect the new node-modules base path.\n    dataToPersist = new DataToPersist();\n    dataToPersist.addManyFiles(this.dists);\n    dataToPersist.addBasePath(this.workspace.path);\n    await dataToPersist.persistAllToFS();\n    const buildResults = this.dists.map((distFile) => distFile.path);\n    if (this.component.state._consumer.compiler) loader.succeed();\n    this.pubsub.pub(\n      CompilerAspect.id,\n      new ComponentCompilationOnDoneEvent(this.compileErrors, this.component, buildResults)\n    );\n    return { component: this.component.id.toString(), buildResults };\n  }\n\n  private throwOnCompileErrors(noThrow = true) {\n    if (this.compileErrors.length) {\n      this.compileErrors.forEach((errorItem) => {\n        this.logger.error(`compilation error at ${errorItem.path}`, errorItem.error);\n      });\n      const formatError = (errorItem) => `${errorItem.path}\\n${errorItem.error}`;\n      const err = new Error(`compilation failed. see the following errors from the compiler\n${this.compileErrors.map(formatError).join('\\n')}`);\n\n      this.pubsub.pub(CompilerAspect.id, new CompilerErrorEvent(err));\n\n      if (!noThrow) {\n        throw err;\n      }\n\n      this.logger.console(err.message);\n    }\n  }\n\n  private get distDir(): PathOsBasedRelative {\n    const packageName = componentIdToPackageName(this.component.state._consumer);\n    const packageDir = path.join('node_modules', packageName);\n    const distDirName = DEFAULT_DIST_DIRNAME;\n    return path.join(packageDir, distDirName);\n  }\n\n  private get componentDir(): PathOsBasedAbsolute {\n    return this.workspace.componentDir(this.component.id);\n  }\n\n  private async compileOneFile(file: AbstractVinyl, initiator: CompilationInitiator): Promise<void> {\n    const options = { componentDir: this.componentDir, filePath: file.relative, initiator };\n    const isFileSupported = this.compilerInstance.isFileSupported(file.path);\n    let compileResults;\n    if (isFileSupported) {\n      try {\n        compileResults = this.compilerInstance.transpileFile?.(file.contents.toString(), options);\n      } catch (error: any) {\n        this.compileErrors.push({ path: file.path, error });\n        return;\n      }\n    }\n    const base = this.distDir;\n    if (isFileSupported && compileResults) {\n      this.dists.push(\n        ...compileResults.map(\n          (result) =>\n            new Dist({\n              base,\n              path: path.join(base, result.outputPath),\n              contents: Buffer.from(result.outputText),\n            })\n        )\n      );\n    } else if (this.compilerInstance.shouldCopyNonSupportedFiles) {\n      // compiler doesn't support this file type. copy the file as is to the dist dir.\n      this.dists.push(new Dist({ base, path: path.join(base, file.relative), contents: file.contents }));\n    }\n  }\n\n  private async compileAllFiles(component: Component, initiator: CompilationInitiator): Promise<void> {\n    const base = this.distDir;\n    const filesToCompile: AbstractVinyl[] = [];\n    component.filesystem.files.forEach((file: AbstractVinyl) => {\n      const isFileSupported = this.compilerInstance.isFileSupported(file.path);\n      if (isFileSupported) {\n        filesToCompile.push(file);\n      } else if (this.compilerInstance.shouldCopyNonSupportedFiles) {\n        // compiler doesn't support this file type. copy the file as is to the dist dir.\n        this.dists.push(\n          new Dist({\n            base,\n            path: path.join(base, file.relative),\n            contents: file.contents,\n          })\n        );\n      }\n    });\n\n    if (filesToCompile.length) {\n      try {\n        await this.compilerInstance.transpileComponent?.({\n          component,\n          componentDir: this.componentDir,\n          outputDir: this.workspace.getComponentPackagePath(component),\n          initiator,\n        });\n      } catch (error: any) {\n        this.compileErrors.push({ path: this.componentDir, error });\n      }\n    }\n  }\n}\n\nexport class WorkspaceCompiler {\n  constructor(\n    private workspace: Workspace,\n    private envs: EnvsMain,\n    private pubsub: PubsubMain,\n    private aspectLoader: AspectLoaderMain,\n    private ui: UiMain,\n    private logger: Logger\n  ) {\n    if (this.workspace) {\n      this.workspace.registerOnComponentChange(this.onComponentChange.bind(this));\n      this.workspace.registerOnComponentAdd(this.onComponentChange.bind(this));\n      this.workspace.registerOnPreWatch(this.onPreWatch.bind(this));\n      this.ui.registerPreStart(this.onPreStart.bind(this));\n    }\n    if (this.aspectLoader) {\n      this.aspectLoader.registerOnAspectLoadErrorSlot(this.onAspectLoadFail.bind(this));\n    }\n  }\n\n  async onPreStart(preStartOpts: PreStartOpts): Promise<void> {\n    if (preStartOpts.skipCompilation) {\n      return;\n    }\n    await this.compileComponents([], {\n      changed: true,\n      verbose: false,\n      deleteDistDir: false,\n      initiator: CompilationInitiator.PreStart,\n    });\n  }\n\n  async onAspectLoadFail(err: Error & { code?: string }, id: ComponentID): Promise<boolean> {\n    if (err.code && err.code === 'MODULE_NOT_FOUND' && this.workspace) {\n      await this.compileComponents([id.toString()], { initiator: CompilationInitiator.AspectLoadFail }, true);\n      return true;\n    }\n    return false;\n  }\n\n  async onComponentChange(\n    component: Component,\n    files: string[],\n    initiator?: CompilationInitiator\n  ): Promise<SerializableResults> {\n    const buildResults = await this.compileComponents(\n      [component.id.toString()],\n      { initiator: initiator || CompilationInitiator.ComponentChanged },\n      true\n    );\n    return {\n      results: buildResults,\n      toString() {\n        return `${buildResults[0]?.buildResults?.join('\\n\\t')}`;\n      },\n    };\n  }\n\n  async onPreWatch(components: Component[], watchOpts: WatchOptions) {\n    if (watchOpts.preCompile) {\n      const start = Date.now();\n      this.logger.console(`compiling ${components.length} components`);\n      await this.compileComponents(\n        components.map((c) => c.id._legacy),\n        { initiator: CompilationInitiator.PreWatch }\n      );\n      const end = Date.now() - start;\n      this.logger.consoleSuccess(`compiled ${components.length} components successfully (${end / 1000} sec)`);\n    }\n  }\n\n  async compileComponents(\n    componentsIds: string[] | BitId[] | ComponentID[], // when empty, it compiles new+modified (unless options.all is set),\n    options: CompileOptions,\n    noThrow?: boolean\n  ): Promise<BuildResult[]> {\n    if (!this.workspace) throw new ConsumerNotFound();\n    if (this.workspace.isLegacy) throw new Error('workspace-compiler should work for Harmony workspace only');\n    const componentIds = await this.getIdsToCompile(componentsIds, options.changed);\n    const components = await this.workspace.getMany(componentIds);\n\n    const componentsCompilers: ComponentCompiler[] = [];\n    components.forEach((c) => {\n      const environment = this.envs.getEnv(c).env;\n      const compilerInstance = environment.getCompiler?.();\n      // if there is no componentDir (e.g. author that added files, not dir), then we can't write the dists\n      // inside the component dir.\n      if (compilerInstance && c.state._consumer.componentMap?.getComponentDir()) {\n        const compilerName = compilerInstance.constructor.name || 'compiler';\n        componentsCompilers.push(\n          new ComponentCompiler(this.pubsub, this.workspace, c, compilerInstance, compilerName, this.logger)\n        );\n      }\n    });\n    const resultOnWorkspace = await mapSeries(componentsCompilers, (componentCompiler) =>\n      componentCompiler.compile(noThrow, options)\n    );\n\n    return resultOnWorkspace;\n  }\n\n  private async getIdsToCompile(\n    componentsIds: Array<string | ComponentID | BitId>,\n    changed = false\n  ): Promise<ComponentID[]> {\n    if (componentsIds.length) {\n      return this.workspace.resolveMultipleComponentIds(componentsIds);\n    }\n    if (changed) {\n      return this.workspace.getNewAndModifiedIds();\n    }\n    return this.workspace.getAllComponentIds();\n  }\n}\n"]}