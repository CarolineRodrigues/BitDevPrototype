{"version":3,"sources":["compiler.service.tsx"],"names":["CompilerService","render","env","descriptor","getDescriptor","id","displayName","version","config","language","ignoreIllegals","getCompiler","undefined","compiler","icon","displayConfig"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAQO,MAAMA,eAAN,CAAoE;AAAA;AAAA,kDAClE,SADkE;AAAA;;AAGzEC,EAAAA,MAAM,CAACC,GAAD,EAAqB;AACzB,UAAMC,UAAU,GAAG,KAAKC,aAAL,CAAmBF,GAAnB,CAAnB;AAEA,wBACE,+BAAC,WAAD;AAAM,MAAA,GAAG,EAAEC,UAAF,aAAEA,UAAF,uBAAEA,UAAU,CAAEE;AAAvB,oBACE,+BAAC,WAAD;AAAM,MAAA,KAAK,EAAC;AAAZ,+BADF,eAEE,+BAAC,WAAD,QACGF,UADH,aACGA,UADH,uBACGA,UAAU,CAAEE,EADf,QACqBF,UADrB,aACqBA,UADrB,uBACqBA,UAAU,CAAEG,WADjC,SACiDH,UADjD,aACiDA,UADjD,uBACiDA,UAAU,CAAEI,OAD7D,MAFF,eAKE,+BAAC,cAAD,OALF,eAME,+BAAC,WAAD;AAAM,MAAA,KAAK,EAAC;AAAZ,0BANF,eAOE,+BAAC,cAAD,OAPF,eAQE,+BAAC,WAAD,QACG,CAAAJ,UAAU,SAAV,IAAAA,UAAU,WAAV,YAAAA,UAAU,CAAEK,MAAZ,KAAsB,6BAAUL,UAAV,aAAUA,UAAV,uBAAUA,UAAU,CAAEK,MAAtB,EAA8B;AAAEC,MAAAA,QAAQ,EAAE,YAAZ;AAA0BC,MAAAA,cAAc,EAAE;AAA1C,KAA9B,CADzB,CARF,eAWE,+BAAC,cAAD,OAXF,CADF;AAeD;;AAEDN,EAAAA,aAAa,CAACF,GAAD,EAAqB;AAChC,QAAI,CAACA,GAAG,CAACA,GAAJ,CAAQS,WAAb,EAA0B,OAAOC,SAAP;AAC1B,UAAMC,QAAQ,GAAGX,GAAG,CAACA,GAAJ,CAAQS,WAAR,EAAjB;AAEA,WAAO;AACLN,MAAAA,EAAE,EAAEQ,QAAQ,CAACR,EADR;AAELS,MAAAA,IAAI,EAAED,QAAQ,CAACC,IAFV;AAGLN,MAAAA,MAAM,EAAEK,QAAQ,CAACE,aAAT,GAAyBF,QAAQ,CAACE,aAAT,EAAzB,GAAoDH,SAHvD;AAILL,MAAAA,OAAO,EAAEM,QAAQ,CAACN,OAAT,GAAmBM,QAAQ,CAACN,OAAT,EAAnB,GAAwC,GAJ5C;AAKLD,MAAAA,WAAW,EAAEO,QAAQ,CAACP,WAAT,GAAuBO,QAAQ,CAACP,WAAhC,GAA8C;AALtD,KAAP;AAOD;;AAlCwE","sourcesContent":["import React from 'react';\nimport { Text, Newline } from 'ink';\nimport { EnvService, EnvDefinition } from '@teambit/envs';\nimport highlight from 'cli-highlight';\n\nexport type CompilerDescriptor = {\n  id: string;\n  icon?: string;\n  config?: string;\n};\n\nexport class CompilerService implements EnvService<{}, CompilerDescriptor> {\n  name = 'Compile';\n\n  render(env: EnvDefinition) {\n    const descriptor = this.getDescriptor(env);\n\n    return (\n      <Text key={descriptor?.id}>\n        <Text color=\"cyan\">configured compiler: </Text>\n        <Text>\n          {descriptor?.id} ({descriptor?.displayName} @ {descriptor?.version})\n        </Text>\n        <Newline />\n        <Text color=\"cyan\">compiler config:</Text>\n        <Newline />\n        <Text>\n          {descriptor?.config && highlight(descriptor?.config, { language: 'javascript', ignoreIllegals: true })}\n        </Text>\n        <Newline />\n      </Text>\n    );\n  }\n\n  getDescriptor(env: EnvDefinition) {\n    if (!env.env.getCompiler) return undefined;\n    const compiler = env.env.getCompiler();\n\n    return {\n      id: compiler.id,\n      icon: compiler.icon,\n      config: compiler.displayConfig ? compiler.displayConfig() : undefined,\n      version: compiler.version ? compiler.version() : '?',\n      displayName: compiler.displayName ? compiler.displayName : '?',\n    };\n  }\n}\n"]}