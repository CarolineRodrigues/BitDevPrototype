{"version":3,"sources":["templates.cmd.ts"],"names":["TemplatesCmd","constructor","generator","report","args","templatesOptions","results","listTemplates","showAll","filter","template","hidden","grouped","titleStr","isRunningInsideWorkspace","title","chalk","green","templateOutput","desc","description","name","dim","output","Object","keys","map","aspectId","names","join","blue","bold"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAOO,MAAMA,YAAN,CAAsC;AAU3CC,EAAAA,WAAW,CAASC,SAAT,EAAmC;AAAA,SAA1BA,SAA0B,GAA1BA,SAA0B;AAAA,kDATvC,WASuC;AAAA,yDAP5C,yHAO4C;AAAA,8DAN3B,+CAM2B;AAAA,mDALtC,EAKsC;AAAA,oDAJrC,IAIqC;AAAA,mDAHtC,aAGsC;AAAA,qDAFpC,CAAC,CAAC,GAAD,EAAM,UAAN,EAAkB,uBAAlB,CAAD,CAEoC;AAAE,GAVL,CAY3C;;;AACY,QAANC,MAAM,CAACC,IAAD,EAAWC,gBAAX,EAA+C;AACzD,QAAIC,OAAO,GAAG,MAAM,KAAKJ,SAAL,CAAeK,aAAf,EAApB,CADyD,CAGzD;;AACA,QAAI,CAACF,gBAAgB,CAACG,OAAtB,EAA+B;AAC7BF,MAAAA,OAAO,GAAGA,OAAO,CAACG,MAAR,CAAgBC,QAAD,IAAc,CAACA,QAAQ,CAACC,MAAvC,CAAV;AACD;;AAED,UAAMC,OAAO,GAAG,uBAAQN,OAAR,EAAiB,UAAjB,CAAhB;AACA,UAAMO,QAAQ,GAAG,KAAKX,SAAL,CAAeY,wBAAf,KACZ,+HADY,GAEZ,wHAFL;;AAGA,UAAMC,KAAK,GAAGC,iBAAMC,KAAN,CAAa,KAAIJ,QAAS,IAA1B,CAAd;;AACA,UAAMK,cAAc,GAAIR,QAAD,IAAkC;AACvD,YAAMS,IAAI,GAAGT,QAAQ,CAACU,WAAT,GAAwB,KAAIV,QAAQ,CAACU,WAAY,GAAjD,GAAsD,EAAnE;AACA,aAAQ,OAAMV,QAAQ,CAACW,IAAK,GAAEL,iBAAMM,GAAN,CAAUH,IAAV,CAAgB,EAA9C;AACD,KAHD;;AAIA,UAAMI,MAAM,GAAGC,MAAM,CAACC,IAAP,CAAYb,OAAZ,EACZc,GADY,CACPC,QAAD,IAAc;AACjB,YAAMC,KAAK,GAAGhB,OAAO,CAACe,QAAD,CAAP,CAAkBD,GAAlB,CAAsBR,cAAtB,EAAsCW,IAAtC,CAA2C,IAA3C,CAAd;AACA,aAAQ,GAAEb,iBAAMc,IAAN,CAAWC,IAAX,CAAgBJ,QAAhB,CAA0B,KAAIC,KAAM,IAA9C;AACD,KAJY,EAKZC,IALY,CAKP,IALO,CAAf;AAMA,WAAOd,KAAK,GAAGQ,MAAf;AACD;;AArC0C","sourcesContent":["import { Command, CommandOptions } from '@teambit/cli';\nimport chalk from 'chalk';\nimport { groupBy } from 'lodash';\nimport { GeneratorMain, TemplateDescriptor } from './generator.main.runtime';\n\nexport type TemplatesOptions = {\n  showAll?: boolean;\n};\n\nexport class TemplatesCmd implements Command {\n  name = 'templates';\n  description =\n    'list components templates when inside bit-workspace (for bit-create), otherwise, list workspace templates (for bit-new)';\n  shortDescription = 'list templates for \"bit create\" and \"bit new\"';\n  alias = '';\n  loader = true;\n  group = 'development';\n  options = [['s', 'show-all', 'show hidden templates']] as CommandOptions;\n\n  constructor(private generator: GeneratorMain) {}\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async report(args: [], templatesOptions: TemplatesOptions) {\n    let results = await this.generator.listTemplates();\n\n    // Make sure that we don't list hidden templates\n    if (!templatesOptions.showAll) {\n      results = results.filter((template) => !template.hidden);\n    }\n\n    const grouped = groupBy(results, 'aspectId');\n    const titleStr = this.generator.isRunningInsideWorkspace()\n      ? `The following template(s) are available with the command bit create:  \\nExample - bit create <template-name> <component-name>`\n      : `The following template(s) are available with the command bit new: \\nExample - bit new <template-name> <workspace-name>`;\n    const title = chalk.green(`\\n${titleStr}\\n`);\n    const templateOutput = (template: TemplateDescriptor) => {\n      const desc = template.description ? ` (${template.description})` : '';\n      return `    ${template.name}${chalk.dim(desc)}`;\n    };\n    const output = Object.keys(grouped)\n      .map((aspectId) => {\n        const names = grouped[aspectId].map(templateOutput).join('\\n');\n        return `${chalk.blue.bold(aspectId)}\\n${names}\\n`;\n      })\n      .join('\\n');\n    return title + output;\n  }\n}\n"]}