import { Component } from '@teambit/component';
import { ComponentID } from '@teambit/component-id';
import { WorkspaceTemplate } from './workspace-template';
import { NewOptions } from './new.cmd';
export declare type GenerateResult = {
    id: ComponentID;
    dir: string;
    files: string[];
    envId: string;
};
export declare class WorkspaceGenerator {
    private workspaceName;
    private options;
    private template;
    private aspectComponent?;
    private workspacePath;
    private harmony;
    private workspace;
    private logger;
    constructor(workspaceName: string, options: NewOptions, template: WorkspaceTemplate, aspectComponent?: Component | undefined);
    generate(): Promise<string>;
    private initGit;
    private buildUI;
    /**
     * writes the generated template files to the default directory set in the workspace config
     */
    private writeWorkspaceFiles;
    private reloadBitInWorkspaceDir;
    private addComponentsFromRemote;
    private compileComponents;
    private getNewPackageNames;
    private getNewComponentIds;
    private resolveNewCompId;
    private replaceOriginalPackageNameWithNew;
}
