{"version":3,"sources":["new.cmd.ts"],"names":["NewCmd","constructor","generator","report","templateName","workspaceName","options","skipGit","standalone","results","generateWorkspaceTemplate","chalk","white","green","yellow","bold"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAWO,MAAMA,MAAN,CAAgC;AAwBrCC,EAAAA,WAAW,CAASC,SAAT,EAAmC;AAAA,SAA1BA,SAA0B,GAA1BA,SAA0B;AAAA,kDAvBvC,oCAuBuC;AAAA,yDAtBhC,wCAsBgC;AAAA,8DArB3B,EAqB2B;AAAA,mDApBtC,EAoBsC;AAAA,oDAnBrC,IAmBqC;AAAA,mDAlBtC,OAkBsC;AAAA,qDAjBpC,CACR,CACE,GADF,EAEE,iBAFF,EAGE,iHAHF,CADQ,EAMR,CAAC,GAAD,EAAM,wBAAN,EAAiC,6CAAjC,CANQ,EAOR,CAAC,EAAD,EAAK,YAAL,EAAmB,oCAAnB,CAPQ,EAQR,CAAC,GAAD,EAAM,UAAN,EAAkB,mCAAlB,CARQ,EASR,CAAC,GAAD,EAAM,OAAN,EAAe,4FAAf,CATQ,EAUR,CACE,EADF,EAEE,oBAFF,EAGE,qGAHF,CAVQ,CAiBoC;AAAE;;AAEpC,QAANC,MAAM,CAAC,CAACC,YAAD,EAAeC,aAAf,CAAD,EAAkDC,OAAlD,EAAiG;AAAA;;AAC3GA,IAAAA,OAAO,CAACC,OAAR,uBAAkBD,OAAO,CAACC,OAA1B,+DAAqCD,OAAO,CAACE,UAA7C;AACA,UAAMC,OAAO,GAAG,MAAM,KAAKP,SAAL,CAAeQ,yBAAf,CAAyCL,aAAzC,EAAwDD,YAAxD,EAAsEE,OAAtE,CAAtB;AACA,WAAOK,iBAAMC,KAAN,CACJ,GAAED,iBAAME,KAAN,CAAa;AACtB;AACA,8DAA8DJ,OAAQ,GAF7D,CAEiE;AAC1E;AACA,wBAAwBJ,aAAc;AACtC;AACA,QAAQM,iBAAMG,MAAN,CAAa,WAAb,CAA0B;AAClC;AACA;AACA,QAAQH,iBAAMG,MAAN,CAAa,aAAb,CAA4B;AACpC;AACA;AACA,QAAQH,iBAAMG,MAAN,CAAa,YAAb,CAA2B;AACnC;AACA;AACA,QAAQH,iBAAMG,MAAN,CAAa,aAAb,CAA4B;AACpC;AACA;AACA,QAAQH,iBAAMG,MAAN,CAAa,UAAb,CAAyB;AACjC;AACA;AACA,QAAQH,iBAAMG,MAAN,CAAa,eAAb,CAA8B;AACtC;AACA;AACA,QAAQH,iBAAMG,MAAN,CAAa,UAAb,CAAyB;AACjC;AACA;AACA;AACA,EAAEH,iBAAME,KAAN,CAAYE,IAAZ,CAAiB,oBAAjB,CAAuC;AACzC;AACA,QAAQJ,iBAAMG,MAAN,CAAc,MAAKT,aAAc,EAAjC,CAAoC;AAC5C,QAAQM,iBAAMG,MAAN,CAAc,WAAd,CAA0B;AAClC;AACA,OAlCW,CAAP;AAoCD;;AAjEoC","sourcesContent":["import { Command, CommandOptions } from '@teambit/cli';\nimport chalk from 'chalk';\nimport { GeneratorMain } from './generator.main.runtime';\n\nexport type NewOptions = {\n  aspect?: string;\n  defaultScope?: string;\n  skipGit?: boolean;\n  loadFrom?: string;\n  empty?: boolean;\n};\n\nexport class NewCmd implements Command {\n  name = 'new <templateName> <workspaceName>';\n  description = 'Create a new workspace from a template';\n  shortDescription = '';\n  alias = '';\n  loader = true;\n  group = 'start';\n  options = [\n    [\n      'a',\n      'aspect <string>',\n      'aspect-id of the template. mandatory for non-core aspects. helpful for core aspects in case of a name collision',\n    ],\n    ['d', 'default-scope <string>', `set defaultScope in the new workspace.jsonc`],\n    ['', 'standalone', 'DEPRECATED. use --skip-git instead'],\n    ['s', 'skip-git', 'skip generation of Git repository'],\n    ['e', 'empty', 'empty workspace with no components (relevant for templates that add components by default)'],\n    [\n      '',\n      'load-from <string>',\n      'path to the workspace containing the template. helpful during a development of a workspace-template',\n    ],\n  ] as CommandOptions;\n\n  constructor(private generator: GeneratorMain) {}\n\n  async report([templateName, workspaceName]: [string, string], options: NewOptions & { standalone: boolean }) {\n    options.skipGit = options.skipGit ?? options.standalone;\n    const results = await this.generator.generateWorkspaceTemplate(workspaceName, templateName, options);\n    return chalk.white(\n      `${chalk.green(`\n\nCongrats! A new workspace has been created successfully at '${results}'`)}\n\nInside the directory '${workspaceName}' you can run various commands including:\n\n      ${chalk.yellow('bit start')}\n        Starts the workspace in development mode\n\n      ${chalk.yellow('bit install')}\n        Installs any missing dependencies\n\n      ${chalk.yellow('bit status')}\n        Shows the status of the components\n\n      ${chalk.yellow('bit compile')}\n        Compiles the components\n\n      ${chalk.yellow('bit test')}\n        Runs the tests on all your components\n\n      ${chalk.yellow('bit templates')}\n        Shows all available component templates\n\n      ${chalk.yellow('bit help')}\n        Shows all available commands\n\n\n${chalk.green.bold(\"Let's get started!\")}\n\n      ${chalk.yellow(`cd ${workspaceName}`)}\n      ${chalk.yellow(`bit start`)}\n\n      `\n    );\n  }\n}\n"]}