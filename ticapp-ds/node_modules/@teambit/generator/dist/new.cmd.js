"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

require("core-js/modules/es.array.iterator.js");

require("core-js/modules/es.promise.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NewCmd = void 0;

function _defineProperty2() {
  const data = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

  _defineProperty2 = function () {
    return data;
  };

  return data;
}

function _chalk() {
  const data = _interopRequireDefault(require("chalk"));

  _chalk = function () {
    return data;
  };

  return data;
}

class NewCmd {
  constructor(generator) {
    this.generator = generator;
    (0, _defineProperty2().default)(this, "name", 'new <templateName> <workspaceName>');
    (0, _defineProperty2().default)(this, "description", 'Create a new workspace from a template');
    (0, _defineProperty2().default)(this, "shortDescription", '');
    (0, _defineProperty2().default)(this, "alias", '');
    (0, _defineProperty2().default)(this, "loader", true);
    (0, _defineProperty2().default)(this, "group", 'start');
    (0, _defineProperty2().default)(this, "options", [['a', 'aspect <string>', 'aspect-id of the template. mandatory for non-core aspects. helpful for core aspects in case of a name collision'], ['d', 'default-scope <string>', `set defaultScope in the new workspace.jsonc`], ['', 'standalone', 'DEPRECATED. use --skip-git instead'], ['s', 'skip-git', 'skip generation of Git repository'], ['e', 'empty', 'empty workspace with no components (relevant for templates that add components by default)'], ['', 'load-from <string>', 'path to the workspace containing the template. helpful during a development of a workspace-template']]);
  }

  async report([templateName, workspaceName], options) {
    var _options$skipGit;

    options.skipGit = (_options$skipGit = options.skipGit) !== null && _options$skipGit !== void 0 ? _options$skipGit : options.standalone;
    const results = await this.generator.generateWorkspaceTemplate(workspaceName, templateName, options);
    return _chalk().default.white(`${_chalk().default.green(`

Congrats! A new workspace has been created successfully at '${results}'`)}

Inside the directory '${workspaceName}' you can run various commands including:

      ${_chalk().default.yellow('bit start')}
        Starts the workspace in development mode

      ${_chalk().default.yellow('bit install')}
        Installs any missing dependencies

      ${_chalk().default.yellow('bit status')}
        Shows the status of the components

      ${_chalk().default.yellow('bit compile')}
        Compiles the components

      ${_chalk().default.yellow('bit test')}
        Runs the tests on all your components

      ${_chalk().default.yellow('bit templates')}
        Shows all available component templates

      ${_chalk().default.yellow('bit help')}
        Shows all available commands


${_chalk().default.green.bold("Let's get started!")}

      ${_chalk().default.yellow(`cd ${workspaceName}`)}
      ${_chalk().default.yellow(`bit start`)}

      `);
  }

}

exports.NewCmd = NewCmd;

//# sourceMappingURL=new.cmd.js.map