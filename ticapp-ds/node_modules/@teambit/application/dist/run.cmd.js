"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

require("core-js/modules/es.array.iterator.js");

require("core-js/modules/es.promise.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.RunCmd = void 0;

function _defineProperty2() {
  const data = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

  _defineProperty2 = function () {
    return data;
  };

  return data;
}

function _react() {
  const data = _interopRequireDefault(require("react"));

  _react = function () {
    return data;
  };

  return data;
}

function _ink() {
  const data = require("ink");

  _ink = function () {
    return data;
  };

  return data;
}

class RunCmd {
  constructor(
  /**
   * access to the extension instance.
   */
  application, logger) {
    this.application = application;
    this.logger = logger;
    (0, _defineProperty2().default)(this, "name", 'run <app>');
    (0, _defineProperty2().default)(this, "description", 'run an application');
    (0, _defineProperty2().default)(this, "alias", 'c');
    (0, _defineProperty2().default)(this, "group", 'apps');
    (0, _defineProperty2().default)(this, "options", [['d', 'dev', 'start the application in dev mode.'], ['v', 'verbose', 'showing verbose output for inspection and prints stack trace'], ['', 'skip-watch', 'avoid running the watch process that compiles components in the background']]);
  }

  async render([appName], {
    dev,
    skipWatch
  }) {
    // remove wds logs until refactoring webpack to a worker through the Worker aspect.
    const {
      port
    } = await this.application.runApp(appName, {
      dev,
      skipWatch
    });

    if (port) {
      return /*#__PURE__*/_react().default.createElement(_ink().Text, null, appName, " app is running on http://localhost:", port);
    }

    return /*#__PURE__*/_react().default.createElement(_ink().Text, null, appName, " app is running"); // return <UIServerConsole appName={appName} futureUiServer={uiServer} />;
  }

}

exports.RunCmd = RunCmd;

//# sourceMappingURL=run.cmd.js.map