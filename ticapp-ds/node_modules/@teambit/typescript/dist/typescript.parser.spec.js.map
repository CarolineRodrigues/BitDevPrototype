{"version":3,"sources":["typescript.parser.spec.ts"],"names":["describe","exampleArrowFunction","exampleFunction","exampleClass","it","ast","ts","createSourceFile","ScriptTarget","Latest","exports","TypeScriptParser","getExports","exportArrow","find","x","identifier","to","exist","exportFunction","exportClass","staticProperties","get","equal","exampleFile","parseStaticProperties","exportHello","undefined","has","be","false"],"mappings":"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","sourcesContent":["import ts from 'typescript';\nimport { expect } from 'chai';\n\nimport { TypeScriptParser } from './typescript.parser';\n\ndescribe('TypescriptParser', () => {\n  describe('getExports', () => {\n    const exampleArrowFunction = `\n      export const arrow = () => { return 3; }\n      arrow.textProperty = \"propertyValue\";\n    `;\n\n    const exampleFunction = `\n      export function func() { return 3; }\n      func.textProperty = \"propertyValue\";\n    `;\n\n    const exampleClass = `\n      export class classy{ render() { return 3; } }\n      classy.textProperty = \"propertyValue\";\n    `;\n\n    it('should parse arrowFunctions', () => {\n      const ast = ts.createSourceFile('example.tsx', exampleArrowFunction, ts.ScriptTarget.Latest);\n      const exports = new TypeScriptParser().getExports(ast);\n\n      const exportArrow = exports.find((x) => x.identifier === 'arrow');\n\n      expect(exportArrow).to.exist;\n    });\n\n    it('should parse function exports', () => {\n      const ast = ts.createSourceFile('example.tsx', exampleFunction, ts.ScriptTarget.Latest);\n      const exports = new TypeScriptParser().getExports(ast);\n\n      const exportFunction = exports.find((x) => x.identifier === 'func');\n\n      expect(exportFunction).to.exist;\n    });\n\n    it('should parse classes', () => {\n      const ast = ts.createSourceFile('example.tsx', exampleClass, ts.ScriptTarget.Latest);\n      const exports = new TypeScriptParser().getExports(ast);\n\n      const exportClass = exports.find((x) => x.identifier === 'classy');\n\n      expect(exportClass).to.exist;\n    });\n\n    describe('staticProperties', () => {\n      it('should include staticProperties, when on arrowFunctions', () => {\n        const ast = ts.createSourceFile('example.tsx', exampleArrowFunction, ts.ScriptTarget.Latest);\n        const exports = new TypeScriptParser().getExports(ast);\n\n        const exportArrow = exports.find((x) => x.identifier === 'arrow');\n\n        expect(exportArrow?.staticProperties?.get('textProperty')).to.equal('propertyValue');\n      });\n\n      it('should include staticProperties, when on regular functions', () => {\n        const ast = ts.createSourceFile('example.tsx', exampleFunction, ts.ScriptTarget.Latest);\n        const exports = new TypeScriptParser().getExports(ast);\n\n        const exportClass = exports.find((x) => x.identifier === 'func');\n\n        expect(exportClass?.staticProperties?.get('textProperty')).to.equal('propertyValue');\n      });\n\n      it('should include staticProperties, when on classes', () => {\n        const ast = ts.createSourceFile('example.tsx', exampleClass, ts.ScriptTarget.Latest);\n        const exports = new TypeScriptParser().getExports(ast);\n\n        const exportClass = exports.find((x) => x.identifier === 'classy');\n\n        expect(exportClass?.staticProperties?.get('textProperty')).to.equal('propertyValue');\n      });\n    });\n  });\n\n  describe('collectStaticProperties', () => {\n    const exampleFile = `\n      export const hello = () => { return 3; }\n\n      hello.text = \"is\";\n      hello.count = 3;\n      hello.nullish = null;\n      hello.undef = undefined;\n      hello.disable = false;\n      hello.enable = true;\n      hello.complextLiteral = \\`what \\${hello.text} it?\\`;\n      hello.nonAssignedProperty += 'value';\n    `;\n\n    it('should parse all primitive values', () => {\n      const ast = ts.createSourceFile('example.tsx', exampleFile, ts.ScriptTarget.Latest);\n      const staticProperties = new TypeScriptParser().parseStaticProperties(ast);\n\n      expect(staticProperties).to.exist;\n\n      const exportHello = staticProperties.get('hello');\n      expect(exportHello).to.exist;\n\n      expect(exportHello?.get('text')).to.equal('is');\n      expect(exportHello?.get('count')).to.equal(3);\n      expect(exportHello?.get('nullish')).to.equal(null);\n      expect(exportHello?.get('undef')).to.equal(undefined);\n      expect(exportHello?.get('disable')).to.equal(false);\n      expect(exportHello?.get('enable')).to.equal(true);\n\n      expect(exportHello?.has('complextLiteral')).to.be.false;\n    });\n\n    it('should skip non primitive values', () => {\n      const ast = ts.createSourceFile('example.tsx', exampleFile, ts.ScriptTarget.Latest);\n      const staticProperties = new TypeScriptParser().parseStaticProperties(ast);\n      const exportHello = staticProperties.get('hello');\n\n      expect(exportHello?.has('complextLiteral')).to.be.false;\n    });\n\n    it('should skip non assignment statements', () => {\n      const ast = ts.createSourceFile('example.tsx', exampleFile, ts.ScriptTarget.Latest);\n      const staticProperties = new TypeScriptParser().parseStaticProperties(ast);\n      const exportHello = staticProperties.get('hello');\n\n      expect(exportHello?.has('nonAssignedProperty')).to.be.false;\n    });\n  });\n});\n"]}