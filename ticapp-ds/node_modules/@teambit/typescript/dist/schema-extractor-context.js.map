{"version":3,"sources":["schema-extractor-context.ts"],"names":["SchemaExtractorContext","constructor","tsserver","component","extractor","undefined","computeSchema","node","getLocation","targetSourceFile","sourceFile","getSourceFile","position","getLineAndCharacterOfPosition","pos","line","character","getSignature","getSignatureHelp","getPath","getPosition","offset","getPositionOfLineAndCharacter","fileName","createRef","getQuickInfo","typeDefinition","getTypeDefinition","visitTypeDefinition","findFileInComponent","filePath","filesystem","files","find","file","path","includes","strings","map","format","endsWith","string","parseSourceFile","definition","def","getDefinition","firstDef","body","startPosition","start","nodeAtPos","visitDefinition","visit","parent","references","isExported","isFromComponent","getFileExports","exportDec","specifierPathStr","moduleSpecifier","getText","specifierPath","substring","length","absPath","computeExportedIdentifiers","setExports","exports","_exports","getExportedIdentifiers","isNative","typeName","jump","resolveType","typeStr","type","TypeRefSchema","typeDef","Promise","all","headDef"],"mappings":"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","sourcesContent":["import { TsserverClient } from '@teambit/ts-server';\nimport ts, { ExportDeclaration, Node } from 'typescript';\nimport { getTokenAtPosition } from 'tsutils';\nimport { head } from 'lodash';\nimport type { AbstractVinyl } from '@teambit/legacy/dist/consumer/component/sources';\nimport { resolve } from 'path';\nimport { Component } from '@teambit/component';\nimport { TypeRefSchema, SchemaNode } from '@teambit/semantics.entities.semantic-schema';\nimport { TypeScriptExtractor } from './typescript.extractor';\nimport { ExportList } from './export-list';\n\nexport class SchemaExtractorContext {\n  constructor(\n    readonly tsserver: TsserverClient,\n    readonly component: Component,\n    readonly extractor: TypeScriptExtractor\n  ) {}\n\n  computeSchema(node: Node) {\n    return this.extractor.computeSchema(node, this);\n  }\n\n  getLocation(node: Node, targetSourceFile?: ts.SourceFile) {\n    const sourceFile = targetSourceFile || node.getSourceFile();\n    const position = sourceFile.getLineAndCharacterOfPosition(node.pos);\n    const line = position.line + 1;\n    const character = position.character + 2; // need to verify why a 2 char difference here.\n\n    return {\n      line,\n      character,\n    };\n  }\n\n  async getSignature(node: Node) {\n    return this.tsserver.getSignatureHelp(this.getPath(node), this.getLocation(node));\n  }\n\n  getPosition(sourceFile: ts.SourceFile, line: number, offset: number): number {\n    return sourceFile.getPositionOfLineAndCharacter(line - 1, offset - 2);\n  }\n\n  getPath(node: Node) {\n    const sourceFile = node.getSourceFile();\n    return sourceFile.fileName;\n  }\n\n  createRef() {\n    return {};\n  }\n\n  getQuickInfo(node: Node) {\n    return this.tsserver.getQuickInfo(this.getPath(node), this.getLocation(node));\n  }\n\n  typeDefinition(node: Node) {\n    return this.tsserver.getTypeDefinition(this.getPath(node), this.getLocation(node));\n  }\n\n  visitTypeDefinition() {}\n\n  private findFileInComponent(filePath: string) {\n    return this.component.filesystem.files.find((file) => {\n      // TODO: fix this line to support further extensions.\n      if (file.path.includes(filePath)) {\n        const strings = ['ts', 'tsx', 'js', 'jsx'].map((format) => {\n          if (filePath.endsWith(format)) return filePath;\n          return `${filePath}.${format}`;\n        });\n\n        return strings.find((string) => string === file.path);\n      }\n\n      return false;\n    });\n  }\n\n  /**\n   * return the file if part of the component.\n   * otherwise, a reference to the target package and the type name.\n   */\n  private getSourceFile(filePath: string) {\n    const file = this.findFileInComponent(filePath);\n    if (!file) return undefined;\n    return this.extractor.parseSourceFile(file);\n  }\n\n  async definition(node: Node): Promise<Node | undefined> {\n    const def = await this.tsserver.getDefinition(this.getPath(node), this.getLocation(node));\n\n    const firstDef = head(def.body);\n    if (!firstDef) return undefined;\n\n    const startPosition = firstDef.start;\n    const sourceFile = this.getSourceFile(firstDef.file);\n    if (!sourceFile) return undefined; // learn how to return a reference to a different component here.\n    const pos = this.getPosition(sourceFile, startPosition.line, startPosition.offset);\n    const nodeAtPos = getTokenAtPosition(sourceFile, pos);\n    return nodeAtPos;\n  }\n\n  async visitDefinition(node: Node): Promise<SchemaNode | undefined> {\n    const definition = await this.definition(node);\n    if (!definition) return undefined;\n    return this.visit(definition.parent);\n  }\n\n  async visit(node: Node): Promise<SchemaNode | undefined> {\n    return this.extractor.computeSchema(node, this);\n  }\n\n  references() {}\n\n  isExported() {}\n\n  isFromComponent() {}\n\n  async getFileExports(exportDec: ExportDeclaration) {\n    const file = exportDec.getSourceFile().fileName;\n    const specifierPathStr = exportDec.moduleSpecifier?.getText() || '';\n    const specifierPath = specifierPathStr.substring(1, specifierPathStr.length - 1);\n    const absPath = resolve(file, '..', specifierPath);\n    const sourceFile = this.getSourceFile(absPath);\n    if (!sourceFile) return [];\n    return this.extractor.computeExportedIdentifiers(sourceFile, this);\n  }\n\n  _exports: ExportList | undefined = undefined;\n\n  setExports(exports: ExportList) {\n    this._exports = exports;\n    return this;\n  }\n\n  getExportedIdentifiers(node: Node) {\n    return this.extractor.computeExportedIdentifiers(node, this);\n  }\n\n  private isNative(typeName: string) {\n    return ['string', 'number', 'bool', 'boolean', 'object', 'any', 'void'].includes(typeName);\n  }\n\n  async jump(file: AbstractVinyl, start: any) {\n    const sourceFile = this.extractor.parseSourceFile(file);\n    const pos = this.getPosition(sourceFile, start.line, start.offset);\n    const nodeAtPos = getTokenAtPosition(sourceFile, pos);\n    if (!nodeAtPos) return undefined;\n    return this.visit(nodeAtPos);\n  }\n\n  async resolveType(node: Node, typeStr: string, type = true): Promise<TypeRefSchema> {\n    if (this.isNative(typeStr)) return new TypeRefSchema(typeStr);\n    if (this._exports?.includes(typeStr)) return new TypeRefSchema(typeStr);\n\n    const typeDef = type\n      ? await this.tsserver.getDefinition(node.getSourceFile().fileName, this.getLocation(node))\n      : await this.typeDefinition(node);\n\n    const def = await Promise.all(\n      typeDef?.body?.map(async (definition) => {\n        const file = this.findFileInComponent(definition.file);\n        // TODO: find component id is exists, otherwise add the package name.\n        if (!file) return new TypeRefSchema(typeStr, undefined, '');\n        if (file) return new TypeRefSchema(typeStr, undefined, undefined, this.jump(file, definition.start));\n        return undefined;\n      }) || []\n    );\n\n    const headDef = head(def);\n    if (headDef) return headDef;\n    return new TypeRefSchema('any');\n  }\n}\n"]}