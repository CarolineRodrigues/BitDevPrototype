{"version":3,"sources":["workspace-config.ts"],"names":["workspaceConfig","name","defaultScope","empty","scope","configParsed","packageManager","policy","dependencies","peerDependencies","react","variants","configMerged"],"mappings":";;;;;;;;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEO,eAAeA,eAAf,CAA+B;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,YAAR;AAAsBC,EAAAA;AAAtB,CAA/B,EAAgF;AACrF,QAAMC,KAAK,GAAGF,YAAY,IAAI,eAA9B;AACA,QAAMG,YAAY,GAAG,MAAM,iDAA3B;AACAA,EAAAA,YAAY,CAAC,6BAAD,CAAZ,CAA4CJ,IAA5C,GAAmDA,IAAnD;AACAI,EAAAA,YAAY,CAAC,6BAAD,CAAZ,CAA4CH,YAA5C,GAA2DE,KAA3D;AACAC,EAAAA,YAAY,CAAC,0CAAD,CAAZ,CAAyDC,cAAzD,GAA0E,2BAA1E;AACAD,EAAAA,YAAY,CAAC,0CAAD,CAAZ,CAAyDE,MAAzD,GAAkE;AAChEC,IAAAA,YAAY,EAAE;AACZ,0CAAoC,UADxB;AAEZ,0CAAoC,QAFxB;AAGZ,qCAA+B,OAHnB;AAIZ,8BAAwB,QAJZ;AAKZ,4BAAsB,QALV;AAMZ,gCAA0B,OANd;AAOZ,2BAAqB,QAPT;AAQZ,6BAAuB;AARX,KADkD;AAWhEC,IAAAA,gBAAgB,EAAE;AAChBC,MAAAA,KAAK,EAAE,QADS;AAEhB,mBAAa,QAFG;AAGhB,sBAAgB,QAHA;AAIhB,oBAAc,QAJE;AAKhB,6BAAuB,QALP;AAMhB,uCAAiC;AANjB;AAX8C,GAAlE;AAqBA,QAAMC,QAAQ,GAAG;AACf,kCAA8BR,KAAK,GAC/B;AACE,WAAK;AACH,sCAA8B;AAD3B;AADP,KAD+B,GAM/B,0BAAO;AACf;AACA;AACA,WAAWC,KAAM;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAbQ;AAPW,GAAjB;AAuBA,QAAMQ,YAAY,GAAG,2BAAOP,YAAP,EAAqBM,QAArB,CAArB;AAEA,SAAO,wCAAyBC,YAAzB,CAAP;AACD","sourcesContent":["import { WorkspaceContext } from '@teambit/generator';\nimport { getWorkspaceConfigTemplateParsed, stringifyWorkspaceConfig } from '@teambit/config';\nimport { parse, assign } from 'comment-json';\n\nexport async function workspaceConfig({ name, defaultScope, empty }: WorkspaceContext) {\n  const scope = defaultScope || 'company.scope';\n  const configParsed = await getWorkspaceConfigTemplateParsed();\n  configParsed['teambit.workspace/workspace'].name = name;\n  configParsed['teambit.workspace/workspace'].defaultScope = scope;\n  configParsed['teambit.dependencies/dependency-resolver'].packageManager = 'teambit.dependencies/yarn';\n  configParsed['teambit.dependencies/dependency-resolver'].policy = {\n    dependencies: {\n      '@teambit/eslint-config-bit-react': '~0.0.367',\n      '@typescript-eslint/eslint-plugin': '4.29.3',\n      'eslint-import-resolver-node': '0.3.6',\n      'eslint-plugin-import': '2.22.1',\n      'eslint-plugin-jest': '24.4.0',\n      'eslint-plugin-jsx-a11y': '6.4.1',\n      'eslint-plugin-mdx': '1.15.0',\n      'eslint-plugin-react': '7.25.1',\n    },\n    peerDependencies: {\n      react: '17.0.2',\n      'react-dom': '17.0.2',\n      'react-native': '0.66.4',\n      'babel-jest': '27.4.5',\n      'react-test-renderer': '17.0.2',\n      '@testing-library/react-native': '9.0.0',\n    },\n  };\n\n  const variants = {\n    'teambit.workspace/variants': empty\n      ? {\n          '*': {\n            'teambit.react/react-native': {},\n          },\n        }\n      : parse(`{\n      \"{ui/**}, {pages/**}\": {\n        // uses the custom env\n        \"${scope}/envs/my-react-native\": {},\n        // uncomment the line below if you remove the custom env and remove the line above\n        // \"teambit.react/react-native\": {},\n      },\n      \"{themes/**}\": {\n        \"teambit.react/react\": {},\n      },\n      \"{envs/**}, {extensions/**}\": {\n        \"teambit.harmony/aspect\": {},\n      },\n    }`),\n  };\n\n  const configMerged = assign(configParsed, variants);\n\n  return stringifyWorkspaceConfig(configMerged);\n}\n"]}