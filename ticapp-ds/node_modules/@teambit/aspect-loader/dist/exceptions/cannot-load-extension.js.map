{"version":3,"sources":["cannot-load-extension.ts"],"names":["CannotLoadExtension","BitError","constructor","extensionName","error","report","verbose","message","toJson"],"mappings":";;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEO,MAAMA,mBAAN,SAAkCC,oBAAlC,CAA2C;AAChDC,EAAAA,WAAW,CAASC,aAAT,EAAwCC,KAAxC,EAAsD;AAC/D,UAAO,6BAA4BD,aAAc,gBAAeC,KAAM,EAAtE;AAD+D,SAA7CD,aAA6C,GAA7CA,aAA6C;AAAA,SAAdC,KAAc,GAAdA,KAAc;AAEhE;;AAEDC,EAAAA,MAAM,CAACC,OAAD,EAAoB;AACxB,QAAIA,OAAJ,EAAa,OAAQ,6BAA4B,KAAKH,aAAc,KAAI,KAAKC,KAAM,GAAtE;AACb,WAAO,KAAKG,OAAZ;AACD;;AAEDC,EAAAA,MAAM,GAAG,CAAE;;AAVqC","sourcesContent":["import { BitError } from '@teambit/bit-error';\n\nexport class CannotLoadExtension extends BitError {\n  constructor(private extensionName: string, private error: Error) {\n    super(`could not load extension: ${extensionName} with error: ${error}`);\n  }\n\n  report(verbose?: boolean) {\n    if (verbose) return `could not load extension: ${this.extensionName}. ${this.error} `;\n    return this.message;\n  }\n\n  toJson() {}\n}\n"]}