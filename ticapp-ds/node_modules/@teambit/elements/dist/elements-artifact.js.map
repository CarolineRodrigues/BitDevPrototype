{"version":3,"sources":["elements-artifact.ts"],"names":["ElementsArtifact","constructor","artifacts","isEmpty","length","getFile","path","find","file","relative","getDefaultMainFilePrefix","defaultMainFilePrefix","getMainElementsBundleFile","includes","getMainElementsFileUrl","mainFile","url"],"mappings":";;;;;;;;;;;;;;;;;;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEO,MAAMA,gBAAN,CAAuB;AAC5BC,EAAAA,WAAW,CAASC,SAAT,EAAqC;AAAA,SAA5BA,SAA4B,GAA5BA,SAA4B;AAAE;;AAIlDC,EAAAA,OAAO,GAAG;AACR,WAAO,CAAC,KAAKD,SAAL,CAAeE,MAAvB;AACD;;AAEDC,EAAAA,OAAO,CAACC,IAAD,EAAe;AACpB,WAAO,KAAKJ,SAAL,CAAeK,IAAf,CAAqBC,IAAD,IAAU;AACnC,aAAO,mCAAqBA,IAAI,CAACC,QAA1B,MAAwCH,IAA/C;AACD,KAFM,CAAP;AAGD;;AAEDI,EAAAA,wBAAwB,GAAG;AACzB,WAAOV,gBAAgB,CAACW,qBAAxB;AACD;;AAEDC,EAAAA,yBAAyB,GAAG;AAC1B,WAAO,KAAKV,SAAL,CAAeK,IAAf,CAAqBC,IAAD,IAAU;AACnC,aAAO,mCAAqBA,IAAI,CAACC,QAA1B,EAAoCI,QAApC,CAA8C,GAAE,KAAKH,wBAAL,EAAgC,GAAhF,CAAP;AACD,KAFM,CAAP;AAGD;;AAEDI,EAAAA,sBAAsB,GAAuB;AAC3C,UAAMC,QAAQ,GAAG,KAAKb,SAAL,CAAeK,IAAf,CAAqBC,IAAD,IAAU;AAC7C,aAAO,mCAAqBA,IAAI,CAACC,QAA1B,EAAoCI,QAApC,CAA8C,GAAE,KAAKH,wBAAL,EAAgC,GAAhF,CAAP;AACD,KAFgB,CAAjB;AAGA,WAAOK,QAAP,aAAOA,QAAP,uBAAOA,QAAQ,CAAEC,GAAjB;AACD;;AA9B2B;;;gCAAjBhB,gB,2BAGoB,U","sourcesContent":["import { ArtifactVinyl } from '@teambit/legacy/dist/consumer/component/sources/artifact';\nimport { pathNormalizeToLinux } from '@teambit/legacy/dist/utils';\n\nexport class ElementsArtifact {\n  constructor(private artifacts: ArtifactVinyl[]) {}\n\n  static defaultMainFilePrefix = 'elements';\n\n  isEmpty() {\n    return !this.artifacts.length;\n  }\n\n  getFile(path: string) {\n    return this.artifacts.find((file) => {\n      return pathNormalizeToLinux(file.relative) === path;\n    });\n  }\n\n  getDefaultMainFilePrefix() {\n    return ElementsArtifact.defaultMainFilePrefix;\n  }\n\n  getMainElementsBundleFile() {\n    return this.artifacts.find((file) => {\n      return pathNormalizeToLinux(file.relative).includes(`${this.getDefaultMainFilePrefix()}.`);\n    });\n  }\n\n  getMainElementsFileUrl(): string | undefined {\n    const mainFile = this.artifacts.find((file) => {\n      return pathNormalizeToLinux(file.relative).includes(`${this.getDefaultMainFilePrefix()}.`);\n    });\n    return mainFile?.url;\n  }\n}\n"]}