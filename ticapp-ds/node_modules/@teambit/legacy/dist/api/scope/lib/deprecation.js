"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

require("core-js/modules/es.promise.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.deprecate = deprecate;
exports.undeprecate = undeprecate;

function _bitId() {
  const data = require("../../../bit-id");

  _bitId = function () {
    return data;
  };

  return data;
}

function _constants() {
  const data = require("../../../constants");

  _constants = function () {
    return data;
  };

  return data;
}

function _hooks() {
  const data = _interopRequireDefault(require("../../../hooks"));

  _hooks = function () {
    return data;
  };

  return data;
}

function _scope() {
  const data = require("../../../scope");

  _scope = function () {
    return data;
  };

  return data;
}

function _componentsDeprecation() {
  const data = require("../../../scope/component-ops/components-deprecation");

  _componentsDeprecation = function () {
    return data;
  };

  return data;
}

const HooksManagerInstance = _hooks().default.getInstance();

async function deprecate({
  path,
  ids
}, headers) {
  const bitIds = _bitId().BitIds.deserialize(ids);

  const args = {
    path,
    bitIds
  }; // @ts-ignore AUTO-ADDED-AFTER-MIGRATION-PLEASE-FIX!

  HooksManagerInstance.triggerHook(_constants().PRE_DEPRECATE_REMOTE, args, headers);
  const scope = await (0, _scope().loadScope)(path);
  const deprecationResult = await (0, _componentsDeprecation().deprecateMany)(scope, bitIds);
  const hookArgs = {
    deprecatedComponentsIds: deprecationResult.bitIds,
    missingComponentsIds: deprecationResult.missingComponents,
    scopePath: path,
    componentsIds: bitIds.serialize(),
    scopeName: scope.scopeJson.name
  }; // @ts-ignore AUTO-ADDED-AFTER-MIGRATION-PLEASE-FIX!

  await HooksManagerInstance.triggerHook(_constants().POST_DEPRECATE_REMOTE, hookArgs, headers);
  return deprecationResult;
}

async function undeprecate({
  path,
  ids
}, headers) {
  const bitIds = _bitId().BitIds.deserialize(ids);

  const args = {
    path,
    bitIds
  }; // @ts-ignore AUTO-ADDED-AFTER-MIGRATION-PLEASE-FIX!

  HooksManagerInstance.triggerHook(_constants().PRE_UNDEPRECATE_REMOTE, args, headers);
  const scope = await (0, _scope().loadScope)(path);
  const deprecationResult = await (0, _componentsDeprecation().undeprecateMany)(scope, bitIds);
  const hookArgs = {
    deprecatedComponentsIds: deprecationResult.bitIds,
    missingComponentsIds: deprecationResult.missingComponents,
    scopePath: path,
    componentsIds: bitIds.serialize(),
    scopeName: scope.scopeJson.name
  }; // @ts-ignore AUTO-ADDED-AFTER-MIGRATION-PLEASE-FIX!

  await HooksManagerInstance.triggerHook(_constants().POST_UNDEPRECATE_REMOTE, hookArgs, headers);
  return deprecationResult;
}