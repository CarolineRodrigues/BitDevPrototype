import { BitId } from '../../../bit-id';
import { Lane } from '../../../scope/models';
declare type DefaultScopeGetter = (id: BitId) => Promise<string | undefined>;
export declare function registerDefaultScopeGetter(func: DefaultScopeGetter): void;
declare type ExportParams = {
    ids: string[];
    remote: string | null | undefined;
    eject: boolean;
    includeDependencies: boolean;
    setCurrentScope: boolean;
    allVersions: boolean;
    originDirectly: boolean;
    includeNonStaged: boolean;
    codemod: boolean;
    force: boolean;
    resumeExportId: string | undefined;
    ignoreMissingArtifacts: boolean;
};
export default function exportAction(params: ExportParams): Promise<{
    componentsIds: BitId[];
    nonExistOnBitMap: BitId[];
    missingScope: BitId[];
    ejectResults: any;
    exportedLanes: Lane[];
}>;
export {};
