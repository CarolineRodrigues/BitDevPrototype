import { Ref } from '../objects';
export declare type UnmergedComponent = {
    id: {
        scope?: string;
        name: string;
    };
    head: Ref;
    unmergedPaths?: string[];
    resolved: boolean;
    remote?: string;
    lane: string;
};
export default class UnmergedComponents {
    filePath: string;
    unmerged: UnmergedComponent[];
    hasChanged: boolean;
    constructor(filePath: string, unmerged: UnmergedComponent[]);
    static load(scopePath: string): Promise<UnmergedComponents>;
    addEntry(unmergedComponent: UnmergedComponent): void;
    getEntry(componentName: string): UnmergedComponent | undefined;
    getResolvedComponents(): UnmergedComponent[];
    getUnresolvedComponents(): UnmergedComponent[];
    getComponents(): UnmergedComponent[];
    removeComponent(componentName: string): boolean;
    removeMultipleComponents(componentNames: string[]): boolean;
    write(): Promise<void>;
    toObject(): {
        head: string;
        id: {
            scope?: string | undefined;
            name: string;
        };
        unmergedPaths?: string[] | undefined;
        resolved: boolean;
        remote?: string | undefined;
        lane: string;
    }[];
    static buildSnapMessage(unmergedComponent: UnmergedComponent): string;
}
