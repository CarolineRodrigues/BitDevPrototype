import { Consumer } from '..';
import { BitId } from '../../bit-id';
import { Scope } from '../../scope';
import { ModelComponent, Version } from '../../scope/models';
declare type FileDiff = {
    filePath: string;
    diffOutput: string;
};
export declare type FieldsDiff = {
    fieldName: string;
    diffOutput: string;
};
export declare type DiffResults = {
    id: BitId;
    hasDiff: boolean;
    filesDiff?: FileDiff[];
    fieldsDiff?: FieldsDiff[] | null | undefined;
};
export declare type DiffOptions = {
    verbose?: boolean;
    formatDepsAsTable?: boolean;
    color?: boolean;
};
export default function componentsDiff(consumer: Consumer, ids: BitId[], version: string | null | undefined, toVersion: string | null | undefined, diffOpts: DiffOptions): Promise<DiffResults[]>;
export declare function diffBetweenVersionsObjects(modelComponent: ModelComponent, fromVersionObject: Version, toVersionObject: Version, fromVersion: string, toVersion: string, scope: Scope, diffOpts: DiffOptions): Promise<DiffResults>;
export declare function outputDiffResults(diffResults: DiffResults[]): string;
export {};
