import Consumer from '../../../../consumer/consumer';
import Component from '../../../component/consumer-component';
import { DebugComponentsDependency } from './dependencies-resolver';
/**
 * The dependency version is determined by the following strategies by this order.
 * 1) if the component bit.json or package.json has "overrides" property, check whether the dependency version is overridden
 * 2) if workspace-config overrides this component, use it. (technically this is done via #1 because we merge the two before)
 * 3) if package.json is different than the model, use package.json. to find the package.json follow this steps:
 * 3 a) search in the component directory for package.json and look for dependencies or devDependencies with the name of the dependency
 * 3 b) if not found there, propagate until you reach the consumer root directory.
 * 3 c) if not found, go directly to the dependency directory and find the version in its package.json
 * 4) if bitmap has a version, use it.
 * 5) use the model if it has a version.
 * 6) use the package.json regardless the model.
 *
 * cases where dependency version may be different than the model:
 * 1) user added the component to `overrides` of the workspace config. (workspace bit.json or package.json)
 * 2) user changed package.json, either, manually or by npm-install —save.
 * 3) user updated a dependency with npm without —save.
 * 4) user imported the dependency with different version causing the bitmap to change.
 *
 * keep in mind that since v14.0.5 bit.json doesn't have the dependencies, so it's impossible
 * to change a dependency version from the component bit.json.
 */
export default function updateDependenciesVersions(consumer: Consumer, component: Component, debugDependencies?: DebugComponentsDependency[]): void;
