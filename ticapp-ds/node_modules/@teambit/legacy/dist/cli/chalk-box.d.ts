import { ImportDetails } from '../consumer/component-ops/import-components';
import Component from '../consumer/component/consumer-component';
import SpecsResults, { SpecsResultsWithComponentId, SpecsResultsWithMetaData } from '../consumer/specs-results/specs-results';
import { ComponentLog } from '../scope/models/model-component';
export declare const formatNewBit: ({ name }: any) => string;
export declare const formatBit: ({ scope, name, version }: any) => string;
export declare const formatPlainComponentItem: ({ scope, name, version, deprecated }: any) => string;
export declare const formatPlainComponentItemWithVersions: (component: Component, importDetails: ImportDetails) => string;
export declare const formatBitString: (bit: string) => string;
export declare const paintBitProp: (key: string, value: string) => string;
export declare const paintHeader: (value: string) => string;
export declare const paintLog: (log: ComponentLog) => string;
export declare const paintSpecsResults: (results?: SpecsResults[] | undefined, verbose?: boolean) => string[];
export declare const paintAllSpecsResults: (results: SpecsResultsWithMetaData, verbose?: boolean) => string;
export declare const paintSummarySpecsResults: (results: SpecsResultsWithComponentId) => string;
export declare const paintBuildResults: (buildResults: []) => string;
export declare const paintCiResults: ({ dists, specsResults }: {
    dists: any;
    specsResults: any;
}) => string;
