"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

require("core-js/modules/es.array.iterator.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

function _defineProperty2() {
  const data = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

  _defineProperty2 = function () {
    return data;
  };

  return data;
}

function _consumer() {
  const data = require("../../../api/consumer");

  _consumer = function () {
    return data;
  };

  return data;
}

class Isolate {
  constructor() {
    (0, _defineProperty2().default)(this, "name", 'isolate <id> [scopePath]');
    (0, _defineProperty2().default)(this, "description", 'isolate component');
    (0, _defineProperty2().default)(this, "alias", '');
    (0, _defineProperty2().default)(this, "opts", [['d', 'directory [directory] ', 'path to store isolated component'], ['w', 'write-bit-dependencies ', 'write bit components dependencies to package.json file'], ['l', 'npm-links', 'point dependencies link files to npm package'], ['s', 'skip-npm-install', 'do not install npm package dependencies'], ['', 'install-peer-dependencies', 'install peer npm package dependencies'], ['', 'dist', 'write dist files (when exist) to the configured directory'], ['', 'conf', 'write the configuration file (bit.json)'], ['', 'no-package-json', 'do not generate package.json for the isolated component'], ['o', 'override', 'override existing isolated component'], ['', 'save-dependencies-as-components', 'import the dependencies as bit components instead of as npm packages'], ['', 'exclude-registry-prefix', "exclude the registry prefix from the component's name in the package.json"], ['v', 'verbose', 'print more logs'], ['', 'silent-client-result', 'print environment install result'], ['', 'use-capsule', 'use capsule with fs-container']]);
    (0, _defineProperty2().default)(this, "loader", true);
    (0, _defineProperty2().default)(this, "remoteOp", true);
    (0, _defineProperty2().default)(this, "private", true);
  }

  action([id, scopePath], opts) {
    const concreteOpts = {
      writeToPath: opts.directory,
      override: opts.override === true,
      writePackageJson: !opts.noPackageJson,
      writeConfig: opts.conf === true,
      writeBitDependencies: opts.writeBitDependencies === true,
      createNpmLinkFiles: opts.npmLinks === true,
      saveDependenciesAsComponents: opts.saveDependenciesAsComponents !== false,
      writeDists: opts.dist === true,
      installNpmPackages: !opts.skipNpmInstall,
      installPeerDependencies: !opts.skipNpmInstall,
      verbose: opts.verbose === true,
      excludeRegistryPrefix: !!opts.excludeRegistryPrefix,
      silentPackageManagerResult: false,
      useCapsule: opts.useCapsule === true
    };
    return (0, _consumer().isolate)(id, scopePath || process.cwd(), concreteOpts);
  }

  report(directory, _params, options) {
    if (options.directory) {
      return `capsule created at: ${options.directory}`;
    }

    return directory;
  }

}

exports.default = Isolate;