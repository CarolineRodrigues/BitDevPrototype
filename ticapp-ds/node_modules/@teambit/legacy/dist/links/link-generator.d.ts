import BitMap from '../consumer/bit-map';
import Component from '../consumer/component/consumer-component';
import DataToPersist from '../consumer/component/sources/data-to-persist';
import Consumer from '../consumer/consumer';
import { ComponentWithDependencies } from '../scope';
import LinkFile from './link-file';
declare function getIndexFileName(mainFile: string): string;
/**
 * a component may have many dependencies, this function returns the links content for all of its dependencies
 */
declare function getComponentLinks({ consumer, component, dependencies, createNpmLinkFiles, bitMap, }: {
    consumer?: Consumer | null | undefined;
    component: Component;
    dependencies: Component[];
    createNpmLinkFiles: boolean;
    bitMap: BitMap;
}): DataToPersist;
/**
 * Relevant for legacy components only (before Harmony).
 *
 * The following scenario will help understanding why links are needed.
 * Component A has a dependency B. (for instance, in a.js there is a require statement to 'b.js').
 * While importing component A, it knows about the B dependency and it saves it under 'dependencies' directory of A.
 * The problem is that the above require is broken, because 'b.js' is not in the same place where it was originally.
 * This function solves this issue by creating the 'b.js' file in the original location and points to the new location
 * under 'dependencies' of A.
 *
 * It does the link generation in two steps.
 * step 1: "componentsLinks", it generates links to all imported components.
 * target: imported components. source: dependencies.
 * step 2: "dependenciesLinks", it generates links to all dependencies of the imported components.
 * target: dependencies. source: other dependencies.
 * this step is not needed when the imported components don't have dependencies, or when the
 * dependencies were installed as npm/yarn packages.
 */
declare function getComponentsDependenciesLinks(componentDependencies: ComponentWithDependencies[], consumer: Consumer | null | undefined, createNpmLinkFiles: boolean, bitMap: BitMap): DataToPersist;
/**
 * Not relevant for Harmony.
 * Relevant for IMPORTED and NESTED only
 */
declare function getEntryPointsForComponent(component: Component, consumer: Consumer | null | undefined, bitMap: BitMap): LinkFile[];
declare function getEntryPointForAngularComponent(component: Component, consumer: Consumer | null | undefined, bitMap: BitMap): LinkFile | null | undefined;
export { getComponentLinks, // irrelevant for Harmony
getEntryPointsForComponent, // irrelevant for Harmony
getComponentsDependenciesLinks, // irrelevant if all components use Harmony
getIndexFileName, // irrelevant for Harmony
getEntryPointForAngularComponent, };
