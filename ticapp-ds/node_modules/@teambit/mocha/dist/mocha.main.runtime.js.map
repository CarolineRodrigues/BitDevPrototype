{"version":3,"sources":["mocha.main.runtime.ts"],"names":["MochaMain","constructor","logger","createTester","mochaConfig","babelConfig","mochaModule","require","MochaTester","MochaAspect","id","provider","loggerMain","createLogger","LoggerAspect","MainRuntime","addRuntime"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAGA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEO,MAAMA,SAAN,CAAgB;AACrBC,EAAAA,WAAW,CAASC,MAAT,EAAyB;AAAA,SAAhBA,MAAgB,GAAhBA,MAAgB;AAAE;;AAEtCC,EAAAA,YAAY,CACVC,WAA+B,GAAG,EADxB,EAEVC,WAA6B,GAAG,EAFtB,EAGV;AACAC,EAAAA,WAAW,GAAGC,OAAO,CAAC,OAAD,CAJX,EAKV;AACA,WAAO,KAAIC,qBAAJ,EAAgBC,qBAAYC,EAA5B,EAAgC,KAAKR,MAArC,EAA6CE,WAA7C,EAA0DC,WAA1D,EAAuEC,WAAvE,CAAP;AACD;;AAKoB,eAARK,QAAQ,CAAC,CAACC,UAAD,CAAD,EAA6B;AAChD,UAAMV,MAAM,GAAGU,UAAU,CAACC,YAAX,CAAwBJ,qBAAYC,EAApC,CAAf;AACA,WAAO,IAAIV,SAAJ,CAAcE,MAAd,CAAP;AACD;;AAlBoB;;;gCAAVF,S,WAYI,E;gCAZJA,S,kBAaW,CAACc,sBAAD,C;gCAbXd,S,aAcMe,kB;;AAOnBN,qBAAYO,UAAZ,CAAuBhB,SAAvB","sourcesContent":["import { MainRuntime } from '@teambit/cli';\nimport type { TransformOptions } from '@babel/core';\nimport type Mocha from 'mocha';\nimport { Logger, LoggerAspect, LoggerMain } from '@teambit/logger';\nimport { MochaAspect } from './mocha.aspect';\nimport { MochaTester } from './mocha.tester';\n\nexport class MochaMain {\n  constructor(private logger: Logger) {}\n\n  createTester(\n    mochaConfig: Mocha.MochaOptions = {},\n    babelConfig: TransformOptions = {},\n    // eslint-disable-next-line global-require\n    mochaModule = require('mocha')\n  ) {\n    return new MochaTester(MochaAspect.id, this.logger, mochaConfig, babelConfig, mochaModule);\n  }\n\n  static slots = [];\n  static dependencies = [LoggerAspect];\n  static runtime = MainRuntime;\n  static async provider([loggerMain]: [LoggerMain]) {\n    const logger = loggerMain.createLogger(MochaAspect.id);\n    return new MochaMain(logger);\n  }\n}\n\nMochaAspect.addRuntime(MochaMain);\n"]}