{"version":3,"sources":["pkg.service.tsx"],"names":["PkgService","render","env","descriptor","getDescriptor","id","config","language","ignoreIllegals","getPackageJsonProps","undefined","props","name","JSON","stringify","displayName"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAQO,MAAMA,UAAN,CAA0D;AAAA;AAAA,kDACxD,KADwD;AAAA;;AAGnD,QAANC,MAAM,CAACC,GAAD,EAAqB;AAC/B,UAAMC,UAAU,GAAG,KAAKC,aAAL,CAAmBF,GAAnB,CAAnB;AAEA,wBACE,+BAAC,WAAD;AAAM,MAAA,GAAG,EAAEC,UAAF,aAAEA,UAAF,uBAAEA,UAAU,CAAEE;AAAvB,oBACE,+BAAC,WAAD;AAAM,MAAA,KAAK,EAAC;AAAZ,8CADF,eAEE,+BAAC,cAAD,OAFF,eAGE,+BAAC,WAAD,QACG,CAAAF,UAAU,SAAV,IAAAA,UAAU,WAAV,YAAAA,UAAU,CAAEG,MAAZ,KAAsB,6BAAUH,UAAV,aAAUA,UAAV,uBAAUA,UAAU,CAAEG,MAAtB,EAA8B;AAAEC,MAAAA,QAAQ,EAAE,YAAZ;AAA0BC,MAAAA,cAAc,EAAE;AAA1C,KAA9B,CADzB,CAHF,eAME,+BAAC,cAAD,OANF,CADF;AAUD;;AAEDJ,EAAAA,aAAa,CAACF,GAAD,EAAgD;AAC3D,QAAI,CAACA,GAAG,CAACA,GAAJ,CAAQO,mBAAb,EAAkC,OAAOC,SAAP;AAClC,UAAMC,KAAK,GAAGT,GAAG,CAACA,GAAJ,CAAQO,mBAAR,EAAd;AACA,WAAO;AACLJ,MAAAA,EAAE,EAAE,KAAKO,IADJ;AAELN,MAAAA,MAAM,EAAEK,KAAK,GAAGE,IAAI,CAACC,SAAL,CAAeH,KAAf,EAAsB,IAAtB,EAA4B,CAA5B,CAAH,GAAoCD,SAF5C;AAGLK,MAAAA,WAAW,EAAE,KAAKH;AAHb,KAAP;AAKD;;AA1B8D","sourcesContent":["import React from 'react';\nimport { Text, Newline } from 'ink';\nimport { EnvService, EnvDefinition } from '@teambit/envs';\nimport highlight from 'cli-highlight';\n\nexport type PkgDescriptor = {\n  id: string;\n  displayName: string;\n  config?: string;\n};\n\nexport class PkgService implements EnvService<{}, PkgDescriptor> {\n  name = 'Pkg';\n\n  async render(env: EnvDefinition) {\n    const descriptor = this.getDescriptor(env);\n\n    return (\n      <Text key={descriptor?.id}>\n        <Text color=\"cyan\">configured package.json properties: </Text>\n        <Newline />\n        <Text>\n          {descriptor?.config && highlight(descriptor?.config, { language: 'javascript', ignoreIllegals: true })}\n        </Text>\n        <Newline />\n      </Text>\n    );\n  }\n\n  getDescriptor(env: EnvDefinition): PkgDescriptor | undefined {\n    if (!env.env.getPackageJsonProps) return undefined;\n    const props = env.env.getPackageJsonProps();\n    return {\n      id: this.name,\n      config: props ? JSON.stringify(props, null, 2) : undefined,\n      displayName: this.name,\n    };\n  }\n}\n"]}