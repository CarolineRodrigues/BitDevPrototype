{"version":3,"sources":["pkg.graphql.ts"],"names":["pkgSchema","pkg","typeDefs","resolvers","Component","packageName","component","getPackageName","packageManifest","getManifest","PackageManifest","versions","parent","version","filter","v"],"mappings":";;;;;;;;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAIO,SAASA,SAAT,CAAmBC,GAAnB,EAAyC;AAC9C,SAAO;AACLC,IAAAA,QAAQ,EAAE,0BAAI;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KA/BS;AAgCLC,IAAAA,SAAS,EAAE;AACTC,MAAAA,SAAS,EAAE;AACTC,QAAAA,WAAW,EAAGC,SAAD,IAA0B;AACrC,iBAAOL,GAAG,CAACM,cAAJ,CAAmBD,SAAnB,CAAP;AACD,SAHQ;AAITE,QAAAA,eAAe,EAAGF,SAAD,IAA0B;AACzC,iBAAOL,GAAG,CAACQ,WAAJ,CAAgBH,SAAhB,CAAP;AACD;AANQ,OADF;AASTI,MAAAA,eAAe,EAAE;AACfC,QAAAA,QAAQ,EAAE,CAACC,MAAD,EAAS;AAAEC,UAAAA;AAAF,SAAT,KAAyB;AACjC,cAAIA,OAAJ,EAAa;AACX,mBAAOD,MAAM,CAACD,QAAP,CAAgBG,MAAhB,CAAwBC,CAAD,IAAOA,CAAC,CAACF,OAAF,KAAcA,OAA5C,CAAP;AACD;;AACD,iBAAOD,MAAM,CAACD,QAAd;AACD;AANc;AATR;AAhCN,GAAP;AAmDD","sourcesContent":["import { Component } from '@teambit/component';\nimport { Schema } from '@teambit/graphql';\nimport gql from 'graphql-tag';\n\nimport { PkgMain } from './pkg.main.runtime';\n\nexport function pkgSchema(pkg: PkgMain): Schema {\n  return {\n    typeDefs: gql`\n      extend type Component {\n        packageManifest: PackageManifest\n\n        # package name of the component.\n        packageName: String!\n      }\n\n      type TarDist {\n        tarball: String\n        shasum: String\n      }\n\n      type VersionsPackageManifest {\n        name: String\n        version: String\n        main: String\n        dependencies: JSONObject\n        devDependencies: JSONObject\n        peerDependencies: JSONObject\n        scripts: JSONObject\n        dist: TarDist\n      }\n\n      type PackageManifest {\n        name: String\n        distTags: JSONObject\n        externalRegistry: Boolean\n        versions(version: String): [VersionsPackageManifest]\n      }\n    `,\n    resolvers: {\n      Component: {\n        packageName: (component: Component) => {\n          return pkg.getPackageName(component);\n        },\n        packageManifest: (component: Component) => {\n          return pkg.getManifest(component);\n        },\n      },\n      PackageManifest: {\n        versions: (parent, { version }) => {\n          if (version) {\n            return parent.versions.filter((v) => v.version === version);\n          }\n          return parent.versions;\n        },\n      },\n    },\n  };\n}\n"]}