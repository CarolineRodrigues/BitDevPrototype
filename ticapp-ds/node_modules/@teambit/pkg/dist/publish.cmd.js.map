{"version":3,"sources":["publish.cmd.tsx"],"names":["PublishCmd","constructor","publisher","report","args","options","result","json","publishResults","data","length","publishOrDryRun","dryRun","title","chalk","white","bold","output","map","publishResult","compName","component","id","toString","getData","errors","red","join","green","metadata","publishedPackage","componentId","compId","packResult","publish","code"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAMO,MAAMA,UAAN,CAAoC;AAazCC,EAAAA,WAAW,CAASC,SAAT,EAA+B;AAAA,SAAtBA,SAAsB,GAAtBA,SAAsB;AAAA,kDAZnC,uBAYmC;AAAA,yDAX5B,yCAW4B;AAAA,qDAVhC,CACR,CAAC,GAAD,EAAM,SAAN,EAAiB,uBAAjB,CADQ,EAER,CAAC,EAAD,EAAK,cAAL,EAAqB,uEAArB,CAFQ,EAGR,CAAC,GAAD,EAAM,MAAN,EAAc,2BAAd,CAHQ,CAUgC;AAAA,8DALvB,EAKuB;AAAA,mDAJlC,EAIkC;AAAA,qDAHhC,IAGgC;AAAA,mDAFlC,aAEkC;AAAE;;AAEhC,QAANC,MAAM,CAACC,IAAD,EAAoBC,OAApB,EAA+C;AACzD,UAAMC,MAAM,GAAG,MAAM,KAAKC,IAAL,CAAUH,IAAV,EAAgBC,OAAhB,CAArB;AACA,UAAMG,cAAiC,GAAGF,MAAM,CAACG,IAAjD;AACA,QAAI,CAACD,cAAc,CAACE,MAApB,EAA4B,OAAO,gDAAP;AAE5B,UAAMC,eAAe,GAAGN,OAAO,CAACO,MAAR,GAAiB,SAAjB,GAA6B,WAArD;;AACA,UAAMC,KAAK,GAAGC,iBAAMC,KAAN,CAAYC,IAAZ,CAAkB,gBAAeL,eAAgB,6BAAjD,CAAd;;AACA,UAAMM,MAAM,GAAGT,cAAc,CAC1BU,GADY,CACPC,aAAD,IAAmB;AACtB,YAAMC,QAAQ,GAAGD,aAAa,CAACE,SAAd,CAAwBC,EAAxB,CAA2BC,QAA3B,EAAjB;;AACA,YAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,qCAAIL,aAAa,CAACM,MAAlB,kDAAI,sBAAsBf,MAA1B,EAAkC;AAChC,iBAAOI,iBAAMY,GAAN,CAAUP,aAAa,CAACM,MAAd,CAAqBE,IAArB,CAA0B,IAA1B,CAAV,CAAP;AACD;;AACD,eAAOb,iBAAMc,KAAN,CAAY,0BAACT,aAAa,CAACU,QAAf,0DAAC,sBAAwBC,gBAAzB,KAAwD,EAApE,CAAP;AACD,OALD;;AAMA,aAAQ,GAAEhB,iBAAME,IAAN,CAAWI,QAAX,CAAqB,KAAII,OAAO,EAAG,IAA7C;AACD,KAVY,EAWZG,IAXY,CAWP,IAXO,CAAf;AAYA,WAAOd,KAAK,GAAGI,MAAf;AACD;;AAES,QAAJV,IAAI,CACR,CAACwB,WAAD,CADQ,EAER1B,OAFQ,EAG4C;AACpD,UAAM2B,MAAM,GAAG,OAAOD,WAAP,KAAuB,QAAvB,GAAkCA,WAAlC,GAAgDA,WAAW,CAAC,CAAD,CAA1E;AACA,UAAME,UAAU,GAAG,MAAM,KAAK/B,SAAL,CAAegC,OAAf,CAAuB,CAACF,MAAD,CAAvB,EAAiC3B,OAAjC,CAAzB;AACA,WAAO;AACLI,MAAAA,IAAI,EAAEwB,UADD;AAELE,MAAAA,IAAI,EAAE;AAFD,KAAP;AAID;;AA/CwC","sourcesContent":["import { ComponentResult } from '@teambit/builder';\nimport { Command, CommandOptions } from '@teambit/cli';\nimport chalk from 'chalk';\n\nimport { Publisher, PublisherOptions } from './publisher';\n\ntype PublishArgs = [string];\n\nexport class PublishCmd implements Command {\n  name = 'publish <componentId>';\n  description = 'publish components to npm (npm publish)';\n  options = [\n    ['d', 'dry-run', 'npm publish --dry-run'],\n    ['', 'allow-staged', 'allow publish components that were not exported yet (not recommended)'],\n    ['j', 'json', 'return the output as JSON'],\n  ] as CommandOptions;\n  shortDescription = '';\n  alias = '';\n  private = true;\n  group = 'collaborate';\n\n  constructor(private publisher: Publisher) {}\n\n  async report(args: PublishArgs, options: PublisherOptions) {\n    const result = await this.json(args, options);\n    const publishResults: ComponentResult[] = result.data;\n    if (!publishResults.length) return 'no components were found candidate for publish';\n\n    const publishOrDryRun = options.dryRun ? 'dry-run' : 'published';\n    const title = chalk.white.bold(`successfully ${publishOrDryRun} the following components\\n`);\n    const output = publishResults\n      .map((publishResult) => {\n        const compName = publishResult.component.id.toString();\n        const getData = () => {\n          if (publishResult.errors?.length) {\n            return chalk.red(publishResult.errors.join('\\n'));\n          }\n          return chalk.green((publishResult.metadata?.publishedPackage as string) || '');\n        };\n        return `${chalk.bold(compName)}\\n${getData()}\\n`;\n      })\n      .join('\\n');\n    return title + output;\n  }\n\n  async json(\n    [componentId]: PublishArgs,\n    options: PublisherOptions\n  ): Promise<{ data: ComponentResult[]; code: number }> {\n    const compId = typeof componentId === 'string' ? componentId : componentId[0];\n    const packResult = await this.publisher.publish([compId], options);\n    return {\n      data: packResult,\n      code: 0,\n    };\n  }\n}\n"]}