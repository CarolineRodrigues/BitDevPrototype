{"version":3,"sources":["publish-dry-run.task.ts"],"names":["PublishDryRunTask","constructor","aspectId","publisher","packer","logger","execute","context","options","dryRun","capsules","capsuleNetwork","seedersCapsules","capsulesToPublish","forEach","c","shouldPublish","component","config","extensions","push","info","length","publishResults","publishMultipleCapsules","packResults","packMultipleCapsules","override","componentsResults","concat","artifacts"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAMA;AACA;AACA;AACO,MAAMA,iBAAN,CAA6C;AAIlDC,EAAAA,WAAW,CACAC,QADA,EAEDC,SAFC,EAGDC,MAHC,EAIDC,MAJC,EAKT;AAAA,SAJSH,QAIT,GAJSA,QAIT;AAAA,SAHQC,SAGR,GAHQA,SAGR;AAAA,SAFQC,MAER,GAFQA,MAER;AAAA,SADQC,MACR,GADQA,MACR;AAAA,kDARc,eAQd;AAAA,sDAPkB,KAOlB;AAAA;AAAE;;AAES,QAAPC,OAAO,CAACC,OAAD,EAAkD;AAC7D,SAAKJ,SAAL,CAAeK,OAAf,CAAuBC,MAAvB,GAAgC,IAAhC;AACA,UAAMC,QAAQ,GAAGH,OAAO,CAACI,cAAR,CAAuBC,eAAxC,CAF6D,CAG7D;;AACA,UAAMC,iBAA4B,GAAG,EAArC;AACAH,IAAAA,QAAQ,CAACI,OAAT,CAAkBC,CAAD,IAAO;AACtB,YAAMC,aAAa,GAAG,KAAKb,SAAL,CAAea,aAAf,CAA6BD,CAAC,CAACE,SAAF,CAAYC,MAAZ,CAAmBC,UAAhD,CAAtB;;AACA,UAAIH,aAAJ,EAAmB;AACjBH,QAAAA,iBAAiB,CAACO,IAAlB,CAAuBL,CAAvB;AACD;AACF,KALD;AAMA,SAAKV,MAAL,CAAYgB,IAAZ,CAAkB,mCAAkCR,iBAAiB,CAACS,MAAO,WAAUZ,QAAQ,CAACY,MAAO,EAAvG;AAEA,UAAMC,cAAc,GAAG,MAAM,KAAKpB,SAAL,CAAeqB,uBAAf,CAAuCX,iBAAvC,CAA7B;AAEA,SAAKR,MAAL,CAAYgB,IAAZ,CAAkB,gCAA+BX,QAAQ,CAACY,MAAO,WAAjE;AACA,UAAMG,WAAW,GAAG,MAAM,KAAKrB,MAAL,CAAYsB,oBAAZ,CAAiChB,QAAjC,EAA2C;AAAEiB,MAAAA,QAAQ,EAAE;AAAZ,KAA3C,EAA+D,IAA/D,EAAqE,IAArE,CAA1B;AAEA,WAAO;AACLC,MAAAA,iBAAiB,EAAEL,cAAc,CAACM,MAAf,CAAsBJ,WAAtB,CADd;AAELK,MAAAA,SAAS,EAAE;AAFN,KAAP;AAID;;AAjCiD","sourcesContent":["import { BuildContext, BuiltTaskResult, BuildTask } from '@teambit/builder';\nimport { Logger } from '@teambit/logger';\nimport { Capsule } from '@teambit/isolator';\nimport { Publisher } from './publisher';\nimport { Packer } from './packer';\n\n/**\n * publish build task is running \"publish --dry-run\" to avoid later npm errors during export\n */\nexport class PublishDryRunTask implements BuildTask {\n  readonly name = 'PublishDryRun';\n  readonly location = 'end';\n  dependencies: string[];\n  constructor(\n    readonly aspectId: string,\n    private publisher: Publisher,\n    private packer: Packer,\n    private logger: Logger\n  ) {}\n\n  async execute(context: BuildContext): Promise<BuiltTaskResult> {\n    this.publisher.options.dryRun = true;\n    const capsules = context.capsuleNetwork.seedersCapsules;\n    // const capsulesToPublish = capsules.filter((c) => this.publisher.shouldPublish(c.component.config.extensions));\n    const capsulesToPublish: Capsule[] = [];\n    capsules.forEach((c) => {\n      const shouldPublish = this.publisher.shouldPublish(c.component.config.extensions);\n      if (shouldPublish) {\n        capsulesToPublish.push(c);\n      }\n    });\n    this.logger.info(`going to run publish dry-run on ${capsulesToPublish.length} out of ${capsules.length}`);\n\n    const publishResults = await this.publisher.publishMultipleCapsules(capsulesToPublish);\n\n    this.logger.info(`going to run pack dry-run on ${capsules.length} capsules`);\n    const packResults = await this.packer.packMultipleCapsules(capsules, { override: true }, true, true);\n\n    return {\n      componentsResults: publishResults.concat(packResults),\n      artifacts: [],\n    };\n  }\n}\n"]}