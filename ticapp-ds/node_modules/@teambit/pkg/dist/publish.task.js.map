{"version":3,"sources":["publish.task.ts"],"names":["PublishTask","constructor","aspectId","publisher","logger","execute","context","options","dryRun","capsules","capsuleNetwork","seedersCapsules","capsulesToPublish","forEach","c","shouldPublish","component","config","extensions","push","info","length","publishResults","publishMultipleCapsules","componentsResults","artifacts"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAKA;AACA;AACA;AACO,MAAMA,WAAN,CAAuC;AAG5CC,EAAAA,WAAW,CAAUC,QAAV,EAAoCC,SAApC,EAAkEC,MAAlE,EAAkF;AAAA,SAAxEF,QAAwE,GAAxEA,QAAwE;AAAA,SAA9CC,SAA8C,GAA9CA,SAA8C;AAAA,SAAhBC,MAAgB,GAAhBA,MAAgB;AAAA,kDAF7E,mBAE6E;AAAA,sDAD3D,KAC2D;AAAE;;AAElF,QAAPC,OAAO,CAACC,OAAD,EAAkD;AAC7D,SAAKH,SAAL,CAAeI,OAAf,CAAuBC,MAAvB,GAAgC,KAAhC;AACA,UAAMC,QAAQ,GAAGH,OAAO,CAACI,cAAR,CAAuBC,eAAxC,CAF6D,CAG7D;;AACA,UAAMC,iBAA4B,GAAG,EAArC;AACAH,IAAAA,QAAQ,CAACI,OAAT,CAAkBC,CAAD,IAAO;AACtB,YAAMC,aAAa,GAAG,KAAKZ,SAAL,CAAeY,aAAf,CAA6BD,CAAC,CAACE,SAAF,CAAYC,MAAZ,CAAmBC,UAAhD,CAAtB;;AACA,UAAIH,aAAJ,EAAmB;AACjBH,QAAAA,iBAAiB,CAACO,IAAlB,CAAuBL,CAAvB;AACD;AACF,KALD;AAMA,SAAKV,MAAL,CAAYgB,IAAZ,CAAkB,2BAA0BR,iBAAiB,CAACS,MAAO,WAAUZ,QAAQ,CAACY,MAAO,EAA/F;AACA,UAAMC,cAAc,GAAG,MAAM,KAAKnB,SAAL,CAAeoB,uBAAf,CAAuCX,iBAAvC,CAA7B;AAEA,WAAO;AACLY,MAAAA,iBAAiB,EAAEF,cADd;AAELG,MAAAA,SAAS,EAAE;AAFN,KAAP;AAID;;AAvB2C","sourcesContent":["import { BuildContext, BuiltTaskResult, BuildTask, TaskLocation } from '@teambit/builder';\nimport { Logger } from '@teambit/logger';\nimport { Capsule } from '@teambit/isolator';\nimport { Publisher } from './publisher';\n\n/**\n * publish components by running \"npm publish\"\n */\nexport class PublishTask implements BuildTask {\n  readonly name = 'PublishComponents';\n  readonly location: TaskLocation = 'end';\n  constructor(readonly aspectId: string, private publisher: Publisher, private logger: Logger) {}\n\n  async execute(context: BuildContext): Promise<BuiltTaskResult> {\n    this.publisher.options.dryRun = false;\n    const capsules = context.capsuleNetwork.seedersCapsules;\n    // const capsulesToPublish = capsules.filter((c) => this.publisher.shouldPublish(c.component.config.extensions));\n    const capsulesToPublish: Capsule[] = [];\n    capsules.forEach((c) => {\n      const shouldPublish = this.publisher.shouldPublish(c.component.config.extensions);\n      if (shouldPublish) {\n        capsulesToPublish.push(c);\n      }\n    });\n    this.logger.info(`going to run publish on ${capsulesToPublish.length} out of ${capsules.length}`);\n    const publishResults = await this.publisher.publishMultipleCapsules(capsulesToPublish);\n\n    return {\n      componentsResults: publishResults,\n      artifacts: [],\n    };\n  }\n}\n"]}