{"version":3,"sources":["change-log-page.tsx"],"names":["ChangeLogPage","className","component","ComponentContext","lanesContext","currentLane","logs","length","styles","lane","laneName","id","separator","changeLogPage","title","separatorNoChangeLog","changeLogCard","logContainer","map","snap","index","isLatest","latest","tag","hash","isCurrent","version","fullName"],"mappingsaAAT,CAAuB;AAAEC,EAAAA;AAAF,CAAvB,EAA0D;AAC/D,QAAMC,SAAS,GAAG,yBAAWC,6BAAX,CAAlB;AACA,QAAMC,YAAY,GAAG,iCAArB;AACA,QAAMC,WAAW,GAAGD,YAAH,aAAGA,YAAH,uBAAGA,YAAY,CAAEC,WAAlC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAWJ,SAAjB;AAEA,MAAI,CAACI,IAAL,EAAW,OAAO,IAAP;;AAEX,MAAIA,IAAI,CAACC,MAAL,KAAgB,CAApB,EAAuB;AACrB,wBACE,gEACGF,WAAW,iBACV,6EACE;AAAK,MAAA,SAAS,EAAEG,+BAAOC;AAAvB,oBACE,+BAAC,0BAAD;AAAM,MAAA,EAAE,EAAC;AAAT,MADF,eAEE,+BAAC,0BAAD;AAAU,MAAA,SAAS,EAAED,+BAAOE;AAA5B,OAAuCL,WAAW,CAACM,EAAnD,CAFF,CADF,eAKE,+BAAC,qBAAD;AAAW,MAAA,gBAAgB,MAA3B;AAA4B,MAAA,SAAS,EAAEH,+BAAOI;AAA9C,MALF,CAFJ,eAUE;AAAK,MAAA,SAAS,EAAE,2BAAWJ,+BAAOK,aAAlB,EAAiCZ,SAAjC;AAAhB,oBACE,+BAAC,kBAAD;AAAI,MAAA,SAAS,EAAEO,+BAAOM;AAAtB,iBADF,eAEE,+BAAC,qBAAD;AAAW,MAAA,gBAAgB,MAA3B;AAA4B,MAAA,SAAS,EAAEN,+BAAOO;AAA9C,MAFF,eAGE,+BAAC,sBAAD;AACE,MAAA,KAAK,EAAC,MADR;AAEE,MAAA,KAAK,EAAC,qGAFR;AAIE,MAAA,SAAS,EAAEP,+BAAOQ;AAJpB,oBAME,+BAAC,kBAAD,qBACE,+BAAC,4CAAD,OADF,CANF,CAHF,CAVF,CADF;AA2BD;;AAED,sBACE,6EACE,+BAAC,yBAAD;AAAgB,IAAA,IAAI,EAAEX;AAAtB,IADF,eAEE,+BAAC,qBAAD;AAAW,IAAA,gBAAgB;AAA3B,IAFF,eAGE;AAAK,IAAA,SAAS,EAAE,2BAAWG,+BAAOK,aAAlB,EAAiCZ,SAAjC;AAAhB,kBACE,+BAAC,kBAAD;AAAI,IAAA,SAAS,EAAEO,+BAAOM;AAAtB,eADF,eAEE,+BAAC,qBAAD;AAAW,IAAA,gBAAgB,MAA3B;AAA4B,IAAA,SAAS,EAAEN,+BAAOI;AAA9C,IAFF,eAGE;AAAK,IAAA,SAAS,EAAEJ,+BAAOS;AAAvB,KACGX,IAAI,CAACY,GAAL,CAAS,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACzB,UAAMC,QAAQ,GAAGnB,SAAS,CAACoB,MAAV,KAAqBH,IAAI,CAACI,GAA1B,IAAiCrB,SAAS,CAACoB,MAAV,KAAqBH,IAAI,CAACK,IAA5E;AACA,UAAMC,SAAS,GAAGvB,SAAS,CAACwB,OAAV,KAAsBP,IAAI,CAACI,GAA3B,IAAkCrB,SAAS,CAACwB,OAAV,KAAsBP,IAAI,CAACK,IAA/E;AACA,wBACE,+BAAC,2BAAD;AACE,MAAA,GAAG,EAAEJ,KADP;AAEE,MAAA,WAAW,EAAElB,SAAS,CAACS,EAAV,CAAagB,QAF5B;AAGE,MAAA,QAAQ,EAAEN,QAHZ;AAIE,MAAA,IAAI,EAAEF,IAJR;AAKE,MAAA,SAAS,EAAEM;AALb,MADF;AASD,GAZA,CADH,CAHF,CAHF,CADF;AAyBD","sourcesContent":["import { ComponentContext } from '@teambit/component';\nimport { H1 } from '@teambit/documenter.ui.heading';\nimport { Separator } from '@teambit/design.ui.separator';\nimport { VersionBlock } from '@teambit/component.ui.version-block';\nimport classNames from 'classnames';\nimport { MDXLayout } from '@teambit/mdx.ui.mdx-layout';\nimport { ExportingComponents } from '@teambit/component.instructions.exporting-components';\nimport { AlertCard } from '@teambit/design.ui.alert-card';\nimport React, { HTMLAttributes, useContext } from 'react';\nimport { LaneBreadcrumb, useLanesContext } from '@teambit/lanes.ui.lanes';\nimport { Icon } from '@teambit/evangelist.elements.icon';\nimport { Ellipsis } from '@teambit/design.ui.styles.ellipsis';\nimport styles from './change-log-page.module.scss';\n\ntype ChangeLogPageProps = {} & HTMLAttributes<HTMLDivElement>;\n\nexport function ChangeLogPage({ className }: ChangeLogPageProps) {\n  const component = useContext(ComponentContext);\n  const lanesContext = useLanesContext();\n  const currentLane = lanesContext?.currentLane;\n  const { logs } = component;\n\n  if (!logs) return null;\n\n  if (logs.length === 0) {\n    return (\n      <>\n        {currentLane && (\n          <>\n            <div className={styles.lane}>\n              <Icon of=\"lane\"></Icon>\n              <Ellipsis className={styles.laneName}>{currentLane.id}</Ellipsis>\n            </div>\n            <Separator isPresentational className={styles.separator} />\n          </>\n        )}\n        <div className={classNames(styles.changeLogPage, className)}>\n          <H1 className={styles.title}>History</H1>\n          <Separator isPresentational className={styles.separatorNoChangeLog} />\n          <AlertCard\n            level=\"info\"\n            title=\"There is no change log as this component has not been exported yet.\n          Learn how to export components:\"\n            className={styles.changeLogCard}\n          >\n            <MDXLayout>\n              <ExportingComponents />\n            </MDXLayout>\n          </AlertCard>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <LaneBreadcrumb lane={currentLane} />\n      <Separator isPresentational />\n      <div className={classNames(styles.changeLogPage, className)}>\n        <H1 className={styles.title}>History</H1>\n        <Separator isPresentational className={styles.separator} />\n        <div className={styles.logContainer}>\n          {logs.map((snap, index) => {\n            const isLatest = component.latest === snap.tag || component.latest === snap.hash;\n            const isCurrent = component.version === snap.tag || component.version === snap.hash;\n            return (\n              <VersionBlock\n                key={index}\n                componentId={component.id.fullName}\n                isLatest={isLatest}\n                snap={snap}\n                isCurrent={isCurrent}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </>\n  );\n}\n"]}