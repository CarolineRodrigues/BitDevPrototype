{"version":3,"sources":["snap-graph.ts"],"names":["buildSnapGraph","componentLog","graph","Graph","forEach","snap","setNode","hash","parents","parent","setEdge"],"mappings":";;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAGO,SAASA,cAAT,CAAwBC,YAAxB,EAA0D;AAC/D,QAAMC,KAAK,GAAG,KAAIC,mBAAJ,GAAd,CAD+D,CAE/D;;AACAF,EAAAA,YAAY,CAACG,OAAb,CAAsBC,IAAD,IAAU;AAC7BH,IAAAA,KAAK,CAACI,OAAN,CAAcD,IAAI,CAACE,IAAnB,EAAyBF,IAAzB;AACD,GAFD,EAH+D,CAM/D;;AACAJ,EAAAA,YAAY,CAACG,OAAb,CAAsBC,IAAD,IAAU;AAC7BA,IAAAA,IAAI,CAACG,OAAL,CAAaJ,OAAb,CAAsBK,MAAD,IAAY;AAC/BP,MAAAA,KAAK,CAACQ,OAAN,CAAcL,IAAI,CAACE,IAAnB,EAAyBE,MAAzB,EAAiC,QAAjC;AACD,KAFD;AAGD,GAJD;AAKA,SAAOP,KAAP;AACD","sourcesContent":["import { Graph } from 'cleargraph';\nimport { ComponentLogInfo } from './component-log.main.runtime';\n\nexport function buildSnapGraph(componentLog: ComponentLogInfo[]) {\n  const graph = new Graph<ComponentLogInfo, string>();\n  // add nodes\n  componentLog.forEach((snap) => {\n    graph.setNode(snap.hash, snap);\n  });\n  // add edges\n  componentLog.forEach((snap) => {\n    snap.parents.forEach((parent) => {\n      graph.setEdge(snap.hash, parent, 'parent');\n    });\n  });\n  return graph;\n}\n"]}