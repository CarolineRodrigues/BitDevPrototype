import { ComponentType } from 'react';
import { SlotRegistry } from '@teambit/harmony';
import { ComponentUI } from '@teambit/component';
export declare type EmptyStateSlot = SlotRegistry<ComponentType>;
export declare class TesterUI {
    private component;
    private emptyStateSlot;
    static dependencies: import("@teambit/harmony").Aspect[];
    static runtime: import("@teambit/harmony").RuntimeDefinition;
    stageKey?: string;
    constructor(component: ComponentUI, emptyStateSlot: EmptyStateSlot);
    /**
     * register a new tester empty state. this allows to register a different empty state from each environment for example.
     */
    registerEmptyState(emptyStateComponent: ComponentType): this;
    static slots: ((registerFn: () => string) => SlotRegistry<ComponentType<{}>>)[];
    static provider([component]: [ComponentUI], config: any, [emptyStateSlot]: [EmptyStateSlot]): Promise<TesterUI>;
}
export default TesterUI;
