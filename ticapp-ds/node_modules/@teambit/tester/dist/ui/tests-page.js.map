{"version":3,"sources":["tests-page.tsx"],"names":["TESTS_SUBSCRIPTION_CHANGED","GET_COMPONENT","TestsPage","className","emptyState","component","ComponentContext","onTestsChanged","variables","id","toString","data","_legacy","name","testData","testsChanged","getHost","getTests","testResults","testsResults","testFiles","loading","env","environment","EmptyStateTemplate","get","host","styles","testsPage","title","separator","testBlock"],"mappings":"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","sourcesContent":["import { useQuery, useSubscription, gql } from '@apollo/client';\nimport { ComponentContext } from '@teambit/component';\nimport { H1 } from '@teambit/documenter.ui.heading';\nimport { Separator } from '@teambit/design.ui.separator';\nimport { EmptyBox } from '@teambit/design.ui.empty-box';\nimport { MDXLayout } from '@teambit/mdx.ui.mdx-layout';\nimport { AlertCard } from '@teambit/design.ui.alert-card';\nimport { TestLoader } from '@teambit/defender.ui.test-loader';\nimport classNames from 'classnames';\nimport React, { HTMLAttributes, useContext } from 'react';\nimport { TestTable } from '@teambit/defender.ui.test-table';\nimport { EmptyStateSlot } from '../tester.ui.runtime';\nimport styles from './tests-page.module.scss';\n\nconst TESTS_SUBSCRIPTION_CHANGED = gql`\n  subscription OnTestsChanged($id: String!) {\n    testsChanged(id: $id) {\n      testsResults {\n        testFiles {\n          file\n          duration\n          pass\n          failed\n          pending\n          errorStr\n          tests {\n            ancestor\n            duration\n            status\n            name\n            error\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst GET_COMPONENT = gql`\n  query ($id: String!) {\n    getHost {\n      id # for GQL caching\n      getTests(id: $id) {\n        loading\n        testsResults {\n          testFiles {\n            file\n            duration\n            pass\n            failed\n            pending\n            errorStr\n            tests {\n              ancestor\n              duration\n              status\n              name\n              error\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\ntype TestsPageProps = {\n  emptyState: EmptyStateSlot;\n} & HTMLAttributes<HTMLDivElement>;\n\nexport function TestsPage({ className, emptyState }: TestsPageProps) {\n  const component = useContext(ComponentContext);\n  const onTestsChanged = useSubscription(TESTS_SUBSCRIPTION_CHANGED, { variables: { id: component.id.toString() } });\n  const { data } = useQuery(GET_COMPONENT, {\n    variables: { id: component.id._legacy.name },\n  });\n\n  const testData = onTestsChanged.data?.testsChanged || data?.getHost?.getTests;\n  const testResults = testData?.testsResults?.testFiles;\n\n  // TODO: change loading EmptyBox\n  if (testData?.loading) return <TestLoader />;\n\n  const env = component.environment?.id;\n  const EmptyStateTemplate = emptyState.get(env || '');\n\n  if (\n    (testResults === null || testData?.testsResults === null) &&\n    component.host === 'teambit.workspace/workspace' &&\n    EmptyStateTemplate\n  ) {\n    return (\n      <div className={classNames(styles.testsPage, className)}>\n        <div>\n          <H1 className={styles.title}>Tests</H1>\n          <Separator isPresentational className={styles.separator} />\n          <AlertCard\n            level=\"info\"\n            title=\"There are no\n                tests for this Component. Learn how to add tests:\"\n          >\n            <MDXLayout>\n              <EmptyStateTemplate />\n            </MDXLayout>\n          </AlertCard>\n        </div>\n      </div>\n    );\n  }\n\n  // TODO: get the docs domain from the community aspect and pass it here as a prop\n  if (testResults === null || testData?.testsResults === null) {\n    return (\n      <EmptyBox\n        title=\"This component doesnâ€™t have any tests.\"\n        linkText=\"Learn how to add tests to your components\"\n        link={`https://bit.dev/docs/dev-services-overview/tester/tester-overview`}\n      />\n    );\n  }\n\n  return (\n    <div className={classNames(styles.testsPage, className)}>\n      <div>\n        <H1 className={styles.title}>Tests</H1>\n        <Separator isPresentational className={styles.separator} />\n        <TestTable testResults={testResults} className={styles.testBlock} />\n      </div>\n    </div>\n  );\n}\n"]}