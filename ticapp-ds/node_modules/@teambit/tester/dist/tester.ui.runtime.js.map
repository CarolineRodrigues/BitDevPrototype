{"version":3,"sources":["tester.ui.runtime.tsx"],"names":["TesterUI","constructor","component","emptyStateSlot","registerEmptyState","emptyStateComponent","register","provider","config","testerUi","section","TestsSection","registerRoute","route","registerNavigation","navigationLink","order","ComponentAspect","UIRuntime","Slot","withType","TesterAspect","addRuntime"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAGO,MAAMA,QAAN,CAAe;AAOpBC,EAAAA,WAAW,CAASC,SAAT,EAAyCC,cAAzC,EAAyE;AAAA,SAAhED,SAAgE,GAAhEA,SAAgE;AAAA,SAAhCC,cAAgC,GAAhCA,cAAgC;AAAA;AAAE;AAEtF;AACF;AACA;;;AACEC,EAAAA,kBAAkB,CAACC,mBAAD,EAAqC;AACrD,SAAKF,cAAL,CAAoBG,QAApB,CAA6BD,mBAA7B;AACA,WAAO,IAAP;AACD;;AAIoB,eAARE,QAAQ,CAAC,CAACL,SAAD,CAAD,EAA6BM,MAA7B,EAAqC,CAACL,cAAD,CAArC,EAAyE;AAC5F,UAAMM,QAAQ,GAAG,IAAIT,QAAJ,CAAaE,SAAb,EAAwBC,cAAxB,CAAjB;AAEA,UAAMO,OAAO,GAAG,KAAIC,qBAAJ,EAAiBR,cAAjB,CAAhB;AAEAD,IAAAA,SAAS,CAACU,aAAV,CAAwBF,OAAO,CAACG,KAAhC;AACAX,IAAAA,SAAS,CAACY,kBAAV,CAA6BJ,OAAO,CAACK,cAArC,EAAqDL,OAAO,CAACM,KAA7D;AAEA,WAAOP,QAAP;AACD;;AA5BmB;;;gCAATT,Q,kBACW,CAACiB,4BAAD,C;gCADXjB,Q,aAGMkB,e;gCAHNlB,Q,WAiBI,CAACmB,gBAAKC,QAAL,EAAD,C;eAcFpB,Q;;;AAEfqB,uBAAaC,UAAb,CAAwBtB,QAAxB","sourcesContent":["import { ComponentType } from 'react';\nimport { UIRuntime } from '@teambit/ui';\nimport { SlotRegistry, Slot } from '@teambit/harmony';\nimport { ComponentAspect, ComponentUI } from '@teambit/component';\nimport { TestsSection } from './tests.section';\nimport { TesterAspect } from './tester.aspect';\n\nexport type EmptyStateSlot = SlotRegistry<ComponentType>;\nexport class TesterUI {\n  static dependencies = [ComponentAspect];\n\n  static runtime = UIRuntime;\n\n  stageKey?: string;\n\n  constructor(private component: ComponentUI, private emptyStateSlot: EmptyStateSlot) {}\n\n  /**\n   * register a new tester empty state. this allows to register a different empty state from each environment for example.\n   */\n  registerEmptyState(emptyStateComponent: ComponentType) {\n    this.emptyStateSlot.register(emptyStateComponent);\n    return this;\n  }\n\n  static slots = [Slot.withType<ComponentType>()];\n\n  static async provider([component]: [ComponentUI], config, [emptyStateSlot]: [EmptyStateSlot]) {\n    const testerUi = new TesterUI(component, emptyStateSlot);\n\n    const section = new TestsSection(emptyStateSlot);\n\n    component.registerRoute(section.route);\n    component.registerNavigation(section.navigationLink, section.order);\n\n    return testerUi;\n  }\n}\n\nexport default TesterUI;\n\nTesterAspect.addRuntime(TesterUI);\n"]}