{"version":3,"sources":["dev-files.ts"],"names":["DevFiles","constructor","raw","get","aspectId","toTupleArray","Object","entries","map","files","file","list","values","includes","filePath","toObject","toString","pretty","JSON","stringify"],"mappings":";;;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEO,MAAMA,QAAN,CAAe;AACpBC,EAAAA,WAAW,CAASC,GAAT,EAA2C;AAAA,SAAlCA,GAAkC,GAAlCA,GAAkC;AAAE;AAExD;AACF;AACA;;;AACEC,EAAAA,GAAG,CAACC,QAAD,EAA6B;AAC9B,WAAO,KAAKF,GAAL,CAASE,QAAT,KAAsB,EAA7B;AACD;;AAEDC,EAAAA,YAAY,GAAG;AACb,WAAO,uBACLC,MAAM,CAACC,OAAP,CAAe,KAAKL,GAApB,EAAyBM,GAAzB,CAA6B,CAAC,CAACJ,QAAD,EAAWK,KAAX,CAAD,KAAuB;AAClD,aAAOA,KAAK,CAACD,GAAN,CAAWE,IAAD,IAAU,CAACA,IAAD,EAAON,QAAP,CAApB,CAAP;AACD,KAFD,CADK,CAAP;AAKD;AAED;AACF;AACA;;;AACEO,EAAAA,IAAI,GAAa;AACf,WAAO,uBAAQL,MAAM,CAACM,MAAP,CAAc,KAAKV,GAAnB,CAAR,CAAP;AACD;AAED;AACF;AACA;AACA;;;AACEW,EAAAA,QAAQ,CAACC,QAAD,EAAmB;AACzB,WAAO,KAAKH,IAAL,GAAYE,QAAZ,CAAqBC,QAArB,CAAP;AACD;AAED;AACF;AACA;;;AACEC,EAAAA,QAAQ,GAAG;AACT,WAAO,KAAKb,GAAZ;AACD;AAED;AACF;AACA;;;AACEc,EAAAA,QAAQ,CAACC,MAAM,GAAG,KAAV,EAAiB;AACvB,WAAOC,IAAI,CAACC,SAAL,CAAe,KAAKJ,QAAL,EAAf,EAAgC,IAAhC,EAAsCE,MAAM,GAAG,CAAH,GAAO,CAAnD,CAAP;AACD;;AA7CmB","sourcesContent":["import { flatten } from 'lodash';\n\nexport class DevFiles {\n  constructor(private raw: { [key: string]: string[] }) {}\n\n  /**\n   * get all dev files of an aspect (for example: teambit.defender/tester)\n   */\n  get(aspectId: string): string[] {\n    return this.raw[aspectId] || [];\n  }\n\n  toTupleArray() {\n    return flatten(\n      Object.entries(this.raw).map(([aspectId, files]) => {\n        return files.map((file) => [file, aspectId]);\n      })\n    );\n  }\n\n  /**\n   * list all dev files.\n   */\n  list(): string[] {\n    return flatten(Object.values(this.raw));\n  }\n\n  /**\n   * determine whether a file is included in the dev files.\n   * @param filePath\n   */\n  includes(filePath: string) {\n    return this.list().includes(filePath);\n  }\n\n  /**\n   * return a plain object with all dev files.\n   */\n  toObject() {\n    return this.raw;\n  }\n\n  /**\n   * serialize all dev files into a JSON string.\n   */\n  toString(pretty = false) {\n    return JSON.stringify(this.toObject(), null, pretty ? 2 : 0);\n  }\n}\n"]}