{"version":3,"sources":["main.runtime.ts"],"names":["mainRuntimeFile","namePascalCase","Name","name"],"mappings":";;;;;;;AAEO,SAASA,eAAT,CAAyB;AAAEC,EAAAA,cAAc,EAAEC,IAAlB;AAAwBC,EAAAA;AAAxB,CAAzB,EAA2E;AAChF,SAAQ;AACV;AACA;AACA,WAAWD,IAAK,oBAAmBC,IAAK;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAeD,IAAK;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiBA,IAAK;AACtB;AACA;AACA;AACA,EAAEA,IAAK,qBAAoBA,IAAK;AAChC,CA/EE;AAgFD","sourcesContent":["import { ComponentContext } from '@teambit/generator';\n\nexport function mainRuntimeFile({ namePascalCase: Name, name }: ComponentContext) {\n  return `import { MainRuntime } from '@teambit/cli';\nimport { ReactAspect, ReactMain } from '@teambit/react';\nimport { EnvsAspect, EnvsMain } from '@teambit/envs';\nimport { ${Name}Aspect } from './${name}.aspect';\n// import { previewConfigTransformer, devServerConfigTransformer } from './webpack/webpack-transformers';\n\n/**\n * Uncomment to include config files for overrides of Typescript or Webpack\n */\n// const tsconfig = require('./typescript/tsconfig');\n\nexport class ${Name}Main {\n  static slots = [];\n\n  static dependencies = [ReactAspect, EnvsAspect];\n\n  static runtime = MainRuntime;\n\n  static async provider([react, envs]: [ReactMain, EnvsMain]) {\n    const templatesReactEnv = envs.compose(react.reactEnv, [\n      /**\n       * Uncomment to override the config files for TypeScript, Webpack or Jest\n       * Your config gets merged with the defaults\n       */\n\n      // react.overrideTsConfig(tsconfig),\n      // react.useWebpack({\n      //   previewConfig: [previewConfigTransformer],\n      //   devServerConfig: [devServerConfigTransformer],\n      // }),\n      // react.overrideJestConfig(require.resolve('./jest/jest.config')),\n\n      /**\n       * override the ESLint default config here then check your files for lint errors\n       * @example\n       * bit lint\n       * bit lint --fix\n       */\n      react.useEslint({\n        transformers: [\n          (config) => {\n            config.setRule('no-console', ['error']);\n            return config;\n          }\n        ]\n      }),\n\n      /**\n       * override the Prettier default config here the check your formatting\n       * @example\n       * bit format --check\n       * bit format\n       */\n      react.usePrettier({\n        transformers: [\n          (config) => {\n            config.setKey('tabWidth', 2);\n            return config;\n          }\n        ]\n      }),\n\n      /**\n       * override dependencies here\n       * @example\n       * Uncomment types to include version 17.0.3 of the types package\n       */\n      react.overrideDependencies({\n        devDependencies: {\n          // '@types/react': '17.0.3'\n        }\n      })\n    ]);\n    envs.registerEnv(templatesReactEnv);\n    return new ${Name}Main();\n  }\n}\n\n${Name}Aspect.addRuntime(${Name}Main);\n`;\n}\n"]}