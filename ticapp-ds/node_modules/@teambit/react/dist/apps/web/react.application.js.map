{"version":3,"sources":["react.application.ts"],"names":["ReactApp","constructor","name","entry","portRange","reactEnv","prerenderRoutes","bundler","devServer","transformers","deploy","favicon","run","context","from","to","port","Port","getPort","listen","devServerContext","getDevServerContext","getDevServer","configMutator","addTopLevel","historyApiFallback","index","disableDotRule","raw","output","publicPath","build","htmlConfig","title","templateContent","minify","Object","assign","html","getBundler","publicDir","getPublicDir","dir","getDefaultBundler","capsule","env","outputPath","path","distDir","getCompiler","entries","map","require","resolve","staticDir","bundlerContext","targets","components","component","rootPath","metaData","initiator","envId","id","defaultTransformer","config","addPlugin","optimization","minimizer","push","TerserPlugin","esbuildMinify","terserOptions","applicationType"],"mappings":"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","sourcesContent":["import { join, basename } from 'path';\nimport { Application, AppContext, AppBuildContext } from '@teambit/application';\nimport { Bundler, DevServer, BundlerContext, DevServerContext, BundlerHtmlConfig } from '@teambit/bundler';\nimport { Port } from '@teambit/toolbox.network.get-port';\nimport { remove } from 'lodash';\nimport TerserPlugin from 'terser-webpack-plugin';\nimport { WebpackConfigTransformer } from '@teambit/webpack';\nimport { ReactEnv } from '../../react.env';\nimport { prerenderSPAPlugin } from './plugins';\nimport { ReactAppBuildResult } from './react-build-result';\nimport { html } from '../../webpack';\nimport { ReactDeployContext } from '.';\n\nexport class ReactApp implements Application {\n  constructor(\n    readonly name: string,\n    readonly entry: string[],\n    readonly portRange: number[],\n    private reactEnv: ReactEnv,\n    readonly prerenderRoutes?: string[],\n    readonly bundler?: Bundler,\n    readonly devServer?: DevServer,\n    readonly transformers?: WebpackConfigTransformer[],\n    readonly deploy?: (context: ReactDeployContext) => Promise<void>,\n    readonly favicon?: string\n  ) {}\n  readonly applicationType = 'react-common-js';\n  readonly dir = 'public';\n  async run(context: AppContext): Promise<number> {\n    const [from, to] = this.portRange;\n    const port = await Port.getPort(from, to);\n    if (this.devServer) {\n      await this.devServer.listen(port);\n      return port;\n    }\n    const devServerContext = this.getDevServerContext(context);\n    const devServer = this.reactEnv.getDevServer(devServerContext, [\n      (configMutator) => {\n        configMutator.addTopLevel('devServer', {\n          historyApiFallback: {\n            index: '/index.html',\n            disableDotRule: true,\n          },\n        });\n\n        if (!configMutator.raw.output) configMutator.raw.output = {};\n        configMutator.raw.output.publicPath = '/';\n\n        return configMutator;\n      },\n    ]);\n    await devServer.listen(port);\n    return port;\n  }\n\n  async build(context: AppBuildContext): Promise<ReactAppBuildResult> {\n    const htmlConfig: BundlerHtmlConfig[] = [\n      {\n        title: context.name,\n        templateContent: html(context.name),\n        minify: false,\n        favicon: this.favicon,\n        // filename: ''.html`,\n      },\n    ];\n    Object.assign(context, {\n      html: htmlConfig,\n    });\n    const bundler = await this.getBundler(context);\n    await bundler.run();\n    return { publicDir: `${this.getPublicDir()}/${this.dir}` };\n  }\n\n  private getBundler(context: AppBuildContext) {\n    if (this.bundler) return this.bundler;\n    return this.getDefaultBundler(context);\n  }\n  private async getDefaultBundler(context: AppBuildContext) {\n    const { capsule } = context;\n    const reactEnv: ReactEnv = context.env;\n    const publicDir = this.getPublicDir();\n    const outputPath = join(capsule.path, publicDir);\n    const { distDir } = reactEnv.getCompiler();\n    const entries = this.entry.map((entry) => require.resolve(`${capsule.path}/${distDir}/${basename(entry)}`));\n    const staticDir = join(outputPath, this.dir);\n\n    const bundlerContext: BundlerContext = Object.assign(context, {\n      targets: [\n        {\n          components: [capsule?.component],\n          entries,\n          outputPath,\n        },\n      ],\n      entry: [],\n      rootPath: '/',\n      metaData: {\n        initiator: `building app: ${context.name}`,\n        envId: context.id,\n      },\n    });\n\n    const defaultTransformer: WebpackConfigTransformer = (configMutator) => {\n      const config = configMutator.addTopLevel('output', { path: staticDir, publicPath: `/` });\n      if (this.prerenderRoutes) config.addPlugin(prerenderSPAPlugin(this.prerenderRoutes, staticDir));\n      if (config.raw.optimization?.minimizer) {\n        remove(config.raw.optimization?.minimizer, (minimizer) => {\n          return minimizer.constructor.name === 'TerserPlugin';\n        });\n        config.raw.optimization?.minimizer.push(\n          new TerserPlugin({\n            minify: TerserPlugin.esbuildMinify,\n            // `terserOptions` options will be passed to `esbuild`\n            // Link to options - https://esbuild.github.io/api/#minify\n            terserOptions: {\n              minify: true,\n            },\n          })\n        );\n      }\n      return config;\n    };\n    const transformers = [defaultTransformer, ...(this.transformers ?? [])];\n    const bundler: Bundler = await reactEnv.getBundler(bundlerContext, transformers);\n    return bundler;\n  }\n\n  private getPublicDir() {\n    return join(this.applicationType, this.name);\n  }\n\n  private getDevServerContext(context: AppContext): DevServerContext {\n    return Object.assign(context, {\n      entry: this.entry,\n      rootPath: '',\n      publicPath: `public/${this.name}`,\n      title: this.name,\n      favicon: this.favicon,\n    });\n  }\n}\n"]}