import { Application, AppContext, AppBuildContext } from '@teambit/application';
import { Bundler, DevServer } from '@teambit/bundler';
import { WebpackConfigTransformer } from '@teambit/webpack';
import { ReactEnv } from '../../react.env';
import { ReactAppBuildResult } from './react-build-result';
import { ReactDeployContext } from '.';
export declare class ReactApp implements Application {
    readonly name: string;
    readonly entry: string[];
    readonly portRange: number[];
    private reactEnv;
    readonly prerenderRoutes?: string[] | undefined;
    readonly bundler?: Bundler | undefined;
    readonly devServer?: DevServer | undefined;
    readonly transformers?: WebpackConfigTransformer[] | undefined;
    readonly deploy?: ((context: ReactDeployContext) => Promise<void>) | undefined;
    readonly favicon?: string | undefined;
    constructor(name: string, entry: string[], portRange: number[], reactEnv: ReactEnv, prerenderRoutes?: string[] | undefined, bundler?: Bundler | undefined, devServer?: DevServer | undefined, transformers?: WebpackConfigTransformer[] | undefined, deploy?: ((context: ReactDeployContext) => Promise<void>) | undefined, favicon?: string | undefined);
    readonly applicationType = "react-common-js";
    readonly dir = "public";
    run(context: AppContext): Promise<number>;
    build(context: AppBuildContext): Promise<ReactAppBuildResult>;
    private getBundler;
    private getDefaultBundler;
    private getPublicDir;
    private getDevServerContext;
}
