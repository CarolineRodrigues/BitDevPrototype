{"version":3,"sources":["react.preview.runtime.ts"],"names":["ReactPreview","constructor","preview","providerSlot","aspectsFilter","entries","toArray","allowedAspects","Set","add","ReactAspect","id","filter","aspectId","has","providers","map","provider","registerProvider","register","config","reactPreview","HighlighterProvider","registerRenderContext","getRenderingContext","PreviewRuntime","Slot","withType","PreviewAspect","addRuntime"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;AAKO,MAAMA,YAAN,CAAmB;AACxBC,EAAAA,WAAW,CAASC,OAAT,EAA0CC,YAA1C,EAAsE;AAAA,SAA7DD,OAA6D,GAA7DA,OAA6D;AAAA,SAA5BC,YAA4B,GAA5BA,YAA4B;AAAA,iEAMjC,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAuB;AACrE,UAAIC,OAAO,GAAG,KAAKF,YAAL,CAAkBG,OAAlB,EAAd;;AAEA,UAAIF,aAAJ,EAAmB;AACjB,cAAMG,cAAc,GAAG,IAAIC,GAAJ,CAAQJ,aAAR,CAAvB;AACAG,QAAAA,cAAc,CAACE,GAAf,CAAmBC,qBAAYC,EAA/B;AAEAN,QAAAA,OAAO,GAAGA,OAAO,CAACO,MAAR,CAAe,CAAC,CAACC,QAAD,CAAD,KAAgBN,cAAc,CAACO,GAAf,CAAmBD,QAAnB,CAA/B,CAAV;AACD;;AAED,YAAME,SAAS,GAAG,uBAAQV,OAAO,CAACW,GAAR,CAAY,CAAC,GAAGC,QAAH,CAAD,KAAkBA,QAA9B,CAAR,CAAlB;AAEA,aAAO;AACLF,QAAAA;AADK,OAAP;AAGD,KArBgF;AAAE;;AAEnFG,EAAAA,gBAAgB,CAACD,QAAD,EAAuB;AACrC,SAAKd,YAAL,CAAkBgB,QAAlB,CAA2BF,QAA3B;AACD;;AAyBoB,eAARA,QAAQ,CAAC,CAACf,OAAD,CAAD,EAA8BkB,MAA9B,EAAsC,CAACjB,YAAD,CAAtC,EAAsE;AACzF,UAAMkB,YAAY,GAAG,IAAIrB,YAAJ,CAAiBE,OAAjB,EAA0BC,YAA1B,CAArB;AAEAkB,IAAAA,YAAY,CAACH,gBAAb,CAA8B,CAACI,8BAAD,CAA9B;AAEApB,IAAAA,OAAO,CAACqB,qBAAR,CAA8BF,YAAY,CAACG,mBAA3C;AAEA,WAAOH,YAAP;AACD;;AAtCuB;;;gCAAbrB,Y,aAwBMyB,yB;gCAxBNzB,Y,WA0BI,CAAC0B,gBAAKC,QAAL,EAAD,C;gCA1BJ3B,Y,kBA4BW,CAAC4B,kBAAD,C;;AAaxBlB,qBAAYmB,UAAZ,CAAuB7B,YAAvB;;eAEeA,Y","sourcesContent":["import { ComponentType } from 'react';\nimport flatten from 'lodash.flatten';\nimport { SlotRegistry, Slot } from '@teambit/harmony';\nimport PreviewAspect, { PreviewPreview, PreviewRuntime, RenderingContextProvider } from '@teambit/preview';\nimport { HighlighterProvider } from '@teambit/react.ui.highlighter-provider';\nimport { ReactAspect } from './react.aspect';\n\nexport type Provider = ComponentType<{}>;\nexport type ProviderSlot = SlotRegistry<Provider[]>;\n\nexport class ReactPreview {\n  constructor(private preview: PreviewPreview, private providerSlot: ProviderSlot) {}\n\n  registerProvider(provider: Provider[]) {\n    this.providerSlot.register(provider);\n  }\n\n  getRenderingContext: RenderingContextProvider = ({ aspectsFilter }) => {\n    let entries = this.providerSlot.toArray();\n\n    if (aspectsFilter) {\n      const allowedAspects = new Set(aspectsFilter);\n      allowedAspects.add(ReactAspect.id);\n\n      entries = entries.filter(([aspectId]) => allowedAspects.has(aspectId));\n    }\n\n    const providers = flatten(entries.map(([, provider]) => provider));\n\n    return {\n      providers,\n    };\n  };\n\n  static runtime = PreviewRuntime;\n\n  static slots = [Slot.withType<Provider>()];\n\n  static dependencies = [PreviewAspect];\n\n  static async provider([preview]: [PreviewPreview], config, [providerSlot]: [ProviderSlot]) {\n    const reactPreview = new ReactPreview(preview, providerSlot);\n\n    reactPreview.registerProvider([HighlighterProvider]);\n\n    preview.registerRenderContext(reactPreview.getRenderingContext);\n\n    return reactPreview;\n  }\n}\n\nReactAspect.addRuntime(ReactPreview);\n\nexport default ReactPreview;\n"]}