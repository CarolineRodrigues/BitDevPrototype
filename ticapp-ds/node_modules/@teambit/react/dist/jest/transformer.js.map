{"version":3,"sources":["transformer.js"],"names":["transform","require","presets","targets","node","useBuiltIns","corejs","plugins","legacy","module","exports","process","src","filename","result","sourceMap","babelrc","configFile","code"],"mappings":";;AAAA;AACA,MAAM;AAAEA,EAAAA;AAAF,IAAgBC,OAAO,CAAC,aAAD,CAA7B;;AAEA,MAAMC,OAAO,GAAG,CACdD,OAAO,CAAC,qBAAD,CADO,EAEdA,OAAO,CAAC,0BAAD,CAFO,EAGdA,OAAO,CAAC,mBAAD,CAHO,EAId,CACEA,OAAO,CAAC,mBAAD,CADT,EAEE;AACEE,EAAAA,OAAO,EAAE;AACPC,IAAAA,IAAI,EAAE;AADC,GADX;AAIEC,EAAAA,WAAW,EAAE,OAJf;AAKEC,EAAAA,MAAM,EAAE;AALV,CAFF,CAJc,CAAhB;AAeA,MAAMC,OAAO,GAAG,CACd,CAACN,OAAO,CAAC,0CAAD,CAAR,CADc,EAEd,CAACA,OAAO,CAAC,4CAAD,CAAR,CAFc,EAGd,CAACA,OAAO,CAAC,mCAAD,CAAR,EAA+C;AAAEO,EAAAA,MAAM,EAAE;AAAV,CAA/C,CAHc,EAId,CAACP,OAAO,CAAC,iCAAD,CAAR,CAJc,EAKd,CAACA,OAAO,CAAC,2CAAD,CAAR,CALc,EAMd,CAACA,OAAO,CAAC,yCAAD,CAAR,CANc,CAAhB;AASAQ,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,OAAO,CAACC,GAAD,EAAMC,QAAN,EAAgB;AACrB,UAAMC,MAAM,GAAGd,SAAS,CAACY,GAAD,EAAM;AAC5BG,MAAAA,SAAS,EAAE,QADiB;AAE5BF,MAAAA,QAF4B;AAG5BX,MAAAA,OAH4B;AAI5BK,MAAAA,OAJ4B;AAK5BS,MAAAA,OAAO,EAAE,KALmB;AAM5BC,MAAAA,UAAU,EAAE;AANgB,KAAN,CAAxB;AASA,WAAOH,MAAM,GAAGA,MAAM,CAACI,IAAV,GAAiBN,GAA9B;AACD;;AAZc,CAAjB","sourcesContent":["/* eslint-disable global-require */\nconst { transform } = require('@babel/core');\n\nconst presets = [\n  require('@babel/preset-react'),\n  require('@babel/preset-typescript'),\n  require('babel-preset-jest'),\n  [\n    require('@babel/preset-env'),\n    {\n      targets: {\n        node: 12,\n      },\n      useBuiltIns: 'usage',\n      corejs: 3,\n    },\n  ],\n];\nconst plugins = [\n  [require('@babel/plugin-transform-modules-commonjs')],\n  [require('babel-plugin-transform-typescript-metadata')],\n  [require('@babel/plugin-proposal-decorators'), { legacy: true }],\n  [require('@babel/plugin-transform-runtime')],\n  [require('@babel/plugin-proposal-object-rest-spread')],\n  [require('@babel/plugin-proposal-class-properties')],\n];\n\nmodule.exports = {\n  process(src, filename) {\n    const result = transform(src, {\n      sourceMap: 'inline',\n      filename,\n      presets,\n      plugins,\n      babelrc: false,\n      configFile: false,\n    });\n\n    return result ? result.code : src;\n  },\n};\n"]}