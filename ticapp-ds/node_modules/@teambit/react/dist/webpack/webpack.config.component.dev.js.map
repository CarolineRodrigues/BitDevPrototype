{"version":3,"sources":["webpack.config.component.dev.ts"],"names":["matchNothingRegex","workDir","envId","module","rules","test","enforce","include","path","join","descriptionData","componentId","value","use","require","resolve","ComponentID","isValidObject","loader","options","babelrc","configFile","plugins","compact","minified","presets","ReactRefreshWebpackPlugin","overlay","sockPath","entry"],"mappings":"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","sourcesContent":["import path from 'path';\nimport { Configuration } from 'webpack';\nimport { ComponentID } from '@teambit/component-id';\n// Make sure the bit-react-transformer is a dependency\n// TODO: remove it once we can set policy from component to component then set it via the component.json\nimport '@teambit/react.babel.bit-react-transformer';\nimport ReactRefreshWebpackPlugin from '@pmmmwh/react-refresh-webpack-plugin';\n\nconst matchNothingRegex = 'a^';\n\n// This is the production and development configuration.\n// It is focused on developer experience, fast rebuilds, and a minimal bundle.\n// eslint-disable-next-line complexity\n// export default function (workDir: string, envId: string): Configuration {\nexport default function (workDir: string, envId: string): Configuration {\n  return {\n    module: {\n      rules: [\n        {\n          test: /\\.js$/,\n          enforce: 'pre',\n          // limit loader to files in the current project,\n          // to skip any files linked from other projects (like Bit itself)\n          include: path.join(workDir, 'node_modules'),\n          // only apply to packages with componentId in their package.json (ie. bit components)\n          descriptionData: { componentId: (value) => !!value },\n          use: [require.resolve('source-map-loader')],\n        },\n        {\n          test: /\\.js$/,\n          // limit loader to files in the current project,\n          // to skip any files linked from other projects (like Bit itself)\n          include: path.join(workDir, 'node_modules'),\n          // only apply to packages with componentId in their package.json (ie. bit components)\n          descriptionData: { componentId: ComponentID.isValidObject },\n          use: [\n            require.resolve('@pmmmwh/react-refresh-webpack-plugin/loader'),\n            {\n              loader: require.resolve('babel-loader'),\n              options: {\n                babelrc: false,\n                configFile: false,\n                plugins: [\n                  require.resolve('react-refresh/babel'),\n                  // for component highlighting in preview.\n                  [require.resolve('@teambit/react.babel.bit-react-transformer')],\n                ],\n                // turn off all optimizations (only slow down for node_modules)\n                compact: false,\n                minified: false,\n              },\n            },\n          ],\n        },\n        // MDX support (move to the mdx aspect and extend from there)\n        {\n          test: /\\.mdx?$/,\n          // to skip any files linked from other projects (like Bit itself)\n          include: path.join(workDir, 'node_modules'),\n          // only apply to packages with componentId in their package.json (ie. bit components)\n          descriptionData: { componentId: (value) => !!value },\n          use: [\n            require.resolve('@pmmmwh/react-refresh-webpack-plugin/loader'),\n            {\n              loader: require.resolve('babel-loader'),\n              options: {\n                babelrc: false,\n                configFile: false,\n                presets: [require.resolve('@babel/preset-react'), require.resolve('@babel/preset-env')],\n                plugins: [require.resolve('react-refresh/babel')],\n              },\n            },\n            {\n              loader: require.resolve('@teambit/mdx.modules.mdx-loader'),\n            },\n          ],\n        },\n      ],\n    },\n    plugins: [\n      // No need here as we have `hot: true` in the dev server\n      // new webpack.HotModuleReplacementPlugin({}),\n      new ReactRefreshWebpackPlugin({\n        overlay: {\n          sockPath: `_hmr/${envId}`,\n          // TODO - react-error-overlay not showing runtime errors - https://github.com/teambit/bit/issues/5452\n          entry: require.resolve('./overlay/webpackHotDevClient'),\n          module: require.resolve('./overlay/refreshOverlayInterop'),\n        },\n\n        // we use '@pmmmwh/react-refresh-webpack-plugin/loader' directly where relevant.\n        // FYI, original defaults of the plugin are:\n        // include: /\\.([cm]js|[jt]sx?|flow)$/i, exclude: /node_modules/,\n        include: matchNothingRegex,\n      }),\n    ],\n  };\n}\n"]}