{"version":3,"sources":["get-exposed-rules.ts"],"names":["getExposedRules","peers","loaderPath","require","resolve","depsEntries","map","peer","path","globalName","replace","pascalCase"],"mappings":";;;;;;;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEO,SAASA,eAAT,CAAyBC,KAAzB,EAA0C;AAC/C,QAAMC,UAAU,GAAGC,OAAO,CAACC,OAAR,CAAgB,eAAhB,CAAnB;;AACA,QAAMC,WAAW,GAAGJ,KAAK,CAACK,GAAN,CAAWC,IAAD,KAAW;AACvCC,IAAAA,IAAI,EAAEL,OAAO,CAACC,OAAR,CAAgBG,IAAhB,CADiC;AAEvCE,IAAAA,UAAU,EAAE,0BAAUF,IAAI,CAACG,OAAL,CAAa,GAAb,EAAkB,EAAlB,EAAsBA,OAAtB,CAA8B,GAA9B,EAAmC,GAAnC,CAAV,EAAmD;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAAnD;AAF2B,GAAX,CAAV,CAApB;AAIA,SAAO,6CAAsBN,WAAtB,EAAmC;AAAEH,IAAAA;AAAF,GAAnC,CAAP;AACD","sourcesContent":["import camelcase from 'camelcase';\nimport 'expose-loader';\nimport { generateExposeLoaders } from '@teambit/webpack.modules.generate-expose-loaders';\n\nexport function getExposedRules(peers: string[]) {\n  const loaderPath = require.resolve('expose-loader');\n  const depsEntries = peers.map((peer) => ({\n    path: require.resolve(peer),\n    globalName: camelcase(peer.replace('@', '').replace('/', '-'), { pascalCase: true }),\n  }));\n  return generateExposeLoaders(depsEntries, { loaderPath });\n}\n"]}