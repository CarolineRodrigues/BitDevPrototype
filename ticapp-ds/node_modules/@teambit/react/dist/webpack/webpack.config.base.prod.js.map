{"version":3,"sources":["webpack.config.base.prod.ts"],"names":["externalizePeer","peers","dev","externals","undefined","exposedRules","module","rules","optimization","minimize","minimizer","TerserPlugin","minify","esbuildMinify","terserOptions","minifyWhitespace","minifyIdentifiers","minifySyntax","CssMinimizerPlugin","minimizerOptions","preset","minifyFontValues","removeQuotes","plugins","WorkboxWebpackPlugin","GenerateSW","clientsClaim","exclude","navigateFallback","navigateFallbackDenylist","RegExp","filter","Boolean","performance"],"mappings":";;;;;;;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAEA;AACA;AACA;AACe,kBAAUA,eAAV,EAAoCC,KAApC,EAAqDC,GAArD,EAAmF;AAChG,QAAMC,SAAS,GAAGH,eAAe,GAAI,kCAAaC,KAAb,CAAJ,GAAkCG,SAAnE;AACA,QAAMC,YAAY,GAAGL,eAAe,GAAGI,SAAH,GAAe,wCAAgBH,KAAhB,CAAnD;AAEA,QAAMK,MAAM,GAAGN,eAAe,GAC1BI,SAD0B,GAE1B;AACEG,IAAAA,KAAK,EAAEF;AADT,GAFJ;AAMA,QAAMG,YAAY,GAAGN,GAAG,GACpBE,SADoB,GAEpB;AACEK,IAAAA,QAAQ,EAAE,IADZ;AAEEC,IAAAA,SAAS,EAAE,CACT,KAAIC,8BAAJ,EAAiB;AACfC,MAAAA,MAAM,EAAED,+BAAaE,aADN;AAEf;AACA;AACA;AACAC,MAAAA,aAAa,EAAE;AACbF,QAAAA,MAAM,EAAE,KADK;AAEbG,QAAAA,gBAAgB,EAAE,IAFL;AAGb;AACAC,QAAAA,iBAAiB,EAAE,KAJN;AAKb;AACAC,QAAAA,YAAY,EAAE;AAND,OALA,CAaf;;AAbe,KAAjB,CADS,EAiBT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAIC,oCAAJ,EAAuB;AACrBC,MAAAA,gBAAgB,EAAE;AAChBC,QAAAA,MAAM,EAAE,CACN,SADM,EAEN;AACEC,UAAAA,gBAAgB,EAAE;AAAEC,YAAAA,YAAY,EAAE;AAAhB;AADpB,SAFM;AADQ;AADG,KAAvB,CAvDS,CAFb,CAoEE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAhFF,GAFJ;AAqFA,SAAO;AACLhB,IAAAA,MADK;AAELH,IAAAA,SAFK;AAGLK,IAAAA,YAHK;AAKLe,IAAAA,OAAO,EAAE,CACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAIC,gCAAqBC,UAAzB,EAAoC;AAClCC,MAAAA,YAAY,EAAE,IADoB;AAElCC,MAAAA,OAAO,EAAE,CAAC,QAAD,EAAW,uBAAX,CAFyB;AAGlC;AACAC,MAAAA,gBAAgB,EAAE,mBAJgB;AAKlCC,MAAAA,wBAAwB,EAAE,CACxB;AACA,UAAIC,MAAJ,CAAW,KAAX,CAFwB,EAGxB;AACA;AACA;AACA;AACA,UAAIA,MAAJ,CAAW,kBAAX,CAPwB;AALQ,KAApC,CAzBO,EAwCPC,MAxCO,CAwCAC,OAxCA,CALJ;AA8CL;AACA;AACAC,IAAAA,WAAW,EAAE;AAhDR,GAAP;AAkDD","sourcesContent":["import WorkboxWebpackPlugin from 'workbox-webpack-plugin';\nimport CssMinimizerPlugin from 'css-minimizer-webpack-plugin';\nimport TerserPlugin from 'terser-webpack-plugin';\nimport { Configuration } from 'webpack';\nimport { getExternals } from './get-externals';\nimport { getExposedRules } from './get-exposed-rules';\n// import { WebpackManifestPlugin } from 'webpack-manifest-plugin';\n\n// This is the production and development configuration.\n// It is focused on developer experience, fast rebuilds, and a minimal bundle.\n// eslint-disable-next-line complexity\nexport default function (externalizePeer: boolean, peers: string[], dev?: boolean): Configuration {\n  const externals = externalizePeer ? (getExternals(peers) as any) : undefined;\n  const exposedRules = externalizePeer ? undefined : getExposedRules(peers);\n\n  const module = externalizePeer\n    ? undefined\n    : {\n        rules: exposedRules,\n      };\n\n  const optimization = dev\n    ? undefined\n    : {\n        minimize: true,\n        minimizer: [\n          new TerserPlugin({\n            minify: TerserPlugin.esbuildMinify,\n            // `terserOptions` options will be passed to `esbuild`\n            // Link to options - https://esbuild.github.io/api/#minify\n            // Note: the `minify` options is true by default (and override other `minify*` options), so if you want to disable the `minifyIdentifiers` option (or other `minify*` options) please use:\n            terserOptions: {\n              minify: false,\n              minifyWhitespace: true,\n              // We don't want to minify identifiers to enable easier debugging on remote scopes when there are preview issues\n              minifyIdentifiers: false,\n              // minifyIdentifiers: true,\n              minifySyntax: true,\n            },\n            // terserOptions: {},\n          }),\n\n          // This is only used in production mode\n          // new TerserPlugin({\n          //   extractComments: false,\n          //   terserOptions: {\n          //     parse: {\n          //       // We want terser to parse ecma 8 code. However, we don't want it\n          //       // to apply any minification steps that turns valid ecma 5 code\n          //       // into invalid ecma 5 code. This is why the 'compress' and 'output'\n          //       // sections only apply transformations that are ecma 5 safe\n          //       // https://github.com/facebook/create-react-app/pull/4234\n          //       ecma: 8,\n          //     },\n          //     compress: {\n          //       ecma: 5,\n          //       warnings: false,\n          //       // Disabled because of an issue with Uglify breaking seemingly valid code:\n          //       // https://github.com/facebook/create-react-app/issues/2376\n          //       // Pending further investigation:\n          //       // https://github.com/mishoo/UglifyJS2/issues/2011\n          //       comparisons: false,\n          //       // Disabled because of an issue with Terser breaking valid code:\n          //       // https://github.com/facebook/create-react-app/issues/5250\n          //       // Pending further investigation:\n          //       // https://github.com/terser-js/terser/issues/120\n          //       inline: 2,\n          //     },\n          //     mangle: {\n          //       safari10: true,\n          //     },\n          //     output: {\n          //       ecma: 5,\n          //       comments: false,\n          //       // Turned on because emoji and regex is not minified properly using default\n          //       // https://github.com/facebook/create-react-app/issues/2488\n          //       ascii_only: true,\n          //     },\n          //   },\n          // }),\n          new CssMinimizerPlugin({\n            minimizerOptions: {\n              preset: [\n                'default',\n                {\n                  minifyFontValues: { removeQuotes: false },\n                },\n              ],\n            },\n          }),\n        ],\n        // Automatically split vendor and commons\n        // https://twitter.com/wSokra/status/969633336732905474\n        // https://medium.com/webpack/webpack-4-code-splitting-chunk-graph-and-the-splitchunks-optimization-be739a861366\n        // splitChunks: {\n        // chunks: 'all',\n        // name: false,\n        // },\n        // Keep the runtime chunk separated to enable long term caching\n        // https://twitter.com/wSokra/status/969679223278505985\n        // https://github.com/facebook/create-react-app/issues/5358\n        // runtimeChunk: {\n        // name: (entrypoint) => `runtime-${entrypoint.name}`,\n        // },\n      };\n\n  return {\n    module,\n    externals,\n    optimization,\n\n    plugins: [\n      // Generate an asset manifest file with the following content:\n      // - \"files\" key: Mapping of all asset filenames to their corresponding\n      //   output file so that tools can pick it up without having to parse\n      //   `index.html`\n      //   can be used to reconstruct the HTML if necessary\n      // new WebpackManifestPlugin({\n      //   fileName: 'asset-manifest.json',\n      //   publicPath: 'public',\n      //   generate: (seed, files, entrypoints) => {\n      //     const manifestFiles = files.reduce((manifest, file) => {\n      //       manifest[file.name] = file.path;\n      //       return manifest;\n      //     }, seed);\n      //     const entrypointFiles = entrypoints.main.filter((fileName) => !fileName.endsWith('.map'));\n\n      //     // @ts-ignore - https://github.com/shellscape/webpack-manifest-plugin/issues/276\n      //     return {\n      //       files: manifestFiles,\n      //       entrypoints: entrypointFiles,\n      //     } as Record<string, string>;\n      //   },\n      // }),\n      // Generate a service worker script that will precache, and keep up to date,\n      // the HTML & assets that are part of the webpack build.\n      new WorkboxWebpackPlugin.GenerateSW({\n        clientsClaim: true,\n        exclude: [/\\.map$/, /asset-manifest\\.json$/],\n        // importWorkboxFrom: 'cdn',\n        navigateFallback: 'public/index.html',\n        navigateFallbackDenylist: [\n          // Exclude URLs starting with /_, as they're likely an API call\n          new RegExp('^/_'),\n          // Exclude any URLs whose last part seems to be a file extension\n          // as they're likely a resource and not a SPA route.\n          // URLs containing a \"?\" character won't be blacklisted as they're likely\n          // a route with query params (e.g. auth callbacks).\n          new RegExp('/[^/?]+\\\\.[^/]+$'),\n        ],\n      }),\n    ].filter(Boolean),\n    // Turn off performance processing because we utilize\n    // our own hints via the FileSizeReporter\n    performance: false,\n  };\n}\n"]}