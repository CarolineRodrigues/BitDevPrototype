{"version":3,"sources":["use.cmd.ts"],"names":["UseCmd","constructor","config","report","ids","workspaceConfig","scopeConfig","Error","preAddingAspectFunctions","preAddingAspectsSlot","toArray","componentIds","Promise","all","map","func","flat","forEach","compId","setExtension","overrideExisting","ignoreVersion","write","dir","path","dirname","chalk","green","join"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAGO,MAAMA,MAAN,CAAgC;AAWrCC,EAAAA,WAAW,CAASC,MAAT,EAA6B;AAAA,SAApBA,MAAoB,GAApBA,MAAoB;AAAA,kDAVjC,cAUiC;AAAA,8DATrB,8CASqB;AAAA,mDARhC,aAQgC;AAAA,yDAP1B,8CAO0B;AAAA,mDANhC,EAMgC;AAAA,qDAL9B,EAK8B;AAAA,oDAJ/B,IAI+B;AAAA,uDAH5B,IAG4B;AAAA,sDAF7B,IAE6B;AAAE;;AAE9B,QAANC,MAAM,CAAC,CAACC,GAAG,GAAG,EAAP,CAAD,EAAuC;AAAA;;AACjD,UAAMF,MAAM,GAAG,KAAKA,MAAL,CAAYG,eAAZ,IAA+B,KAAKH,MAAL,CAAYI,WAA1D;;AACA,QAAI,CAACJ,MAAL,EAAa;AACX,YAAM,IAAIK,KAAJ,CAAW,yDAAX,CAAN;AACD;;AACD,UAAMC,wBAAwB,4BAAG,KAAKN,MAAL,CAAYO,oBAAf,0DAAG,sBAAkCC,OAAlC,EAAjC;AACA,QAAI,CAACF,wBAAL,EAA+B,MAAM,IAAID,KAAJ,CAAW,0DAAX,CAAN;AAC/B,UAAMI,YAAY,GAAG,CAAC,MAAMC,OAAO,CAACC,GAAR,CAAYL,wBAAwB,CAACM,GAAzB,CAA6B,CAAC,GAAGC,IAAH,CAAD,KAAcA,IAAI,CAACX,GAAD,CAA/C,CAAZ,CAAP,EAA2EY,IAA3E,EAArB;AAEAL,IAAAA,YAAY,CAACM,OAAb,CAAsBC,MAAD,IAAY;AAC/BhB,MAAAA,MAAM,CAACiB,YAAP,CACED,MADF,EAEE,EAFF,EAGE;AACEE,QAAAA,gBAAgB,EAAE,KADpB;AAEEC,QAAAA,aAAa,EAAE;AAFjB,OAHF;AAQD,KATD;AAUA,UAAMnB,MAAM,CAACoB,KAAP,CAAa;AAAEC,MAAAA,GAAG,EAAEC,gBAAKC,OAAL,CAAavB,MAAM,CAACsB,IAApB;AAAP,KAAb,CAAN;AAEA,WAAOE,iBAAMC,KAAN,CAAa,2CAClB,KAAKzB,MAAL,CAAYG,eAAZ,GAA8B,iBAA9B,GAAkD,cACnD;AACL,EAAEM,YAAY,CAACiB,IAAb,CAAkB,IAAlB,CAAwB,EAHf,CAAP;AAID;;AAtCoC","sourcesContent":["import { Command, CommandOptions } from '@teambit/cli';\nimport path from 'path';\nimport chalk from 'chalk';\nimport { ConfigMain } from '@teambit/config';\n\nexport class UseCmd implements Command {\n  name = 'use [ids...]';\n  shortDescription = 'set up aspects in the workspace/scope config';\n  group = 'collaborate';\n  description = 'set up aspects in the workspace/scope config';\n  alias = '';\n  options = [] as CommandOptions;\n  loader = true;\n  migration = true;\n  remoteOp = true;\n\n  constructor(private config: ConfigMain) {}\n\n  async report([ids = []]: [string[]]): Promise<any> {\n    const config = this.config.workspaceConfig || this.config.scopeConfig;\n    if (!config) {\n      throw new Error(`please run \"bit use\" from either a workspace or a scope`);\n    }\n    const preAddingAspectFunctions = this.config.preAddingAspectsSlot?.toArray();\n    if (!preAddingAspectFunctions) throw new Error(`can't find any registration to the preAddingAspects slot`);\n    const componentIds = (await Promise.all(preAddingAspectFunctions.map(([, func]) => func(ids)))).flat();\n\n    componentIds.forEach((compId) => {\n      config.setExtension(\n        compId,\n        {},\n        {\n          overrideExisting: false,\n          ignoreVersion: false,\n        }\n      );\n    });\n    await config.write({ dir: path.dirname(config.path) });\n\n    return chalk.green(`the following aspect(s) were saved into ${\n      this.config.workspaceConfig ? 'workspace.jsonc' : 'scopes.jsonc'\n    } file:\n${componentIds.join('\\n')}`);\n  }\n}\n"]}