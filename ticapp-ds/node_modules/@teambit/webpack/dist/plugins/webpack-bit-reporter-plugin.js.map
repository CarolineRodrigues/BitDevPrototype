{"version":3,"sources":["webpack-bit-reporter-plugin.ts"],"names":["PLUGIN_NAME","WebpackBitReporterPlugin","constructor","options","pubsub","devServerID","apply","compiler","hooks","compile","tap","event","WebpackCompilationStartedEvent","Date","now","pub","WebpackAspect","id","done","stats","WebpackCompilationDoneEvent"],"mappings":";;;;;;;;;;;;;;;;;;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAEA,MAAMA,WAAW,GAAG,iCAApB;AAEA;AACA;AACA;;AACO,MAAMC,wBAAN,CAA+B;AACpC;AAIAC,EAAAA,WAAW,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAc;AAAA;AAAA;AACvB,SAAKC,MAAL,GAAcD,OAAO,CAACC,MAAtB;AACA,SAAKC,WAAL,GAAmBF,OAAO,CAACE,WAA3B;AACD;;AAEDC,EAAAA,KAAK,CAACC,QAAD,EAAqB;AACxB;AACAA,IAAAA,QAAQ,CAACC,KAAT,CAAeC,OAAf,CAAuBC,GAAvB,CAA2BV,WAA3B,EAAwC,MAAM;AAC5C,YAAMW,KAAK,GAAG,KAAIC,wCAAJ,EAAmCC,IAAI,CAACC,GAAL,EAAnC,EAA+C;AAAET,QAAAA,WAAW,EAAE,KAAKA;AAApB,OAA/C,CAAd;AACA,WAAKD,MAAL,CAAYW,GAAZ,CAAgBC,yBAAcC,EAA9B,EAAkCN,KAAlC;AACD,KAHD,EAFwB,CAOxB;;AACAJ,IAAAA,QAAQ,CAACC,KAAT,CAAeU,IAAf,CAAoBR,GAApB,CAAwBV,WAAxB,EAAsCmB,KAAD,IAAkB;AACrD,YAAMR,KAAK,GAAG,KAAIS,qCAAJ,EAAgCP,IAAI,CAACC,GAAL,EAAhC,EAA4CK,KAA5C,EAAmD,KAAKd,WAAxD,CAAd;AACA,WAAKD,MAAL,CAAYW,GAAZ,CAAgBC,yBAAcC,EAA9B,EAAkCN,KAAlC;AACD,KAHD;AAID;;AAtBmC","sourcesContent":["import type { Compiler, Stats } from 'webpack';\nimport { WebpackCompilationDoneEvent, WebpackCompilationStartedEvent } from '../events';\nimport { WebpackAspect } from '../webpack.aspect';\n\nconst PLUGIN_NAME = 'webpack-compiler-started-plugin';\n\n/**\n * Monitors Webpack's compilation, and updates progress to Bit\n */\nexport class WebpackBitReporterPlugin {\n  // TODO: add plugin type from webpack and implement it\n  pubsub: any;\n  devServerID: string;\n\n  constructor({ options }) {\n    this.pubsub = options.pubsub;\n    this.devServerID = options.devServerID;\n  }\n\n  apply(compiler: Compiler) {\n    // \"Called before a new compilation is created.\"\n    compiler.hooks.compile.tap(PLUGIN_NAME, () => {\n      const event = new WebpackCompilationStartedEvent(Date.now(), { devServerID: this.devServerID });\n      this.pubsub.pub(WebpackAspect.id, event);\n    });\n\n    // \"Executed when the compilation has completed.\"\n    compiler.hooks.done.tap(PLUGIN_NAME, (stats: Stats) => {\n      const event = new WebpackCompilationDoneEvent(Date.now(), stats, this.devServerID);\n      this.pubsub.pub(WebpackAspect.id, event);\n    });\n  }\n}\n"]}