{"version":3,"sources":["webpack.main.runtime.ts"],"names":["WebpackMain","constructor","pubsub","workspace","bundler","logger","createDevServer","context","transformers","config","createDevServerConfig","entry","path","id","rootPath","publicPath","title","configMutator","WebpackConfigMutator","transformerContext","mode","afterMutation","runTransformersWithContext","clone","WebpackDevServer","raw","webpack","WsDevServer","mergeConfig","target","source","createBundler","initialConfigs","configs","createConfigs","targets","baseConfigFactory","WebpackBundler","metaData","factory","bundlerContext","map","baseConfig","Object","assign","devServerID","publicRoot","provider","logPublisher","createLogger","WebpackAspect","MainRuntime","PubsubAspect","WorkspaceAspect","BundlerAspect","LoggerAspect","addRuntime","Array","isArray","newConfig","reduce","acc","transformer"],"mappings":"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","sourcesContent":["import webpack, { Configuration } from 'webpack';\nimport PubsubAspect, { PubsubMain } from '@teambit/pubsub';\nimport {\n  BundlerAspect,\n  BundlerContext,\n  BundlerMain,\n  DevServer,\n  DevServerContext,\n  BundlerMode,\n  Target,\n} from '@teambit/bundler';\nimport { MainRuntime } from '@teambit/cli';\nimport { Logger, LoggerAspect, LoggerMain } from '@teambit/logger';\nimport { Workspace, WorkspaceAspect } from '@teambit/workspace';\nimport { merge } from 'webpack-merge';\nimport WsDevServer from 'webpack-dev-server';\nimport { WebpackConfigMutator } from '@teambit/webpack.modules.config-mutator';\n\nimport { configFactory as devServerConfigFactory } from './config/webpack.dev.config';\nimport { configFactory as baseConfigFactory } from './config/webpack.config';\n\nimport { WebpackAspect } from './webpack.aspect';\nimport { WebpackBundler } from './webpack.bundler';\nimport { WebpackDevServer } from './webpack.dev-server';\n\nexport type WebpackConfigTransformContext = GlobalWebpackConfigTransformContext & {\n  target: Target;\n};\n\nexport type WebpackConfigDevServerTransformContext = GlobalWebpackConfigTransformContext;\n\nexport type GlobalWebpackConfigTransformContext = {\n  mode: BundlerMode;\n};\n\nexport type WebpackConfigTransformer = (\n  config: WebpackConfigMutator,\n  context: WebpackConfigTransformContext\n) => WebpackConfigMutator;\n\nexport type WebpackConfigDevServerTransformer = (\n  config: WebpackConfigMutator,\n  context: WebpackConfigDevServerTransformContext\n) => WebpackConfigMutator;\n\nexport class WebpackMain {\n  constructor(\n    /**\n     * Pubsub extension.\n     */\n    public pubsub: PubsubMain,\n\n    /**\n     * workspace extension.\n     */\n    private workspace: Workspace,\n\n    /**\n     * bundler extension.\n     */\n    private bundler: BundlerMain,\n\n    /**\n     * Logger extension\n     */\n    public logger: Logger\n  ) {}\n\n  /**\n   * create an instance of bit-compliant webpack dev server for a set of components\n   */\n  createDevServer(context: DevServerContext, transformers: WebpackConfigTransformer[] = []): DevServer {\n    const config = this.createDevServerConfig(\n      context.entry,\n      this.workspace.path,\n      context.id,\n      context.rootPath,\n      context.publicPath,\n      context.title\n    ) as any;\n    const configMutator = new WebpackConfigMutator(config);\n    const transformerContext: GlobalWebpackConfigTransformContext = { mode: 'dev' };\n    const afterMutation = runTransformersWithContext(configMutator.clone(), transformers, transformerContext);\n    // @ts-ignore - fix this\n    return new WebpackDevServer(afterMutation.raw, webpack, WsDevServer);\n  }\n\n  mergeConfig(target: any, source: any): any {\n    return merge(target, source);\n  }\n\n  createBundler(\n    context: BundlerContext,\n    transformers: WebpackConfigTransformer[] = [],\n    initialConfigs?: webpack.Configuration[]\n  ) {\n    const transformerContext: GlobalWebpackConfigTransformContext = { mode: 'prod' };\n    // eslint-disable-next-line max-len\n    const configs =\n      initialConfigs ||\n      this.createConfigs(context.targets, baseConfigFactory, transformers, transformerContext, context);\n    return new WebpackBundler(context.targets, configs, this.logger, context.metaData, webpack);\n  }\n\n  private createConfigs(\n    targets: Target[],\n    factory: (target: Target, context: BundlerContext) => Configuration,\n    transformers: WebpackConfigTransformer[] = [],\n    transformerContext: GlobalWebpackConfigTransformContext,\n    bundlerContext: BundlerContext\n  ) {\n    return targets.map((target) => {\n      const baseConfig = factory(target, bundlerContext);\n      const configMutator = new WebpackConfigMutator(baseConfig);\n      const context = Object.assign({}, transformerContext, { target });\n      const afterMutation = runTransformersWithContext(configMutator.clone(), transformers, context);\n      return afterMutation.raw;\n    });\n  }\n\n  private createDevServerConfig(\n    entry: string[],\n    rootPath: string,\n    devServerID: string,\n    publicRoot: string,\n    publicPath: string,\n    title?: string\n  ) {\n    return devServerConfigFactory(devServerID, rootPath, entry, publicRoot, publicPath, this.pubsub, title);\n  }\n\n  static slots = [];\n\n  static runtime = MainRuntime;\n  static dependencies = [PubsubAspect, WorkspaceAspect, BundlerAspect, LoggerAspect];\n\n  static async provider([pubsub, workspace, bundler, logger]: [PubsubMain, Workspace, BundlerMain, LoggerMain]) {\n    const logPublisher = logger.createLogger(WebpackAspect.id);\n    return new WebpackMain(pubsub, workspace, bundler, logPublisher);\n  }\n}\n\nWebpackAspect.addRuntime(WebpackMain);\n\nexport function runTransformersWithContext(\n  config: WebpackConfigMutator,\n  transformers: Array<WebpackConfigTransformer | WebpackConfigDevServerTransformer> = [],\n  context: WebpackConfigTransformContext | WebpackConfigDevServerTransformContext\n): WebpackConfigMutator {\n  if (!Array.isArray(transformers)) return config;\n  const newConfig = transformers.reduce((acc, transformer) => {\n    // @ts-ignore\n    return transformer(acc, context);\n  }, config);\n  return newConfig;\n}\n"]}