{"version":3,"sources":["webpack-fallbacks.ts"],"names":["assertFallbackPath","require","resolve","bufferFallbackPath","constantsFallbackPath","cryptoFallbackPath","domainFallbackPath","httpFallbackPath","httpsFallbackPath","osFallbackPath","pathFallbackPath","punycodeFallbackPath","processFallbackPath","querystringFallbackPath","streamFallbackPath","string_decoderFallbackPath","sysFallbackPath","timersFallbackPath","ttyFallbackPath","urlFallbackPath","utilFallbackPath","vmFallbackPath","zlibFallbackPath","fallbacks","assert","buffer","constants","crypto","domain","http","https","os","path","punycode","process","querystring","stream","string_decoder","sys","timers","tty","url","util","vm","zlib","fs","net","tls","child_process"],"mappings":"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","sourcesContent":["// based on https://github1s.com/vercel/next.js/blob/canary/packages/next/build/webpack-config.ts\n// Full list of old polyfills is accessible here:\n// https://github.com/webpack/webpack/blob/2a0536cf510768111a3a6dceeb14cb79b9f59273/lib/ModuleNotFoundError.js#L13-L42\n\nconst assertFallbackPath = require.resolve('assert/');\nconst bufferFallbackPath = require.resolve('buffer/');\nconst constantsFallbackPath = require.resolve('constants-browserify');\nconst cryptoFallbackPath = require.resolve('crypto-browserify');\nconst domainFallbackPath = require.resolve('domain-browser');\nconst httpFallbackPath = require.resolve('stream-http');\nconst httpsFallbackPath = require.resolve('https-browserify');\nconst osFallbackPath = require.resolve('os-browserify/browser');\nconst pathFallbackPath = require.resolve('path-browserify');\nconst punycodeFallbackPath = require.resolve('punycode/');\nconst processFallbackPath = require.resolve('process/browser');\n// Handled in separate alias\nconst querystringFallbackPath = require.resolve('querystring-es3');\nconst streamFallbackPath = require.resolve('stream-browserify');\nconst string_decoderFallbackPath = require.resolve('string_decoder/');\nconst sysFallbackPath = require.resolve('util/');\nconst timersFallbackPath = require.resolve('timers-browserify');\nconst ttyFallbackPath = require.resolve('tty-browserify');\n// Handled in separate alias\nconst urlFallbackPath = require.resolve('url/');\nconst utilFallbackPath = require.resolve('util/');\nconst vmFallbackPath = require.resolve('vm-browserify');\nconst zlibFallbackPath = require.resolve('browserify-zlib');\n\nexport const fallbacks = {\n  assert: assertFallbackPath,\n  buffer: bufferFallbackPath,\n  constants: constantsFallbackPath,\n  crypto: cryptoFallbackPath,\n  domain: domainFallbackPath,\n  http: httpFallbackPath,\n  https: httpsFallbackPath,\n  os: osFallbackPath,\n  path: pathFallbackPath,\n  punycode: punycodeFallbackPath,\n  process: processFallbackPath,\n  querystring: querystringFallbackPath,\n  stream: streamFallbackPath,\n  string_decoder: string_decoderFallbackPath,\n  sys: sysFallbackPath,\n  timers: timersFallbackPath,\n  tty: ttyFallbackPath,\n  url: urlFallbackPath,\n  util: utilFallbackPath,\n  vm: vmFallbackPath,\n  zlib: zlibFallbackPath,\n  fs: false,\n  net: false,\n  tls: false,\n  child_process: false,\n  // file: false,\n  // module: false,\n  // pnpapi: false,\n  // readline: false,\n  // worker_threads: false,\n} as const;\n"]}