{"version":3,"sources":["default-doc-reader.ts"],"names":["DefaultDocReader","constructor","pkg","compiler","workspace","read","path","contents","component","packageName","getPackageName","distPath","getDistPathBySrcPath","docsModule","require","Doc","from","labels","default","description","abstract","displayName","componentDisplayName","isFormatSupported","format","supportedExtensions","includes"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAKA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAGO,MAAMA,gBAAN,CAA4C;AACjDC,EAAAA,WAAW,CAASC,GAAT,EAA+BC,QAA/B,EAA+DC,SAA/D,EAAqF;AAAA,SAA5EF,GAA4E,GAA5EA,GAA4E;AAAA,SAAtDC,QAAsD,GAAtDA,QAAsD;AAAA,SAAtBC,SAAsB,GAAtBA,SAAsB;AAAA,iEAcjE,CAAC,KAAD,EAAQ,KAAR,EAAe,MAAf,EAAuB,MAAvB,CAdiE;AAAE;;AAExF,QAAJC,IAAI,CAACC,IAAD,EAAeC,QAAf,EAAiCC,SAAjC,EAAuD;AAAA;;AAC/D,UAAMC,WAAW,GAAG,KAAKP,GAAL,CAASQ,cAAT,CAAwBF,SAAxB,CAApB;AACA,UAAMG,QAAQ,GAAG,KAAKR,QAAL,CAAcS,oBAAd,CAAmCJ,SAAnC,EAA8CF,IAA9C,CAAjB,CAF+D,CAG/D;;AACA,UAAMO,UAAU,GAAGC,OAAO,CAAC,qBAAS,GAAE,KAAKV,SAAL,CAAeE,IAAK,iBAAgBG,WAAY,IAAGE,QAAS,EAAvE,CAAD,CAA1B;;AACA,WAAOI,oBAAIC,IAAJ,CAASV,IAAT,EAAe;AACpBW,MAAAA,MAAM,EAAEJ,UAAU,CAACI,MAAX,4BAAqBJ,UAAU,CAACK,OAAhC,wDAAqB,oBAAoBD,MAAzC,CADY;AAEpBE,MAAAA,WAAW,EAAEN,UAAU,CAACO,QAAX,6BAAuBP,UAAU,CAACK,OAAlC,yDAAuB,qBAAoBE,QAA3C,KAAuDP,UAAU,CAACM,WAF3D;AAGpBE,MAAAA,WAAW,EAAER,UAAU,CAACQ,WAAX,6BAA0BR,UAAU,CAACK,OAArC,yDAA0B,qBAAoBI,oBAA9C;AAHO,KAAf,CAAP;AAKD;;AAIDC,EAAAA,iBAAiB,CAACC,MAAD,EAAiB;AAChC,WAAO,KAAKC,mBAAL,CAAyBC,QAAzB,CAAkCF,MAAlC,CAAP;AACD;;AAnBgD","sourcesContent":["import { resolve } from 'path';\nimport type { PkgMain } from '@teambit/pkg';\nimport type { Component } from '@teambit/component';\nimport type { CompilerMain } from '@teambit/compiler';\nimport type { Workspace } from '@teambit/workspace';\nimport { Doc } from '@teambit/docs.entities.doc';\nimport { DocReader } from './doc-reader';\n\nexport class DefaultDocReader implements DocReader {\n  constructor(private pkg: PkgMain, private compiler: CompilerMain, private workspace: Workspace) {}\n\n  async read(path: string, contents: Buffer, component: Component) {\n    const packageName = this.pkg.getPackageName(component);\n    const distPath = this.compiler.getDistPathBySrcPath(component, path);\n    // eslint-disable-next-line\n    const docsModule = require(resolve(`${this.workspace.path}/node_modules/${packageName}/${distPath}`));\n    return Doc.from(path, {\n      labels: docsModule.labels || docsModule.default?.labels,\n      description: docsModule.abstract || docsModule.default?.abstract || docsModule.description,\n      displayName: docsModule.displayName || docsModule.default?.componentDisplayName,\n    });\n  }\n\n  readonly supportedExtensions = ['.ts', '.js', '.jsx', '.tsx'];\n\n  isFormatSupported(format: string) {\n    return this.supportedExtensions.includes(format);\n  }\n}\n"]}