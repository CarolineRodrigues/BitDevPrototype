"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

require("core-js/modules/es.symbol.description.js");

require("core-js/modules/es.array.iterator.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Overview = Overview;

function _react() {
  const data = _interopRequireWildcard(require("react"));

  _react = function () {
    return data;
  };

  return data;
}

function _lodash() {
  const data = _interopRequireDefault(require("lodash.flatten"));

  _lodash = function () {
    return data;
  };

  return data;
}

function _component() {
  const data = require("@teambit/component");

  _component = function () {
    return data;
  };

  return data;
}

function _previewUi() {
  const data = require("@teambit/preview.ui.component-preview");

  _previewUi = function () {
    return data;
  };

  return data;
}

function _designUiSurfaces() {
  const data = require("@teambit/design.ui.surfaces.status-message-card");

  _designUiSurfaces = function () {
    return data;
  };

  return data;
}

function _componentUi() {
  const data = require("@teambit/component.ui.component-meta");

  _componentUi = function () {
    return data;
  };

  return data;
}

function _lanesUi() {
  const data = require("@teambit/lanes.ui.lanes");

  _lanesUi = function () {
    return data;
  };

  return data;
}

function _designUi() {
  const data = require("@teambit/design.ui.separator");

  _designUi = function () {
    return data;
  };

  return data;
}

function _overviewModule() {
  const data = _interopRequireDefault(require("./overview.module.scss"));

  _overviewModule = function () {
    return data;
  };

  return data;
}

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const ENV_LIST_WITH_DOCS_TEMPLATE = ['react', 'env', 'aspect', 'lit', 'html', 'node', 'mdx', 'react-native']; // envs using react based docs

const ENV_ASPECT_NAME = 'teambit.envs/envs';

function Overview({
  titleBadges
}) {
  var _componentDescriptor$, _component$preview;

  const component = (0, _react().useContext)(_component().ComponentContext);
  const componentDescriptor = (0, _component().useComponentDescriptor)();
  const lanesModel = (0, _lanesUi().useLanesContext)();
  const currentLane = lanesModel === null || lanesModel === void 0 ? void 0 : lanesModel.currentLane;
  const envType = componentDescriptor === null || componentDescriptor === void 0 ? void 0 : (_componentDescriptor$ = componentDescriptor.get(ENV_ASPECT_NAME)) === null || _componentDescriptor$ === void 0 ? void 0 : _componentDescriptor$.type;
  const showHeaderOutsideIframe = (component === null || component === void 0 ? void 0 : (_component$preview = component.preview) === null || _component$preview === void 0 ? void 0 : _component$preview.includesEnvTemplate) === false || !ENV_LIST_WITH_DOCS_TEMPLATE.includes(envType);
  if ((component === null || component === void 0 ? void 0 : component.buildStatus) === 'pending' && (component === null || component === void 0 ? void 0 : component.host) === 'teambit.scope/scope') return /*#__PURE__*/_react().default.createElement(_designUiSurfaces().StatusMessageCard, {
    style: {
      margin: 'auto'
    },
    status: "PROCESSING",
    title: "component preview pending"
  }, "this might take some time");
  if ((component === null || component === void 0 ? void 0 : component.buildStatus) === 'failed' && (component === null || component === void 0 ? void 0 : component.host) === 'teambit.scope/scope') return /*#__PURE__*/_react().default.createElement(_designUiSurfaces().StatusMessageCard, {
    style: {
      margin: 'auto'
    },
    status: "FAILURE",
    title: "failed to get component preview "
  });

  if (showHeaderOutsideIframe) {
    const badges = (0, _lodash().default)(titleBadges.values());
    return /*#__PURE__*/_react().default.createElement("div", {
      className: _overviewModule().default.overviewWrapper
    }, /*#__PURE__*/_react().default.createElement(_lanesUi().LaneBreadcrumb, {
      lane: currentLane
    }), /*#__PURE__*/_react().default.createElement(_designUi().Separator, {
      isPresentational: true
    }), /*#__PURE__*/_react().default.createElement(_componentUi().ComponentOverview, {
      className: _overviewModule().default.componentOverviewBlock,
      displayName: component.displayName,
      version: component.version,
      abstract: component.description,
      labels: component.labels,
      packageName: component.packageName,
      titleBadges: badges,
      componentDescriptor: componentDescriptor
    }), /*#__PURE__*/_react().default.createElement(_previewUi().ComponentPreview, {
      component: component,
      style: {
        width: '100%',
        height: '100%'
      },
      previewName: "overview",
      fullContentHeight: true,
      scrolling: "no"
    }));
  }

  return currentLane ? /*#__PURE__*/_react().default.createElement("div", {
    className: _overviewModule().default.overviewWrapper
  }, /*#__PURE__*/_react().default.createElement(_lanesUi().LaneBreadcrumb, {
    lane: currentLane
  }), /*#__PURE__*/_react().default.createElement(_designUi().Separator, {
    isPresentational: true
  }), /*#__PURE__*/_react().default.createElement(_previewUi().ComponentPreview, {
    component: component,
    style: {
      width: '100%',
      height: '100%'
    },
    previewName: "overview",
    fullContentHeight: true,
    scrolling: "no"
  })) : /*#__PURE__*/_react().default.createElement(_previewUi().ComponentPreview, {
    component: component,
    style: {
      width: '100%',
      height: '100%'
    },
    previewName: "overview",
    fullContentHeight: true
  });
}

//# sourceMappingURL=overview.js.map