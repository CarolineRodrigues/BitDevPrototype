"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

require("core-js/modules/es.array.iterator.js");

require("core-js/modules/es.promise.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.DocsUI = void 0;

function _defineProperty2() {
  const data = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

  _defineProperty2 = function () {
    return data;
  };

  return data;
}

function _component() {
  const data = require("@teambit/component");

  _component = function () {
    return data;
  };

  return data;
}

function _harmony() {
  const data = require("@teambit/harmony");

  _harmony = function () {
    return data;
  };

  return data;
}

function _ui() {
  const data = require("@teambit/ui");

  _ui = function () {
    return data;
  };

  return data;
}

function _docs() {
  const data = require("./docs.aspect");

  _docs = function () {
    return data;
  };

  return data;
}

function _overview() {
  const data = require("./overview.section");

  _overview = function () {
    return data;
  };

  return data;
}

class DocsUI {
  constructor(titleBadgeSlot) {
    this.titleBadgeSlot = titleBadgeSlot;
  }
  /**
   * register a new title badge into the overview section of a component.
   */


  registerTitleBadge(...titleBadge) {
    this.titleBadgeSlot.register(titleBadge);
    return this;
  }
  /**
   * list all title badges registered.
   */


  listTitleBadges() {
    return this.titleBadgeSlot;
  }

  static async provider([component], config, [titleBadgeSlot]) {
    const docs = new DocsUI(titleBadgeSlot);
    const section = new (_overview().OverviewSection)(docs);
    component.registerRoute(section.route);
    component.registerNavigation(section.navigationLink, section.order);
    return docs;
  }

}

exports.DocsUI = DocsUI;
(0, _defineProperty2().default)(DocsUI, "dependencies", [_component().ComponentAspect]);
(0, _defineProperty2().default)(DocsUI, "runtime", _ui().UIRuntime);
(0, _defineProperty2().default)(DocsUI, "slots", [_harmony().Slot.withType()]);
var _default = DocsUI;
exports.default = _default;

_docs().DocsAspect.addRuntime(DocsUI);

//# sourceMappingURL=docs.ui.runtime.js.map